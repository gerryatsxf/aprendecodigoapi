var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.064,1,2.742]],["body/modules/AppModule.html",[0,1.457,1,5.538,2,1.226,3,1.283,4,1.411,5,1.411,6,1.283,7,2.334,8,1.411,9,2.633,10,2.633,11,2.633,12,4.259,13,0.016,14,4.259,15,4.259,16,4.259,17,3.731,18,3.975,19,3.975,20,4.259,21,3.731,22,4.259,23,2.069,24,1.411,25,1.411,26,0.109,27,0.095,28,0.095,29,2.364,30,2.424,31,0.757,32,0.657,33,3.042,34,3.042,35,3.042,36,3.042,37,3.042,38,3.042,39,1.344,40,1.653,41,2.364,42,1.564,43,2.633,44,3.042,45,2.364,46,2.364,47,1.868,48,2.364,49,1.868,50,1.868,51,3.042,52,3.042,53,1.122,54,2.364,55,2.633,56,3.042,57,3.042,58,3.042,59,3.042,60,3.042,61,1.653,62,3.042,63,1.122,64,0.122,65,0.157,66,0.009,67,0.009]],["title/injectables/AppService.html",[22,2.538,68,0.981]],["body/injectables/AppService.html",[13,0.015,22,4.25,26,0.188,27,0.164,28,0.164,31,0.536,32,1.136,64,0.212,65,0.271,66,0.013,67,0.013,68,1.642,69,2.219,70,4.556,71,0.598,72,2.188,73,7.287,74,0.768,75,5.263,76,1.783,77,1.453,78,1.71,79,5.263,80,5.263]],["title/controllers/AuthController.html",[81,1.789,82,2.742]],["body/controllers/AuthController.html",[13,0.016,26,0.12,27,0.105,28,0.105,31,0.568,32,0.723,63,1.236,64,0.135,65,0.173,66,0.009,67,0.009,71,0.381,72,1.62,74,0.489,76,1.135,78,1.977,81,1.554,82,3.4,83,2.9,84,2.205,85,3.351,86,3.104,87,6.085,88,1.236,89,4.784,90,3.351,91,3.497,92,3.966,93,4.757,94,2.382,95,2.9,96,2.205,97,1.291,98,3.426,99,2.9,100,3.351,101,3.351,102,1.931,103,3.351,104,3.351,105,3.351,106,3.351,107,3.351,108,3.351,109,4.335,110,2.9,111,3.351,112,3.351,113,3.351,114,4.141,115,6.085,116,4.728,117,4.784,118,5.267,119,4.784,120,4.784,121,3.351,122,3.351,123,4.784,124,4.784,125,4.784,126,3.351,127,3.351,128,3.351,129,2.382,130,3.351,131,2.9,132,3.351,133,3.351,134,3.351]],["title/modules/AuthModule.html",[0,1.064,12,2.538]],["body/modules/AuthModule.html",[0,1.512,2,1.309,3,1.37,4,1.508,5,1.508,6,1.37,7,2.424,8,2.544,12,4.978,13,0.016,21,3.818,23,2.171,24,1.508,25,1.508,26,0.116,27,0.102,28,0.102,30,2.981,31,0.745,32,0.702,45,2.525,46,3.636,47,1.996,53,1.726,63,1.726,64,0.131,65,0.168,66,0.009,67,0.009,82,3.899,98,4.538,99,2.813,135,2.813,136,2.813,137,2.813,138,2.813,139,4.067,140,3.818,141,4.358,142,2.525,143,3.25,144,4.68,145,2.31,146,3.25,147,2.525,148,3.25,149,2.813,150,4.184,151,3.25,152,2.525,153,2.525,154,3.25,155,3.636,156,2.525,157,2.813,158,2.813,159,2.813,160,2.813,161,2.525,162,2.813,163,2.813,164,3.25]],["title/injectables/AuthService.html",[68,0.981,98,2.368]],["body/injectables/AuthService.html",[13,0.016,26,0.122,27,0.107,28,0.107,31,0.574,32,0.736,53,2.389,64,0.137,65,0.176,66,0.01,67,0.01,68,1.231,69,1.437,71,0.387,72,1.64,74,0.706,76,1.155,77,1.089,78,1.992,86,3.004,91,3.061,98,2.973,140,2.791,147,2.648,165,2.95,166,6.132,167,2.246,168,3.408,169,3.657,170,6.922,171,3.408,172,1.257,173,1.062,174,0.474,175,1.155,176,3.408,177,2.648,178,3.246,179,1.581,180,3.408,181,3.762,182,2.49,183,3.061,184,3.408,185,5.307,186,3.408,187,4.842,188,3.408,189,3.408,190,2.243,191,3.408,192,2.95,193,3.408,194,3.408,195,3.408,196,3.408,197,4.191,198,3.408,199,3.408,200,3.408,201,1.852,202,3.408]],["title/classes/Availability.html",[65,0.199,203,2.368]],["body/classes/Availability.html",[13,0.016,26,0.132,27,0.115,28,0.115,31,0.599,42,2.634,61,2.008,64,0.206,65,0.328,66,0.01,67,0.01,71,0.42,74,0.926,77,1.624,88,2.343,174,0.96,190,3.371,201,3.197,203,3.146,204,0.798,205,2.87,206,1.251,207,3.025,208,3.025,209,4.182,210,3.612,211,3.694,212,3.694,213,3.694,214,4.433,215,3.694,216,3.662,217,3.197,218,3.197,219,3.694,220,1.899,221,3.197,222,3.981,223,4.435,224,3.642,225,1.802,226,2.87,227,2.626,228,2.431,229,2.626,230,2.626,231,2.626,232,2.626,233,2.626,234,2.626,235,2.626,236,2.268,237,3.197,238,1.714,239,1.736,240,1.714,241,2.626,242,2.626,243,2.626]],["title/modules/AvailabilityModule.html",[0,1.064,14,2.538]],["body/modules/AvailabilityModule.html",[0,1.837,2,1.909,3,1.998,4,2.198,5,2.198,6,1.998,7,2.944,8,3.09,13,0.015,14,4.959,23,2.806,24,2.198,25,2.198,26,0.169,27,0.148,28,0.148,31,0.616,32,1.023,63,1.748,64,0.191,65,0.244,66,0.012,67,0.012,244,4.102,245,4.102,246,4.102,247,4.529,248,4.739,249,4.739]],["title/injectables/AvailabilityService.html",[68,0.981,247,2.223]],["body/injectables/AvailabilityService.html",[13,0.016,26,0.078,27,0.068,28,0.068,31,0.499,32,0.471,42,2.744,50,1.34,53,2.78,66,0.007,67,0.007,68,0.555,69,0.92,71,0.248,72,1.172,74,0.714,76,1.658,77,1.389,78,1.845,172,1.277,173,1.079,174,0.481,175,1.172,201,1.186,203,1.34,208,1.122,209,1.551,216,1.995,226,1.696,227,1.551,228,3.512,229,1.551,230,1.551,231,1.551,232,1.551,233,1.551,234,1.551,235,1.551,236,2.641,241,2.46,242,2.46,247,1.258,250,1.551,251,3.342,252,2.689,253,4.301,254,3.461,255,2.183,256,1.696,257,2.183,258,2.183,259,3.461,260,2.183,261,1.889,262,2.183,263,3.723,264,1.696,265,3.48,266,2.183,267,2.747,268,3.461,269,2.996,270,2.183,271,2.996,272,2.183,273,3.461,274,2.183,275,1.696,276,1.889,277,3.723,278,4.895,279,3.461,280,3.221,281,2.183,282,3.461,283,2.183,284,4.301,285,1.889,286,4.301,287,3.723,288,3.461,289,2.183,290,3.058,291,3.48,292,3.461,293,1.551,294,2.183,295,3.461,296,2.689,297,2.183,298,1.34,299,2.183,300,2.183,301,1.436,302,2.183,303,2.183,304,1.696,305,2.183,306,2.183,307,1.889,308,2.183,309,2.183,310,3.461,311,2.183,312,2.183,313,3.461,314,2.183,315,2.183,316,3.461,317,1.889,318,3.461,319,2.46,320,3.461,321,2.183,322,1.889,323,2.183,324,2.183,325,2.183,326,2.183,327,2.183,328,2.183,329,2.183,330,2.183,331,3.461,332,2.183,333,3.461,334,2.183,335,3.461,336,2.996,337,2.183,338,2.183,339,2.183,340,2.996,341,2.183,342,2.996,343,2.183]],["title/classes/BookRequestResponse.html",[65,0.199,344,2.538]],["body/classes/BookRequestResponse.html",[13,0.015,26,0.175,27,0.153,28,0.153,31,0.629,64,0.197,65,0.252,66,0.012,67,0.012,71,0.557,74,0.714,88,1.805,97,1.886,174,0.941,204,1.057,206,1.507,344,4.45,345,5.344,346,4.237,347,3.562,348,4.237,349,6.174,350,4.45,351,4.895,352,3.791,353,3.803,354,2.517,355,2.271]],["title/classes/BusySlotDto.html",[65,0.199,356,2.742]],["body/classes/BusySlotDto.html",[13,0.015,26,0.185,27,0.162,28,0.162,64,0.208,65,0.267,66,0.013,67,0.013,71,0.588,74,0.932,174,0.889,204,1.117,206,1.56,238,3.217,239,2.453,240,3.217,355,2.399,356,4.542,357,4.563,358,6.002,359,3.176,360,4.018,361,4.018]],["title/classes/Calendar.html",[65,0.199,362,2.538]],["body/classes/Calendar.html",[13,0.014,26,0.211,27,0.185,28,0.185,64,0.238,65,0.305,66,0.014,67,0.014,204,1.278,362,4.56,363,5.122]],["title/controllers/CalendarController.html",[81,1.789,364,2.742]],["body/controllers/CalendarController.html",[13,0.016,26,0.158,27,0.138,28,0.138,31,0.696,32,0.955,63,1.631,64,0.178,65,0.228,66,0.011,67,0.011,71,0.503,72,1.959,74,0.645,76,1.498,77,1.301,78,1.437,81,2.99,84,2.91,88,1.631,94,3.143,96,2.91,97,1.704,102,2.549,116,3.436,179,2.051,362,2.91,364,4.111,365,3.827,366,5.312,367,4.422,368,4.422,369,3.827,370,3.503,371,3.827,372,2.715,373,3.436,374,3.436,375,4.494,376,4.422,377,4.422,378,5.006,379,3.143,380,4.494,381,3.436,382,4.422,383,4.422]],["title/modules/CalendarModule.html",[0,1.064,15,2.538]],["body/modules/CalendarModule.html",[0,1.814,2,1.857,3,1.944,4,2.139,5,2.139,6,1.944,7,2.906,8,3.051,13,0.015,15,4.928,23,2.757,24,2.139,25,2.139,26,0.165,27,0.144,28,0.144,31,0.67,32,0.995,63,2.192,64,0.186,65,0.238,66,0.012,67,0.012,364,4.675,370,4.254,371,3.991,384,3.991,385,3.991,386,3.991,387,4.61,388,4.61]],["title/injectables/CalendarService.html",[68,0.981,370,2.096]],["body/injectables/CalendarService.html",[13,0.016,26,0.079,27,0.069,28,0.069,31,0.609,32,0.477,39,0.977,42,1.137,50,1.358,53,1.819,64,0.089,65,0.114,66,0.007,67,0.007,68,0.889,69,0.932,71,0.251,72,1.185,74,0.931,76,2.026,77,1.586,78,2.015,86,2.012,91,1.9,167,2.012,172,1.981,173,1.78,174,0.747,175,1.819,178,2.5,183,1.202,201,2.357,206,0.854,208,1.137,238,2.287,239,1.935,240,2.492,251,3.831,252,2.717,256,2.717,267,0.932,277,1.914,280,1.455,301,1.455,354,1.137,362,1.455,366,3.831,370,1.9,379,1.572,389,1.718,390,3.535,391,2.147,392,4.338,393,3.755,394,2.717,395,3.497,396,3.497,397,3.535,398,2.211,399,2.211,400,2.211,401,1.914,402,5.371,403,2.211,404,2.211,405,3.027,406,2.211,407,3.027,408,4.252,409,2.211,410,1.455,411,3.027,412,1.718,413,3.497,414,2.211,415,1.358,416,2.211,417,1.914,418,1.455,419,1.572,420,1.914,421,1.914,422,1.914,423,1.914,424,1.914,425,1.718,426,1.914,427,1.914,428,1.914,429,1.718,430,3.027,431,3.027,432,3.027,433,3.027,434,3.027,435,2.717,436,1.718,437,3.027,438,1.914,439,3.755,440,1.914,441,3.027,442,1.914,443,1.914,444,1.914,445,1.914,446,1.914,447,1.914,448,1.914,449,1.914,450,1.718,451,1.914,452,1.914,453,1.914,454,1.914,455,1.914,456,1.914,457,1.718,458,2.211,459,1.914,460,2.211,461,2.211,462,2.211,463,2.211,464,2.211,465,2.211,466,2.211,467,1.572,468,3.497,469,2.211,470,3.497,471,2.211,472,2.211,473,2.211,474,2.211,475,2.211,476,2.211,477,2.211,478,2.211,479,2.211,480,2.211,481,2.211,482,2.211]],["title/classes/CreateAvailabilityDto.html",[65,0.199,483,2.742]],["body/classes/CreateAvailabilityDto.html",[13,0.014,26,0.21,27,0.184,28,0.184,64,0.237,65,0.304,66,0.014,67,0.014,204,1.271,483,4.911,484,5.097,485,4.575]],["title/classes/CreateCalendarDto.html",[65,0.199,397,2.538]],["body/classes/CreateCalendarDto.html",[13,0.016,26,0.164,27,0.144,28,0.144,31,0.604,64,0.185,65,0.306,66,0.012,67,0.012,71,0.522,74,0.864,77,1.706,88,2.187,97,1.77,173,2.046,174,0.965,204,0.992,206,1.447,214,4.031,225,2.24,352,4.031,354,3.375,397,3.901,486,5.682,487,3.568,488,5.928,489,4.593,490,4.593,491,3.265,492,4.593,493,4.593,494,4.593]],["title/classes/CreateMeetingRequestDto.html",[65,0.199,495,2.538]],["body/classes/CreateMeetingRequestDto.html",[13,0.015,26,0.156,27,0.136,28,0.136,31,0.444,64,0.175,65,0.225,66,0.011,67,0.011,71,0.495,74,0.835,88,2.113,97,1.679,174,1.028,204,0.941,206,1.398,239,1.94,347,3.428,348,4.958,352,3.93,354,2.945,355,2.021,495,4.211,496,4.972,497,2.867,498,4.336,499,5.884,500,5.728,501,4.357,502,5.487,503,4.972,504,4.451,505,3.771,506,4.357]],["title/classes/CreateMeetingResultDto.html",[65,0.199,507,2.742]],["body/classes/CreateMeetingResultDto.html",[13,0.016,26,0.102,27,0.089,28,0.089,64,0.115,65,0.147,66,0.008,67,0.008,71,0.324,74,1.088,77,1.698,174,1.076,201,2.764,204,0.616,206,1.038,347,3.482,467,3.615,496,5.832,507,3.024,508,2.469,509,5.086,510,5.086,511,5.086,512,4.402,513,5.086,514,4.402,515,5.086,516,5.086,517,5.086,518,5.086,519,5.086,520,5.086,521,5.086,522,5.22,523,2.853,524,2.853,525,2.853,526,2.853,527,6.155,528,2.853,529,2.853,530,2.853,531,2.853,532,2.853,533,2.853,534,2.853,535,2.853,536,2.853,537,2.853,538,2.853,539,2.853,540,2.853,541,2.853,542,2.853,543,4.253,544,2.853,545,2.853,546,2.853,547,2.853,548,2.853,549,2.853,550,2.853,551,2.853]],["title/classes/CreatePaymentDto.html",[65,0.199,552,2.538]],["body/classes/CreatePaymentDto.html",[13,0.015,26,0.197,27,0.172,28,0.172,64,0.222,65,0.284,66,0.013,67,0.013,71,0.626,74,0.803,77,1.494,156,5.538,174,0.766,204,1.189,206,1.621,552,4.369,553,5.747,554,4.279,555,5.507]],["title/classes/CreateSessionRequestDto.html",[65,0.199,556,2.538]],["body/classes/CreateSessionRequestDto.html",[13,0.015,26,0.174,27,0.152,28,0.152,64,0.196,65,0.251,66,0.012,67,0.012,71,0.554,74,0.984,77,1.386,174,0.939,175,2.086,182,3.646,204,1.053,206,1.503,208,3.471,239,2.402,497,3.208,498,4.145,556,4.052,557,6.138,558,5.245,559,4.219,560,4.219,561,4.875,562,4.219]],["title/classes/DateTimeDto.html",[65,0.199,418,2.538]],["body/classes/DateTimeDto.html",[13,0.016,26,0.074,27,0.065,28,0.065,42,1.069,53,1.922,64,0.084,65,0.107,66,0.007,67,0.007,71,0.236,72,1.128,74,0.974,76,1.613,77,1.565,78,1.547,167,0.965,172,1.757,173,1.485,174,0.893,175,1.613,204,0.449,206,0.813,208,3.12,236,2.045,239,2.262,261,3.606,264,2.588,265,2.367,267,2.008,276,2.883,280,1.368,287,5.252,290,2.367,291,1.478,298,2.045,301,3.134,307,6.086,319,2.367,336,4.813,340,1.8,342,2.883,355,1.545,366,3.701,394,2.588,418,3.134,419,4.822,457,1.616,498,3.726,505,3.606,563,5.27,564,1.8,565,4.166,566,4.166,567,6.958,568,4.166,569,3.331,570,4.166,571,3.331,572,2.08,573,2.08,574,2.08,575,2.08,576,2.08,577,2.08,578,2.08,579,1.368,580,3.331,581,3.331,582,3.331,583,3.701,584,3.331,585,3.331,586,3.331,587,3.331,588,3.331,589,3.331,590,3.331,591,3.331,592,3.331,593,3.331,594,3.331,595,3.331,596,2.08,597,2.08,598,3.331,599,2.08,600,2.08,601,2.08,602,2.08,603,2.08,604,2.08,605,2.08,606,3.331,607,3.331,608,2.08,609,2.08,610,2.08,611,2.08,612,2.08,613,2.883,614,2.08,615,1.8,616,2.08,617,2.08,618,1.8,619,2.08,620,2.08,621,2.08,622,1.8,623,2.08,624,2.08,625,2.08,626,2.08]],["title/modules/DateTimeModule.html",[0,1.064,16,2.538]],["body/modules/DateTimeModule.html",[0,1.841,2,2.239,7,2.456,13,0.016,16,4.393,26,0.198,27,0.174,28,0.174,31,0.566,32,1.2,43,4.811,63,2.05,64,0.224,65,0.287,66,0.013,67,0.013,563,4.319,627,5.558]],["title/modules/EncryptionModule.html",[0,1.064,139,2.368]],["body/modules/EncryptionModule.html",[0,1.824,2,1.879,3,1.967,4,2.164,5,2.164,6,1.967,7,2.922,8,3.068,13,0.015,23,2.777,24,2.164,25,2.164,26,0.167,27,0.146,28,0.146,31,0.674,32,1.007,47,2.864,64,0.188,65,0.24,66,0.012,67,0.012,139,4.611,140,4.519,150,3.94,628,4.037,629,4.037,630,4.665,631,4.665,632,4.665]],["title/injectables/EncryptionService.html",[68,0.981,140,2.223]],["body/injectables/EncryptionService.html",[13,0.016,26,0.142,27,0.124,28,0.124,31,0.622,32,0.856,47,2.435,64,0.16,65,0.204,66,0.011,67,0.011,68,1.368,69,1.672,71,0.451,72,1.822,74,0.89,76,1.822,77,1.674,78,1.747,86,3.273,91,3.557,102,2.285,140,3.1,150,4.307,167,1.839,172,2.251,173,1.903,174,0.849,175,2.068,179,1.839,633,3.432,634,6.104,635,6.104,636,3.965,637,3.965,638,5.379,639,6.104,640,6.545,641,3.965,642,5.379,643,6.104,644,3.965,645,3.432,646,3.965,647,3.965]],["title/controllers/FreeSlotController.html",[81,1.789,648,2.742]],["body/controllers/FreeSlotController.html",[13,0.016,26,0.121,27,0.106,28,0.106,31,0.703,32,0.73,39,2.127,40,2.615,53,1.246,63,1.246,64,0.136,65,0.174,66,0.009,67,0.009,71,0.384,72,1.63,74,0.493,76,1.145,77,1.374,78,1.098,81,1.568,84,2.224,86,2.6,88,1.246,94,2.402,96,2.224,97,1.302,167,1.568,169,3.046,172,1.246,173,1.5,174,0.78,175,1.145,177,2.626,178,2.774,179,2.232,182,1.737,183,1.836,208,2.475,265,2.402,267,1.425,293,2.402,298,2.075,301,3.688,354,2.475,355,1.568,357,3.167,372,2.075,373,2.626,374,2.626,375,3.739,381,2.626,648,3.421,649,2.925,650,3.739,651,4.852,652,2.925,653,5.016,654,3.379,655,5.588,656,3.739,657,3.739,658,4.813,659,4.813,660,3.379,661,3.379,662,2.402,663,4.813,664,2.882,665,2.224,666,4.813,667,3.379,668,3.379,669,4.166,670,3.379,671,1.948,672,3.379,673,3.379,674,3.379,675,3.379,676,3.379,677,3.379,678,4.813,679,3.379,680,3.379,681,3.379]],["title/classes/FreeSlotDto.html",[65,0.199,682,2.742]],["body/classes/FreeSlotDto.html",[13,0.015,26,0.172,27,0.15,28,0.15,42,3.63,64,0.194,65,0.248,66,0.012,67,0.012,71,0.547,74,1.03,174,0.982,204,1.04,206,1.492,238,3.114,239,2.391,240,3.114,241,4.771,242,4.771,355,2.234,359,2.957,360,3.742,361,3.742,682,4.344,683,6.307,684,4.816,685,4.816]],["title/modules/FreeSlotModule.html",[0,1.064,17,2.223]],["body/modules/FreeSlotModule.html",[0,1.704,2,1.635,3,1.712,4,1.883,5,1.883,6,1.712,7,2.73,8,1.883,13,0.016,17,4.427,21,4.095,23,2.535,24,1.883,25,1.883,26,0.145,27,0.127,28,0.127,30,2.97,31,0.724,32,0.877,39,2.415,40,2.206,45,3.154,63,2.016,64,0.163,65,0.209,66,0.011,67,0.011,247,4.095,357,2.671,370,3.861,648,4.391,664,3.653,665,2.671,686,3.514,687,4.06,688,3.514,689,4.06,690,4.06,691,3.514,692,3.514]],["title/injectables/FreeSlotService.html",[68,0.981,664,1.983]],["body/injectables/FreeSlotService.html",[13,0.016,26,0.091,27,0.08,28,0.08,31,0.694,32,0.551,39,1.728,40,2.584,42,1.312,53,2.461,61,1.387,64,0.103,65,0.202,66,0.008,67,0.008,68,0.994,69,1.076,71,0.29,72,1.325,74,0.57,76,0.865,77,0.88,78,2.05,86,2.205,167,1.814,172,1.443,173,1.219,174,0.544,175,1.325,178,2.254,179,1.814,183,1.387,209,2.78,220,1.312,227,3.788,238,2.205,240,2.205,247,3.493,267,1.076,269,4.115,271,2.209,290,2.78,291,2.78,293,1.814,298,1.567,301,2.573,304,1.983,317,4.612,322,2.209,355,1.184,356,2.78,357,3.128,370,3.428,401,2.209,415,2.401,417,2.209,418,1.68,419,1.814,420,2.209,583,3.039,613,2.209,615,2.209,618,2.209,622,2.209,650,3.039,651,3.385,652,3.385,655,4.612,662,1.814,664,2.011,682,2.78,691,2.209,692,2.209,693,2.209,694,2.553,695,2.553,696,2.553,697,2.553,698,2.553,699,2.78,700,2.553,701,2.553,702,1.983,703,2.573,704,2.553,705,2.553,706,2.553,707,2.553,708,2.553,709,2.553,710,2.553,711,2.553,712,3.911,713,2.553,714,2.553,715,2.553,716,2.553,717,2.553,718,2.553,719,2.553,720,3.911,721,2.553,722,2.553,723,2.553,724,2.553,725,2.553,726,3.911,727,3.911,728,3.911,729,2.553,730,2.553,731,2.553,732,2.553,733,2.553,734,2.553,735,2.553]],["title/classes/GuestFreeSlotDto.html",[65,0.199,699,2.742]],["body/classes/GuestFreeSlotDto.html",[13,0.015,26,0.146,27,0.128,28,0.128,31,0.418,39,3.059,64,0.165,65,0.284,66,0.011,67,0.011,71,0.466,74,0.968,77,1.603,88,2.448,174,0.923,204,0.886,206,1.343,214,4.376,222,4.276,225,2.001,239,1.864,359,2.519,491,4.414,699,3.912,736,5.991,737,6.21,738,6.21,739,6.21,740,6.21,741,4.102,742,4.102,743,5.503,744,5.503,745,5.503,746,5.503,747,5.503,748,5.503,749,4.102,750,4.102,751,4.102,752,4.102]],["title/classes/HoomanWorkSlotDto.html",[65,0.199,216,2.223]],["body/classes/HoomanWorkSlotDto.html",[13,0.015,26,0.173,27,0.152,28,0.152,64,0.247,65,0.317,66,0.012,67,0.012,71,0.552,74,0.983,77,1.679,174,0.937,204,1.048,206,1.5,216,3.54,236,4.137,238,3.285,239,2.081,240,3.285,359,2.981,703,3.195,753,5.502,754,4.855,755,4.855,756,4.855]],["title/interfaces/ISession.html",[757,2.538,758,2.742]],["body/interfaces/ISession.html",[13,0.015,26,0.169,27,0.147,28,0.147,31,0.481,64,0.19,66,0.012,67,0.012,71,0.537,77,1.694,174,0.975,175,2.044,206,1.473,208,3.603,239,2.509,498,4.303,558,5.445,757,3.106,758,4.289,759,3.667,760,4.086,761,6.066,762,3.705,763,2.565,764,4.086,765,4.086]],["title/injectables/JwtAuthGuard.html",[68,0.981,372,2.368]],["body/injectables/JwtAuthGuard.html",[13,0.016,26,0.246,27,0.126,28,0.126,31,0.554,32,0.871,64,0.162,65,0.208,66,0.011,67,0.011,68,1.383,69,1.7,71,0.458,72,1.843,74,0.793,76,1.843,78,1.31,145,2.866,172,2.007,173,1.696,174,0.561,175,1.843,182,3.538,267,1.7,293,2.866,372,3.34,499,3.49,763,2.191,766,5.329,767,3.49,768,5.44,769,5.44,770,5.44,771,5.704,772,4.032,773,4.032,774,5.44,775,4.032,776,5.704,777,5.44,778,4.032,779,4.032,780,4.032,781,4.032,782,4.032,783,3.133,784,4.032,785,4.032,786,4.032,787,4.032,788,4.709,789,4.032,790,4.032,791,4.032,792,4.032,793,4.032]],["title/injectables/JwtStrategy.html",[68,0.981,141,2.538]],["body/injectables/JwtStrategy.html",[13,0.016,26,0.137,27,0.12,28,0.12,31,0.712,32,0.831,47,2.364,53,1.42,64,0.155,65,0.198,66,0.01,67,0.01,68,1.34,69,1.623,71,0.438,72,1.786,74,0.769,76,1.304,78,1.713,86,2.788,91,2.865,141,3.469,145,2.736,150,4.602,167,2.445,169,3.891,172,1.944,173,1.643,174,0.733,175,1.786,177,2.991,178,3.038,179,2.445,182,3.324,183,2.092,190,2.533,192,3.332,657,2.991,763,2.092,794,3.332,795,5.271,796,3.85,797,3.85,798,5.271,799,3.85,800,3.85,801,3.85,802,3.332,803,3.332,804,3.85,805,3.85,806,3.85,807,3.85,808,3.85,809,3.85,810,3.85,811,3.85,812,3.85,813,3.85]],["title/interfaces/Meeting.html",[347,1.789,757,2.538]],["body/interfaces/Meeting.html",[13,0.016,26,0.155,27,0.136,28,0.136,31,0.442,53,1.601,61,3.105,64,0.23,66,0.011,67,0.011,71,0.494,77,1.527,174,1.072,206,1.395,239,2.299,267,1.831,347,3.149,350,2.857,354,2.938,498,4.447,502,5.274,503,5.274,504,3.373,656,4.44,757,2.857,759,3.373,761,5.875,762,3.509,763,2.359,764,3.758,814,3.373,815,3.758]],["title/controllers/MeetingController.html",[81,1.789,816,2.997]],["body/controllers/MeetingController.html",[13,0.016,26,0.146,27,0.128,28,0.128,31,0.726,32,0.886,63,1.513,64,0.165,65,0.211,66,0.011,67,0.011,71,0.466,72,1.864,74,0.598,76,1.389,78,1.333,81,2.881,84,2.699,88,1.513,91,2.99,93,2.916,94,2.916,96,2.699,97,1.58,102,2.364,116,3.187,172,1.513,173,1.279,174,0.57,175,1.389,179,1.903,344,2.699,347,2.553,369,3.55,372,2.519,373,3.187,374,3.187,375,4.276,378,4.763,379,2.916,380,4.276,381,3.187,410,2.699,495,4.367,671,2.364,816,4.276,817,3.55,818,5.375,819,3.55,820,4.102,821,4.102,822,4.763,823,3.375,824,3.55,825,3.55,826,3.55,827,4.102,828,4.102,829,4.102,830,4.102]],["title/modules/MeetingModule.html",[0,1.064,18,2.368]],["body/modules/MeetingModule.html",[0,1.686,2,1.603,3,1.677,4,1.845,5,1.845,6,1.677,7,2.702,8,2.501,13,0.016,17,4.071,18,4.623,23,2.501,24,1.845,25,1.845,26,0.142,27,0.124,28,0.124,30,2.929,31,0.736,32,0.859,39,2.382,40,2.929,41,3.091,48,3.091,49,2.443,63,1.467,64,0.16,65,0.205,66,0.011,67,0.011,173,1.24,347,1.845,350,3.547,353,3.091,664,3.631,665,2.618,823,3.838,824,3.443,831,3.443,832,3.978,833,3.443,834,3.978,835,6.114,836,3.091,837,3.443,838,3.443]],["title/injectables/MeetingService.html",[68,0.981,823,2.096]],["body/injectables/MeetingService.html",[13,0.016,26,0.096,27,0.084,28,0.084,31,0.733,32,0.581,39,1.799,40,1.463,49,1.653,50,1.653,53,2.282,64,0.108,65,0.21,66,0.008,67,0.008,68,1.035,69,1.135,71,0.306,72,1.379,74,0.716,76,1.379,78,1.779,86,2.87,91,2.976,93,1.913,167,1.889,172,1.502,173,1.269,174,0.566,175,1.379,178,2.831,179,2.278,183,2.669,220,1.384,267,2.071,344,3.232,347,2.728,353,2.091,380,3.163,410,2.679,495,3.603,507,1.913,512,2.329,650,2.091,664,3.304,665,1.771,671,1.551,702,2.091,762,1.653,788,2.329,818,4.251,819,2.329,822,3.524,823,2.213,825,2.329,826,2.329,836,2.091,839,2.329,840,5.476,841,2.691,842,6.187,843,4.911,844,4.739,845,2.691,846,2.691,847,2.691,848,2.691,849,4.072,850,2.691,851,2.691,852,2.329,853,2.329,854,2.691,855,2.691,856,2.691,857,4.072,858,2.691,859,2.691,860,2.691,861,2.691,862,2.691,863,4.072,864,2.691,865,4.072,866,2.691,867,2.691,868,2.691,869,2.691,870,4.072,871,2.691,872,2.691,873,2.691,874,2.691,875,2.691,876,2.691,877,2.691,878,2.691,879,2.329,880,2.329,881,2.691,882,2.691,883,2.691,884,2.691,885,2.691,886,2.691,887,2.691,888,2.691,889,2.691]],["title/modules/NotificationModule.html",[0,1.064,19,2.368]],["body/modules/NotificationModule.html",[0,1.695,2,1.619,3,1.694,4,1.864,5,1.864,6,1.694,7,2.716,8,2.851,13,0.016,17,2.316,18,4.35,19,4.674,23,2.518,24,1.864,25,1.864,26,0.143,27,0.126,28,0.126,30,2.95,31,0.721,32,0.868,39,2.399,40,2.95,41,3.122,63,1.482,64,0.162,65,0.207,66,0.011,67,0.011,664,2.066,665,2.644,823,3.849,890,3.478,891,3.478,892,3.478,893,4.019,894,4.709,895,4.019,896,4.019,897,4.019,898,3.478]],["title/injectables/NotificationService.html",[68,0.981,894,2.368]],["body/injectables/NotificationService.html",[13,0.016,26,0.104,27,0.091,28,0.091,31,0.621,32,0.631,50,1.795,53,2.247,64,0.118,65,0.151,66,0.009,67,0.009,68,1.101,69,1.232,71,0.332,72,1.467,74,0.632,76,0.99,78,0.95,86,2.393,95,2.53,102,1.685,167,1.356,172,1.597,173,1.608,174,0.602,175,1.467,179,1.356,183,1.588,207,1.503,267,1.232,347,3.146,355,1.356,390,2.85,421,3.749,422,3.749,423,3.749,424,3.749,425,3.365,426,3.749,427,3.749,428,3.749,429,2.271,430,2.53,431,2.53,432,2.53,433,2.53,434,2.53,435,2.271,662,2.078,671,1.685,823,3.467,879,5.523,880,3.749,894,2.659,898,2.53,899,2.271,900,4.331,901,2.923,902,2.923,903,4.331,904,3.754,905,2.923,906,2.53,907,2.923,908,2.078,909,2.923,910,4.331,911,2.53,912,2.923,913,2.923,914,2.923,915,4.331,916,4.466,917,2.923,918,2.923,919,2.923,920,7.237,921,2.923,922,2.923,923,2.923,924,2.923,925,2.923,926,5.16,927,2.923,928,4.331,929,2.923,930,2.923,931,2.923,932,2.923,933,2.923,934,2.923,935,2.923,936,4.331,937,4.331,938,2.923,939,2.923,940,2.923,941,2.923,942,2.923,943,2.923,944,2.923,945,2.923,946,4.331,947,2.923,948,2.923,949,2.923,950,2.923,951,2.923,952,2.923,953,2.53,954,2.923]],["title/classes/NylasFreeBusy.html",[65,0.199,415,2.368]],["body/classes/NylasFreeBusy.html",[13,0.016,26,0.146,27,0.128,28,0.128,31,0.561,39,2.933,61,2.229,64,0.165,65,0.342,66,0.011,67,0.011,71,0.466,74,0.906,77,1.603,88,2.291,174,0.963,204,0.886,206,1.343,207,3.193,210,3.813,214,4.25,217,3.55,218,3.55,220,2.109,224,3.912,225,2.001,238,1.903,239,1.864,240,1.903,243,2.916,415,3.379,491,4.414,579,4.367,955,5.156,956,3.187,957,5.375,958,4.102,959,4.102,960,4.717,961,4.102,962,3.187]],["title/classes/Payment.html",[65,0.199,963,2.742]],["body/classes/Payment.html",[13,0.014,26,0.211,27,0.185,28,0.185,64,0.238,65,0.305,66,0.014,67,0.014,204,1.278,963,4.926,964,5.122]],["title/controllers/PaymentController.html",[81,1.789,965,2.742]],["body/controllers/PaymentController.html",[13,0.016,26,0.15,27,0.131,28,0.131,31,0.64,32,0.908,53,2.063,63,1.55,64,0.169,65,0.217,66,0.011,67,0.011,71,0.478,72,1.895,74,0.613,76,1.424,78,1.366,81,1.95,84,2.766,88,1.55,92,4.469,93,2.988,96,2.766,97,1.619,102,2.423,109,5.78,114,4.841,131,4.841,172,1.55,173,1.31,174,0.585,175,1.424,179,1.95,963,2.988,965,3.976,966,3.638,967,5.441,968,3.638,969,6.702,970,5.594,971,4.203,972,3.86,973,3.638,974,4.203,975,4.203,976,4.841,977,4.203,978,4.203,979,4.841,980,4.203,981,4.203]],["title/modules/PaymentModule.html",[0,1.064,20,2.538]],["body/modules/PaymentModule.html",[0,1.797,2,1.822,3,1.907,4,2.098,5,2.098,6,1.907,7,2.88,8,2.098,13,0.016,19,4.497,20,4.973,23,2.723,24,2.098,25,2.098,26,0.162,27,0.141,28,0.141,30,3.19,31,0.702,32,0.977,63,2.165,64,0.182,65,0.233,66,0.012,67,0.012,965,4.632,972,4.497,973,3.915,982,3.915,983,3.915,984,4.523,985,4.523,986,4.523,987,4.523]],["title/injectables/PaymentService.html",[68,0.981,972,2.368]],["body/injectables/PaymentService.html",[13,0.016,26,0.118,27,0.103,28,0.103,31,0.727,32,0.711,50,2.023,53,2.227,64,0.133,65,0.244,66,0.009,67,0.009,68,1.202,69,1.389,71,0.375,72,1.601,74,0.689,76,1.116,78,1.07,86,2.564,92,2.342,102,1.899,109,4.295,118,2.852,167,1.528,172,1.743,173,1.473,174,0.657,175,1.601,220,1.694,267,1.993,355,1.528,410,2.168,412,2.56,459,2.852,552,2.168,671,1.899,702,3.673,776,2.852,894,4.086,904,3.11,906,2.852,908,2.342,916,2.852,953,2.852,967,4.091,968,4.091,972,2.902,976,5.227,979,5.227,988,2.56,989,3.295,990,3.295,991,3.295,992,4.091,993,2.342,994,3.929,995,3.295,996,2.56,997,3.36,998,3.295,999,3.295,1000,2.852,1001,2.852,1002,2.852,1003,2.56,1004,2.852,1005,5.527,1006,3.295,1007,3.295,1008,3.295,1009,3.295,1010,3.295,1011,3.295,1012,3.295,1013,4.727,1014,3.295,1015,3.295,1016,3.295,1017,4.727,1018,3.295,1019,3.295,1020,3.295,1021,3.295,1022,3.295,1023,3.295]],["title/classes/RegisterResponseDto.html",[65,0.199,1024,2.997]],["body/classes/RegisterResponseDto.html",[13,0.016,26,0.18,27,0.157,28,0.157,31,0.641,64,0.203,65,0.324,66,0.012,67,0.012,71,0.573,74,0.735,77,1.542,88,1.859,97,1.942,174,0.875,197,5.933,204,1.088,206,1.535,225,2.459,352,3.861,1024,4.886,1025,5.443,1026,4.362,1027,3.916,1028,3.916,1029,5.04,1030,4.886]],["title/classes/SendNotificationRequestDto.html",[65,0.199,904,2.538]],["body/classes/SendNotificationRequestDto.html",[13,0.015,26,0.181,27,0.158,28,0.158,64,0.204,65,0.261,66,0.012,67,0.012,71,0.575,74,0.919,77,1.617,174,0.877,204,1.093,206,1.539,207,3.531,298,3.108,355,2.348,497,3.331,559,4.381,560,4.381,904,4.149,908,4.882,996,5.336,1031,6.867,1032,6.305]],["title/classes/SessionCompletedDto.html",[65,0.199,997,2.742]],["body/classes/SessionCompletedDto.html",[13,0.015,26,0.062,27,0.054,28,0.054,64,0.07,65,0.09,66,0.006,67,0.006,71,0.198,74,1.128,77,1.705,173,0.543,174,1.064,190,4.541,201,2.004,204,0.376,206,0.704,207,0.895,239,2.104,467,2.622,514,3.192,522,4.905,527,4.689,579,3.729,962,3.331,997,2.049,1033,6.704,1034,1.507,1035,3.688,1036,3.688,1037,3.688,1038,3.688,1039,3.688,1040,3.688,1041,3.688,1042,3.688,1043,3.688,1044,3.688,1045,3.688,1046,3.688,1047,3.688,1048,3.688,1049,3.688,1050,3.688,1051,3.688,1052,3.688,1053,3.688,1054,3.688,1055,3.688,1056,3.688,1057,3.688,1058,3.192,1059,3.688,1060,3.688,1061,3.688,1062,3.688,1063,3.688,1064,3.688,1065,3.688,1066,3.688,1067,3.688,1068,3.688,1069,3.688,1070,3.688,1071,3.688,1072,3.688,1073,3.688,1074,3.688,1075,3.688,1076,3.688,1077,1.742,1078,1.742,1079,1.742,1080,1.742,1081,1.742,1082,1.742,1083,1.742,1084,1.742,1085,1.742,1086,1.742,1087,1.742,1088,1.742,1089,1.742,1090,1.742,1091,1.742,1092,1.742,1093,1.742,1094,1.742,1095,1.742,1096,1.742,1097,1.742,1098,1.742,1099,1.742,1100,1.742,1101,1.742,1102,1.742,1103,1.742,1104,1.742,1105,1.742,1106,1.742,1107,1.742,1108,1.742,1109,1.742,1110,1.742,1111,1.742,1112,1.742,1113,1.742,1114,1.742,1115,1.742,1116,1.742,1117,1.742,1118,1.742,1119,1.742,1120,1.742,1121,1.742,1122,1.742,1123,1.742,1124,3.688,1125,1.742,1126,1.742,1127,1.742,1128,1.742,1129,1.742,1130,1.742,1131,1.742,1132,1.742,1133,1.742,1134,1.742,1135,1.742,1136,1.742,1137,1.742]],["title/modules/SessionModule.html",[0,1.064,21,2.223]],["body/modules/SessionModule.html",[0,1.895,2,1.465,3,2.137,4,1.687,5,1.687,6,1.534,7,2.578,8,2.706,13,0.016,21,4.264,23,2.351,24,1.687,25,1.687,26,0.13,27,0.114,28,0.114,30,2.755,31,0.676,32,0.785,48,3.939,49,2.234,63,1.87,64,0.146,65,0.261,66,0.01,67,0.01,110,3.149,139,4.33,149,3.149,169,4.157,173,1.134,182,3.245,762,2.234,783,2.826,837,3.149,838,4.388,1138,3.149,1139,3.638,1140,3.149,1141,3.149,1142,3.638,1143,3.638,1144,3.638,1145,3.638,1146,3.638,1147,3.638,1148,3.939,1149,3.638,1150,3.638,1151,3.638,1152,3.638,1153,3.638,1154,3.638,1155,3.638,1156,3.638,1157,3.638,1158,3.638]],["title/injectables/SessionService.html",[68,0.981,169,2.096]],["body/injectables/SessionService.html",[13,0.016,26,0.114,27,0.099,28,0.099,31,0.67,32,0.687,49,1.953,53,1.7,64,0.128,65,0.164,66,0.009,67,0.009,68,1.172,69,1.341,71,0.362,72,1.561,74,0.866,76,2.012,78,2.048,86,2.513,91,2.504,167,2.137,169,2.504,172,1.998,173,1.689,174,0.754,175,1.835,178,1.833,179,1.475,182,3.054,183,1.728,201,2.944,239,2.297,251,2.471,252,3.58,256,3.58,267,1.943,280,2.093,290,3.275,291,2.261,391,3.648,394,3.58,405,2.753,407,3.988,410,2.093,412,2.471,556,3.032,562,2.753,669,5.142,671,2.656,758,2.261,762,1.953,844,5.142,853,2.753,1159,2.753,1160,3.181,1161,3.181,1162,4.608,1163,3.181,1164,3.181,1165,4.223,1166,3.181,1167,3.181,1168,3.181,1169,3.181,1170,3.181,1171,3.181,1172,3.181,1173,3.181,1174,4.608,1175,3.181,1176,3.181,1177,4.608,1178,3.181,1179,3.181,1180,3.181]],["title/classes/TimeSlot.html",[65,0.199,960,2.742]],["body/classes/TimeSlot.html",[13,0.016,26,0.141,27,0.123,28,0.123,31,0.547,39,3.02,61,2.148,64,0.159,65,0.337,66,0.011,67,0.011,71,0.449,74,0.953,77,1.586,88,2.411,174,0.98,204,0.853,206,1.31,207,2.032,210,3.295,214,4.328,220,2.032,224,3.815,225,1.928,238,2.827,239,2.214,240,2.827,243,2.809,415,2.427,491,4.858,579,4.301,955,5.31,956,3.07,957,3.42,960,4.646,962,4.735,1181,3.952,1182,3.952,1183,3.952,1184,3.952]],["title/classes/UpdateAvailabilityDto.html",[65,0.199,1185,2.997]],["body/classes/UpdateAvailabilityDto.html",[13,0.015,26,0.198,27,0.173,28,0.173,31,0.678,64,0.223,65,0.285,66,0.013,67,0.013,97,2.132,204,1.195,391,3.397,483,3.933,485,4.299,763,3.006,1185,5.173,1186,4.789,1187,3.933,1188,5.532,1189,5.532]],["title/classes/UpdateCalendarDto.html",[65,0.199,408,2.742]],["body/classes/UpdateCalendarDto.html",[13,0.015,26,0.198,27,0.173,28,0.173,31,0.678,64,0.223,65,0.285,66,0.013,67,0.013,97,2.132,204,1.195,391,3.397,397,3.64,408,4.733,411,4.789,487,4.299,763,3.006,1187,3.933,1190,4.789,1191,5.532]],["title/classes/UpdatePaymentDto.html",[65,0.199,993,2.742]],["body/classes/UpdatePaymentDto.html",[13,0.015,26,0.197,27,0.172,28,0.172,31,0.676,64,0.222,65,0.284,66,0.013,67,0.013,204,1.189,391,3.381,552,3.624,554,4.279,763,2.993,992,4.766,993,4.719,1187,3.914,1192,4.766,1193,4.766,1194,4.766,1195,5.507]],["title/classes/UpdateSessionRequestDto.html",[65,0.199,1165,2.742]],["body/classes/UpdateSessionRequestDto.html",[13,0.015,26,0.194,27,0.17,28,0.17,31,0.671,64,0.219,65,0.28,66,0.013,67,0.013,97,2.093,182,3.385,204,1.173,391,3.335,497,3.574,556,4.333,671,3.131,763,2.952,1165,4.68,1187,4.68,1196,4.701]],["title/classes/UserCredentialsDto.html",[65,0.199,129,2.742]],["body/classes/UserCredentialsDto.html",[13,0.016,26,0.165,27,0.145,28,0.145,31,0.607,64,0.186,65,0.307,66,0.012,67,0.012,71,0.526,74,0.869,77,1.658,88,2.197,97,1.783,129,4.235,174,0.968,181,5.119,204,0.999,206,1.455,207,3.387,210,3.658,225,2.258,352,4.046,1027,4.629,1028,3.596,1030,5.119,1197,5.119,1198,4.006,1199,4.006,1200,4.628,1201,4.628]],["title/classes/UserRegistrationDto.html",[65,0.199,1202,2.997]],["body/classes/UserRegistrationDto.html",[13,0.016,26,0.132,27,0.115,28,0.115,31,0.599,42,3.025,64,0.149,65,0.303,66,0.01,67,0.01,71,0.42,74,0.973,77,1.725,88,2.461,97,1.423,174,1.043,181,4.571,204,0.798,206,1.251,207,3.025,210,3.146,220,1.899,225,1.802,352,4.24,1027,4.936,1028,2.87,1030,4.936,1197,5.365,1199,3.197,1202,3.981,1203,3.197,1204,5.883,1205,5.883,1206,5.883,1207,3.694,1208,3.694,1209,3.694,1210,3.694,1211,3.694,1212,3.694,1213,5.124,1214,3.694,1215,3.694,1216,3.694]],["title/classes/WorkSlot.html",[65,0.199,228,2.538]],["body/classes/WorkSlot.html",[13,0.016,26,0.125,27,0.11,28,0.11,31,0.583,42,3.194,61,1.907,64,0.199,65,0.32,66,0.01,67,0.01,71,0.399,74,0.991,77,1.57,88,2.291,174,0.991,190,2.309,201,1.907,203,2.155,204,0.758,205,2.726,206,1.207,207,1.804,208,1.804,209,2.494,210,3.035,214,4.509,216,3.298,220,1.804,221,3.037,222,3.84,223,4.278,224,3.513,225,1.712,226,2.726,227,2.494,228,3.252,229,2.494,230,3.513,231,3.513,232,3.513,233,3.513,234,3.513,235,3.513,236,3.514,237,4.953,238,2.654,239,2.104,240,2.654,241,4.068,242,4.068,243,2.494,1217,3.509,1218,3.509,1219,3.509,1220,3.509,1221,3.509,1222,3.509,1223,3.509]],["title/classes/WorkSlotDto.html",[65,0.199,703,2.538]],["body/classes/WorkSlotDto.html",[13,0.015,26,0.179,27,0.157,28,0.157,64,0.252,65,0.323,66,0.012,67,0.012,71,0.571,74,0.915,77,1.539,174,0.872,204,1.084,206,1.531,216,2.893,236,3.082,238,3.324,239,2.427,240,3.324,359,3.082,360,3.9,361,3.9,703,4.127,753,5.315]],["title/coverage.html",[1224,4.101]],["body/coverage.html",[6,0.768,13,0.016,22,1.199,28,0.057,29,1.415,39,1.682,40,1.626,54,1.415,65,0.382,66,0.006,67,0.006,68,1.636,70,1.577,81,2.257,82,1.295,83,1.577,98,1.119,129,1.295,140,1.05,141,1.199,142,2.324,152,1.415,153,1.415,155,1.415,161,1.415,165,1.577,169,0.99,174,0.253,182,1.538,203,1.837,205,2.324,216,1.05,228,1.199,247,1.05,250,3.928,263,3.813,267,0.768,275,1.415,296,1.415,304,6.173,319,1.295,344,1.199,345,1.577,346,1.577,347,1.765,350,1.199,356,1.295,357,2.504,358,1.577,359,2.988,362,1.199,363,1.577,364,1.295,365,1.577,370,0.99,372,1.119,389,3.423,390,2.899,397,1.199,408,1.295,415,1.119,418,1.199,419,1.295,436,1.415,483,1.295,484,1.577,485,2.324,486,1.577,487,2.324,495,1.199,496,2.324,497,2.899,507,1.295,508,1.577,552,1.199,553,1.577,554,2.324,556,1.199,557,1.577,563,1.415,564,1.577,633,1.577,648,1.295,649,1.577,653,1.415,664,0.937,682,1.295,683,1.577,693,1.577,699,1.295,703,1.199,736,1.577,753,2.324,757,1.968,758,1.295,760,1.577,766,1.577,767,1.577,794,1.577,814,2.324,816,1.415,817,1.577,823,0.99,839,1.577,894,1.119,899,3.423,904,1.199,908,1.295,955,2.324,956,2.324,960,1.295,963,1.295,964,1.577,965,1.295,966,1.577,972,1.119,988,2.324,993,1.295,994,1.295,996,1.415,997,1.295,1024,1.415,1025,1.577,1026,1.577,1033,1.577,1034,1.577,1148,1.415,1159,1.577,1165,1.295,1185,1.415,1186,1.577,1190,1.577,1192,1.577,1196,1.577,1197,2.324,1198,1.577,1202,1.415,1203,1.577,1224,1.415,1225,1.822,1226,1.822,1227,1.822,1228,6.969,1229,7.438,1230,5.976,1231,2.589,1232,6.434,1233,1.822,1234,5.526,1235,1.577,1236,1.577,1237,5.23,1238,1.822,1239,1.822,1240,1.822,1241,1.577,1242,1.822,1243,1.822,1244,1.577,1245,1.577,1246,1.577,1247,1.822,1248,1.822]],["title/dependencies.html",[3,1.958,1249,2.782]],["body/dependencies.html",[3,1.831,13,0.016,32,0.937,47,2.666,49,2.666,65,0.295,66,0.011,67,0.011,97,1.673,145,3.086,147,3.373,220,2.232,225,2.118,285,3.758,390,2.857,467,3.086,645,3.758,762,2.666,802,5.529,803,3.758,836,3.373,852,3.758,994,3.086,1193,3.758,1194,3.758,1250,5.714,1251,6.788,1252,4.341,1253,4.341,1254,4.341,1255,4.341,1256,4.341,1257,4.341,1258,4.341,1259,4.341,1260,4.341,1261,4.341,1262,4.341,1263,4.341,1264,4.341,1265,4.341,1266,4.341,1267,4.341,1268,4.341,1269,4.341,1270,4.341,1271,4.341,1272,4.341,1273,4.341,1274,4.341,1275,4.341,1276,4.341,1277,4.341]],["title/miscellaneous/functions.html",[1278,2.284,1279,4.018]],["body/miscellaneous/functions.html",[6,3,13,0.014,66,0.013,67,0.013,71,0.623,172,2.022,173,1.709,175,1.857,250,3.896,264,4.259,265,3.896,275,5.527,296,5.527,319,4.706,1241,4.744,1278,3.896,1279,4.744,1280,5.481,1281,6.157]],["title/index.html",[71,0.365,1282,3.214,1283,3.214]],["body/index.html",[13,0.015,27,0.131,66,0.011,67,0.011,354,2.161,425,3.266,783,3.266,1058,4.841,1224,3.266,1284,4.203,1285,4.203,1286,5.594,1287,4.203,1288,4.203,1289,4.203,1290,4.203,1291,4.203,1292,4.203,1293,6.287,1294,4.203,1295,4.203,1296,4.203,1297,7.324,1298,4.203,1299,4.203,1300,4.203,1301,7.176,1302,4.203,1303,4.203,1304,4.203,1305,4.203,1306,4.203,1307,4.203,1308,5.594,1309,5.594,1310,4.203,1311,4.203,1312,4.203,1313,5.594,1314,5.594,1315,4.203,1316,4.203,1317,4.203,1318,4.203,1319,4.203,1320,3.638,1321,4.203,1322,4.203,1323,4.203,1324,4.203,1325,4.203,1326,4.203,1327,4.203,1328,4.203,1329,4.203,1330,3.638,1331,4.203,1332,4.203,1333,4.203,1334,4.203,1335,4.203,1336,4.203,1337,3.638]],["title/modules.html",[2,2.126]],["body/modules.html",[1,3.437,2,1.948,12,3.182,13,0.012,14,3.182,15,3.182,16,3.182,17,2.787,18,2.969,19,2.969,20,3.182,21,2.787,66,0.012,67,0.012,139,2.969,1320,6.743,1338,7.791,1339,7.791,1340,7.839,1341,4.835,1342,4.835]],["title/overview.html",[1343,4.568]],["body/overview.html",[0,0.732,1,5.413,2,1.07,3,1.12,4,1.232,5,1.232,6,1.12,7,1.173,8,1.232,9,2.298,10,2.298,11,2.298,12,4.768,13,0.016,14,4.05,15,4.05,16,3.205,17,4.086,18,4.225,19,4.294,20,4.209,21,3.966,22,3.205,23,1.869,24,1.232,25,1.232,63,0.979,66,0.008,67,0.008,69,1.12,98,3.927,135,2.298,136,2.298,137,2.298,138,2.298,139,3.927,140,3.798,141,3.205,169,3.476,204,0.573,244,2.298,245,2.298,246,2.298,247,3.798,370,3.581,384,2.298,385,2.298,386,2.298,450,2.063,583,2.063,628,2.298,629,2.298,664,2.796,686,2.298,688,2.298,759,2.063,823,2.955,831,2.298,833,2.298,890,2.298,891,2.298,892,2.298,894,3.927,972,2.991,982,2.298,983,2.298,1003,2.063,1138,2.298,1140,2.298,1141,2.298,1343,2.298,1344,2.655,1345,2.655]],["title/properties.html",[206,1.133,1249,2.782]],["body/properties.html",[13,0.015,66,0.014,67,0.014,206,1.438,354,3.028,1330,5.097,1337,5.097,1346,5.888,1347,5.888,1348,5.888]],["title/miscellaneous/variables.html",[1278,2.284,1349,4.018]],["body/miscellaneous/variables.html",[13,0.016,29,1.798,30,1.258,46,1.798,53,0.854,54,2.816,55,2.003,61,2.748,66,0.007,67,0.007,71,0.263,77,1.31,78,0.752,92,2.577,142,1.798,150,2.94,152,3.472,153,3.472,155,3.472,156,1.798,157,2.003,158,2.003,159,2.003,160,2.003,161,2.816,162,2.003,163,2.003,174,0.968,185,2.003,203,2.744,208,1.19,229,1.645,230,1.645,231,1.645,232,1.645,233,1.645,234,1.645,235,1.645,238,2.073,239,1.514,240,2.073,250,1.645,267,2.132,280,1.523,298,4.482,347,1.681,350,2.385,354,1.864,355,3.386,379,1.645,389,1.798,390,4.146,393,2.003,429,2.816,435,2.816,436,2.816,437,3.137,438,2.003,439,3.868,440,2.003,441,3.137,442,2.003,443,2.003,444,2.003,445,2.003,446,2.003,447,2.003,448,2.003,449,2.003,450,1.798,451,2.003,452,2.003,453,2.003,454,2.003,455,2.003,456,2.003,457,1.798,498,2.744,502,1.798,503,1.798,504,1.798,558,1.798,579,2.385,653,2.816,656,4.525,657,2.816,662,1.645,765,2.003,771,2.003,814,1.798,815,3.137,899,1.798,911,2.003,988,1.798,994,2.577,1000,2.003,1001,2.003,1002,2.003,1003,1.798,1004,2.003,1148,2.816,1231,2.003,1235,3.137,1236,3.137,1244,2.003,1245,3.137,1246,2.003,1278,1.645,1281,3.868,1349,2.003,1350,3.625,1351,3.625,1352,4.468,1353,2.314,1354,2.314,1355,4.468,1356,2.314,1357,2.314,1358,2.314,1359,2.314,1360,3.625,1361,3.625,1362,2.314,1363,2.314,1364,2.314,1365,2.314,1366,2.314,1367,2.314,1368,2.314,1369,2.314,1370,2.314]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Availability.html":{},"modules/AvailabilityModule.html":{},"injectables/AvailabilityService.html":{},"classes/BookRequestResponse.html":{},"classes/BusySlotDto.html":{},"classes/Calendar.html":{},"controllers/CalendarController.html":{},"modules/CalendarModule.html":{},"injectables/CalendarService.html":{},"classes/CreateAvailabilityDto.html":{},"classes/CreateCalendarDto.html":{},"classes/CreateMeetingRequestDto.html":{},"classes/CreateMeetingResultDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateSessionRequestDto.html":{},"classes/DateTimeDto.html":{},"modules/DateTimeModule.html":{},"modules/EncryptionModule.html":{},"injectables/EncryptionService.html":{},"controllers/FreeSlotController.html":{},"classes/FreeSlotDto.html":{},"modules/FreeSlotModule.html":{},"injectables/FreeSlotService.html":{},"classes/GuestFreeSlotDto.html":{},"classes/HoomanWorkSlotDto.html":{},"interfaces/ISession.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Meeting.html":{},"controllers/MeetingController.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"classes/NylasFreeBusy.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"classes/RegisterResponseDto.html":{},"classes/SendNotificationRequestDto.html":{},"classes/SessionCompletedDto.html":{},"modules/SessionModule.html":{},"injectables/SessionService.html":{},"classes/TimeSlot.html":{},"classes/UpdateAvailabilityDto.html":{},"classes/UpdateCalendarDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateSessionRequestDto.html":{},"classes/UserCredentialsDto.html":{},"classes/UserRegistrationDto.html":{},"classes/WorkSlot.html":{},"classes/WorkSlotDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":304,"title":{},"body":{"injectables/AvailabilityService.html":{},"injectables/FreeSlotService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1347,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1275,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":1264,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1263,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":1271,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1229,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1239,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1240,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1242,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1230,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1232,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1237,"title":{},"body":{"coverage.html":{}}}],["0/48",{"_index":1243,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1234,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1233,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1238,"title":{},"body":{"coverage.html":{}}}],["00.000",{"_index":318,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["1",{"_index":280,"title":{},"body":{"injectables/AvailabilityService.html":{},"injectables/CalendarService.html":{},"classes/DateTimeDto.html":{},"injectables/SessionService.html":{},"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":1273,"title":{},"body":{"dependencies.html":{}}}],["1.4.0",{"_index":1261,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":647,"title":{},"body":{"injectables/EncryptionService.html":{}}}],["10.0.0",{"_index":1251,"title":{},"body":{"dependencies.html":{}}}],["10.0.1",{"_index":1254,"title":{},"body":{"dependencies.html":{}}}],["10.1.0",{"_index":1253,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":291,"title":{},"body":{"injectables/AvailabilityService.html":{},"classes/DateTimeDto.html":{},"injectables/FreeSlotService.html":{},"injectables/SessionService.html":{}}}],["11",{"_index":1003,"title":{},"body":{"injectables/PaymentService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["12",{"_index":1344,"title":{},"body":{"overview.html":{}}}],["12.10.0",{"_index":1277,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":1004,"title":{},"body":{"injectables/PaymentService.html":{},"miscellaneous/variables.html":{}}}],["16.3.1",{"_index":1266,"title":{},"body":{"dependencies.html":{}}}],["1629462063",{"_index":500,"title":{},"body":{"classes/CreateMeetingRequestDto.html":{}}}],["17:00",{"_index":1359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18:00",{"_index":1360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1970",{"_index":281,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["19:00",{"_index":1361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":450,"title":{},"body":{"injectables/CalendarService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2022",{"_index":1002,"title":{},"body":{"injectables/PaymentService.html":{},"miscellaneous/variables.html":{}}}],["20:00",{"_index":1362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24",{"_index":709,"title":{},"body":{"injectables/FreeSlotService.html":{}}}],["28",{"_index":1345,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":1250,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":1268,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":1272,"title":{},"body":{"dependencies.html":{}}}],["405",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{}}}],["5",{"_index":583,"title":{},"body":{"classes/DateTimeDto.html":{},"injectables/FreeSlotService.html":{},"overview.html":{}}}],["5.0.0",{"_index":1259,"title":{},"body":{"dependencies.html":{}}}],["5.1.0",{"_index":1262,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":307,"title":{},"body":{"injectables/AvailabilityService.html":{},"classes/DateTimeDto.html":{}}}],["6.10.0",{"_index":1270,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":290,"title":{},"body":{"injectables/AvailabilityService.html":{},"classes/DateTimeDto.html":{},"injectables/FreeSlotService.html":{},"injectables/SessionService.html":{}}}],["7",{"_index":336,"title":{},"body":{"injectables/AvailabilityService.html":{},"classes/DateTimeDto.html":{}}}],["7.0.4",{"_index":1257,"title":{},"body":{"dependencies.html":{}}}],["7.4.1",{"_index":1269,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":1276,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":594,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["_id",{"_index":761,"title":{},"body":{"interfaces/ISession.html":{},"interfaces/Meeting.html":{}}}],["_links",{"_index":509,"title":{},"body":{"classes/CreateMeetingResultDto.html":{}}}],["abajo",{"_index":944,"title":{},"body":{"injectables/NotificationService.html":{}}}],["accent",{"_index":442,"title":{},"body":{"injectables/CalendarService.html":{},"miscellaneous/variables.html":{}}}],["accented",{"_index":440,"title":{},"body":{"injectables/CalendarService.html":{},"miscellaneous/variables.html":{}}}],["accents",{"_index":446,"title":{},"body":{"injectables/CalendarService.html":{},"miscellaneous/variables.html":{}}}],["access_token",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{},"classes/RegisterResponseDto.html":{}}}],["action",{"_index":1177,"title":{},"body":{"injectables/SessionService.html":{}}}],["add",{"_index":293,"title":{},"body":{"injectables/AvailabilityService.html":{},"controllers/FreeSlotController.html":{},"injectables/FreeSlotService.html":{},"injectables/JwtAuthGuard.html":{}}}],["address",{"_index":1129,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["after_expiration",{"_index":1035,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["agendado",{"_index":932,"title":{},"body":{"injectables/NotificationService.html":{}}}],["agendar",{"_index":919,"title":{},"body":{"injectables/NotificationService.html":{}}}],["all('login",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{}}}],["all('register",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["allow_promotion_codes",{"_index":1036,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["allowed",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["alternate",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["amazing",{"_index":1321,"title":{},"body":{"index.html":{}}}],["america/bahia_banderas",{"_index":580,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["america/cancun",{"_index":582,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["america/chihuahua",{"_index":584,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["america/ciudad_juarez",{"_index":585,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["america/ensenada",{"_index":586,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["america/hermosillo",{"_index":587,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["america/matamoros",{"_index":588,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["america/mazatlan",{"_index":589,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["america/merida",{"_index":590,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["america/mexico_city",{"_index":591,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["america/monterrey",{"_index":301,"title":{},"body":{"injectables/AvailabilityService.html":{},"injectables/CalendarService.html":{},"classes/DateTimeDto.html":{},"controllers/FreeSlotController.html":{},"injectables/FreeSlotService.html":{}}}],["america/monterrey.'})@apibearerauth",{"_index":660,"title":{},"body":{"controllers/FreeSlotController.html":{}}}],["america/ojinaga",{"_index":592,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["america/santa_isabel",{"_index":593,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["america/tijuana",{"_index":595,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["amount_discount",{"_index":1135,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["amount_shipping",{"_index":1136,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["amount_subtotal",{"_index":1037,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["amount_tax",{"_index":1137,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["amount_total",{"_index":1038,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["apibearerauth",{"_index":375,"title":{},"body":{"controllers/CalendarController.html":{},"controllers/FreeSlotController.html":{},"controllers/MeetingController.html":{}}}],["apibody({type",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiproperty",{"_index":352,"title":{},"body":{"classes/BookRequestResponse.html":{},"classes/CreateCalendarDto.html":{},"classes/CreateMeetingRequestDto.html":{},"classes/RegisterResponseDto.html":{},"classes/UserCredentialsDto.html":{},"classes/UserRegistrationDto.html":{}}}],["apiproperty()@isnotempty()@isdate()@type(undefined",{"_index":1207,"title":{},"body":{"classes/UserRegistrationDto.html":{}}}],["apiproperty({description",{"_index":348,"title":{},"body":{"classes/BookRequestResponse.html":{},"classes/CreateMeetingRequestDto.html":{}}}],["apiproperty({type",{"_index":1027,"title":{},"body":{"classes/RegisterResponseDto.html":{},"classes/UserCredentialsDto.html":{},"classes/UserRegistrationDto.html":{}}}],["apiquery",{"_index":666,"title":{},"body":{"controllers/FreeSlotController.html":{}}}],["apitags",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CalendarController.html":{},"controllers/FreeSlotController.html":{},"controllers/MeetingController.html":{},"controllers/PaymentController.html":{}}}],["apitags('authentication",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('calendar",{"_index":376,"title":{},"body":{"controllers/CalendarController.html":{}}}],["apitags('free",{"_index":672,"title":{},"body":{"controllers/FreeSlotController.html":{}}}],["apitags('meeting",{"_index":827,"title":{},"body":{"controllers/MeetingController.html":{}}}],["apitags('payment",{"_index":974,"title":{},"body":{"controllers/PaymentController.html":{}}}],["apiversion",{"_index":1001,"title":{},"body":{"injectables/PaymentService.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":1299,"title":{},"body":{"index.html":{}}}],["app.service",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["application",{"_index":1144,"title":{},"body":{"modules/SessionModule.html":{}}}],["applications",{"_index":1292,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":22,"title":{"injectables/AppService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["aprendecoding.com",{"_index":880,"title":{},"body":{"injectables/MeetingService.html":{},"injectables/NotificationService.html":{}}}],["aprendiz",{"_index":1032,"title":{},"body":{"classes/SendNotificationRequestDto.html":{}}}],["arguments",{"_index":791,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["asesoría",{"_index":934,"title":{},"body":{"injectables/NotificationService.html":{}}}],["assuming",{"_index":1368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CalendarService.html":{},"injectables/EncryptionService.html":{},"controllers/FreeSlotController.html":{},"injectables/FreeSlotService.html":{},"injectables/JwtStrategy.html":{},"injectables/MeetingService.html":{},"injectables/NotificationService.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{}}}],["atentamente",{"_index":952,"title":{},"body":{"injectables/NotificationService.html":{}}}],["aula",{"_index":877,"title":{},"body":{"injectables/MeetingService.html":{}}}],["auth",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.constants",{"_index":154,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.controller",{"_index":148,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":374,"title":{},"body":{"controllers/CalendarController.html":{},"controllers/FreeSlotController.html":{},"controllers/MeetingController.html":{}}}],["auth.guard.ts",{"_index":767,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:10",{"_index":772,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:16",{"_index":775,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards/jwt",{"_index":373,"title":{},"body":{"controllers/CalendarController.html":{},"controllers/FreeSlotController.html":{},"controllers/MeetingController.html":{}}}],["authcontroller",{"_index":82,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authentication",{"_index":781,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authenticitytoken",{"_index":765,"title":{},"body":{"interfaces/ISession.html":{},"miscellaneous/variables.html":{}}}],["authguard",{"_index":778,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":779,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":12,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1330,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorization",{"_index":871,"title":{},"body":{"injectables/MeetingService.html":{}}}],["authservice",{"_index":98,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["auto_record",{"_index":540,"title":{},"body":{"classes/CreateMeetingResultDto.html":{}}}],["automatic_tax",{"_index":1039,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["availability",{"_index":203,"title":{"classes/Availability.html":{}},"body":{"classes/Availability.html":{},"injectables/AvailabilityService.html":{},"classes/WorkSlot.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["availability.dto",{"_index":1188,"title":{},"body":{"classes/UpdateAvailabilityDto.html":{}}}],["availability.dto.ts",{"_index":485,"title":{},"body":{"classes/CreateAvailabilityDto.html":{},"classes/UpdateAvailabilityDto.html":{},"coverage.html":{}}}],["availability.service",{"_index":249,"title":{},"body":{"modules/AvailabilityModule.html":{}}}],["availability.workslots.push(workslot",{"_index":274,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["availability/availability.module",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["availability/availability.service",{"_index":691,"title":{},"body":{"modules/FreeSlotModule.html":{},"injectables/FreeSlotService.html":{}}}],["availability/dto/free",{"_index":701,"title":{},"body":{"injectables/FreeSlotService.html":{}}}],["availability/dto/guest",{"_index":700,"title":{},"body":{"injectables/FreeSlotService.html":{}}}],["availability/dto/work",{"_index":704,"title":{},"body":{"injectables/FreeSlotService.html":{}}}],["availabilitymodule",{"_index":14,"title":{"modules/AvailabilityModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AvailabilityModule.html":{},"modules.html":{},"overview.html":{}}}],["availabilityservice",{"_index":247,"title":{"injectables/AvailabilityService.html":{}},"body":{"modules/AvailabilityModule.html":{},"injectables/AvailabilityService.html":{},"modules/FreeSlotModule.html":{},"injectables/FreeSlotService.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":1342,"title":{},"body":{"modules.html":{}}}],["available_features",{"_index":510,"title":{},"body":{"classes/CreateMeetingResultDto.html":{}}}],["availabledays",{"_index":1235,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["availablehours",{"_index":1236,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["availablehours.foreach((hour",{"_index":266,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["await",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CalendarService.html":{},"controllers/FreeSlotController.html":{},"injectables/FreeSlotService.html":{},"injectables/JwtStrategy.html":{},"injectables/MeetingService.html":{},"injectables/NotificationService.html":{},"injectables/SessionService.html":{}}}],["axios",{"_index":1260,"title":{},"body":{"dependencies.html":{}}}],["backers",{"_index":1322,"title":{},"body":{"index.html":{}}}],["base",{"_index":379,"title":{},"body":{"controllers/CalendarController.html":{},"injectables/CalendarService.html":{},"controllers/MeetingController.html":{},"miscellaneous/variables.html":{}}}],["base_url",{"_index":868,"title":{},"body":{"injectables/MeetingService.html":{}}}],["based",{"_index":790,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["bcrypt",{"_index":645,"title":{},"body":{"injectables/EncryptionService.html":{},"dependencies.html":{}}}],["bearer",{"_index":872,"title":{},"body":{"injectables/MeetingService.html":{}}}],["bienvenida",{"_index":930,"title":{},"body":{"injectables/NotificationService.html":{}}}],["billing_address_collection",{"_index":1040,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["body",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"injectables/NotificationService.html":{}}}],["booked",{"_index":867,"title":{},"body":{"injectables/MeetingService.html":{}}}],["bookingresponse",{"_index":863,"title":{},"body":{"injectables/MeetingService.html":{}}}],["bookingresponse.meeting",{"_index":864,"title":{},"body":{"injectables/MeetingService.html":{}}}],["bookrequest",{"_index":822,"title":{},"body":{"controllers/MeetingController.html":{},"injectables/MeetingService.html":{}}}],["bookrequest.timestamp",{"_index":860,"title":{},"body":{"injectables/MeetingService.html":{}}}],["bookrequestresponse",{"_index":344,"title":{"classes/BookRequestResponse.html":{}},"body":{"classes/BookRequestResponse.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"coverage.html":{}}}],["boolean",{"_index":527,"title":{},"body":{"classes/CreateMeetingResultDto.html":{},"classes/SessionCompletedDto.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AvailabilityModule.html":{},"modules/CalendarModule.html":{},"modules/EncryptionModule.html":{},"modules/FreeSlotModule.html":{},"modules/MeetingModule.html":{},"modules/NotificationModule.html":{},"modules/PaymentModule.html":{},"modules/SessionModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["break",{"_index":1021,"title":{},"body":{"injectables/PaymentService.html":{}}}],["browse",{"_index":1340,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1338,"title":{},"body":{"modules.html":{}}}],["building",{"_index":1287,"title":{},"body":{"index.html":{}}}],["busy",{"_index":725,"title":{},"body":{"injectables/FreeSlotService.html":{}}}],["busy.entity",{"_index":417,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/FreeSlotService.html":{}}}],["busy.entity.ts",{"_index":956,"title":{},"body":{"classes/NylasFreeBusy.html":{},"classes/TimeSlot.html":{},"coverage.html":{}}}],["busy.entity.ts:12",{"_index":1183,"title":{},"body":{"classes/TimeSlot.html":{}}}],["busy.entity.ts:15",{"_index":1181,"title":{},"body":{"classes/TimeSlot.html":{}}}],["busy.entity.ts:20",{"_index":959,"title":{},"body":{"classes/NylasFreeBusy.html":{}}}],["busy.entity.ts:23",{"_index":958,"title":{},"body":{"classes/NylasFreeBusy.html":{}}}],["busy.entity.ts:27",{"_index":961,"title":{},"body":{"classes/NylasFreeBusy.html":{}}}],["busy.entity.ts:6",{"_index":1182,"title":{},"body":{"classes/TimeSlot.html":{}}}],["busy.entity.ts:9",{"_index":1184,"title":{},"body":{"classes/TimeSlot.html":{}}}],["busyslot.starttime",{"_index":726,"title":{},"body":{"injectables/FreeSlotService.html":{}}}],["busyslotdto",{"_index":356,"title":{"classes/BusySlotDto.html":{}},"body":{"classes/BusySlotDto.html":{},"injectables/FreeSlotService.html":{},"coverage.html":{}}}],["busyslots",{"_index":714,"title":{},"body":{"injectables/FreeSlotService.html":{}}}],["busyslots.length",{"_index":721,"title":{},"body":{"injectables/FreeSlotService.html":{}}}],["calendar",{"_index":362,"title":{"classes/Calendar.html":{}},"body":{"classes/Calendar.html":{},"controllers/CalendarController.html":{},"injectables/CalendarService.html":{},"coverage.html":{}}}],["calendar.controller",{"_index":388,"title":{},"body":{"modules/CalendarModule.html":{}}}],["calendar.controller.ts",{"_index":369,"title":{},"body":{"controllers/CalendarController.html":{},"controllers/MeetingController.html":{}}}],["calendar.description",{"_index":477,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendar.dto",{"_index":411,"title":{},"body":{"injectables/CalendarService.html":{},"classes/UpdateCalendarDto.html":{}}}],["calendar.dto.ts",{"_index":487,"title":{},"body":{"classes/CreateCalendarDto.html":{},"classes/UpdateCalendarDto.html":{},"coverage.html":{}}}],["calendar.dto.ts:14",{"_index":490,"title":{},"body":{"classes/CreateCalendarDto.html":{}}}],["calendar.dto.ts:20",{"_index":489,"title":{},"body":{"classes/CreateCalendarDto.html":{}}}],["calendar.metadata",{"_index":479,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendar.name",{"_index":475,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendar.save",{"_index":470,"title":{},"body":{"injectables/CalendarService.html":{}}}],["calendar.service",{"_index":371,"title":{},"body":{"controllers/CalendarController.html":{},"modules/CalendarModule.html":{}}}],["calendar/calendar.module",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["calendar/calendar.service",{"_index":692,"title":{},"body":{"modules/FreeSlotModule.html":{},"injectables/FreeSlotService.html":{}}}],["calendar/entities/nylas",{"_index":697,"title":{},"body":{"injectables/FreeSlotService.html":{}}}],["calendarcontroller",{"_index":364,"title":{"controllers/CalendarController.html":{}},"body":{"controllers/CalendarController.html":{},"modules/CalendarModule.html":{},"coverage.html":{}}}],["calendarmodule",{"_index":15,"title":{"modules/CalendarModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CalendarModule.html":{},"modules.html":{},"overview.html":{}}}],["calendarservice",{"_index":370,"title":{"injectables/CalendarService.html":{}},"body":{"controllers/CalendarController.html":{},"modules/CalendarModule.html":{},"injectables/CalendarService.html":{},"modules/FreeSlotModule.html":{},"injectables/FreeSlotService.html":{},"coverage.html":{},"overview.html":{}}}],["call",{"_index":784,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["camelcase",{"_index":451,"title":{},"body":{"injectables/CalendarService.html":{},"miscellaneous/variables.html":{}}}],["canactivate",{"_index":768,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":770,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["cancel_url",{"_index":1041,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["card",{"_index":1134,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["case",{"_index":459,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/PaymentService.html":{}}}],["catch",{"_index":1009,"title":{},"body":{"injectables/PaymentService.html":{}}}],["checkout.session.completed",{"_index":1014,"title":{},"body":{"injectables/PaymentService.html":{}}}],["class",{"_index":65,"title":{"classes/Availability.html":{},"classes/BookRequestResponse.html":{},"classes/BusySlotDto.html":{},"classes/Calendar.html":{},"classes/CreateAvailabilityDto.html":{},"classes/CreateCalendarDto.html":{},"classes/CreateMeetingRequestDto.html":{},"classes/CreateMeetingResultDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateSessionRequestDto.html":{},"classes/DateTimeDto.html":{},"classes/FreeSlotDto.html":{},"classes/GuestFreeSlotDto.html":{},"classes/HoomanWorkSlotDto.html":{},"classes/NylasFreeBusy.html":{},"classes/Payment.html":{},"classes/RegisterResponseDto.html":{},"classes/SendNotificationRequestDto.html":{},"classes/SessionCompletedDto.html":{},"classes/TimeSlot.html":{},"classes/UpdateAvailabilityDto.html":{},"classes/UpdateCalendarDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateSessionRequestDto.html":{},"classes/UserCredentialsDto.html":{},"classes/UserRegistrationDto.html":{},"classes/WorkSlot.html":{},"classes/WorkSlotDto.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Availability.html":{},"modules/AvailabilityModule.html":{},"classes/BookRequestResponse.html":{},"classes/BusySlotDto.html":{},"classes/Calendar.html":{},"controllers/CalendarController.html":{},"modules/CalendarModule.html":{},"injectables/CalendarService.html":{},"classes/CreateAvailabilityDto.html":{},"classes/CreateCalendarDto.html":{},"classes/CreateMeetingRequestDto.html":{},"classes/CreateMeetingResultDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateSessionRequestDto.html":{},"classes/DateTimeDto.html":{},"modules/DateTimeModule.html":{},"modules/EncryptionModule.html":{},"injectables/EncryptionService.html":{},"controllers/FreeSlotController.html":{},"classes/FreeSlotDto.html":{},"modules/FreeSlotModule.html":{},"injectables/FreeSlotService.html":{},"classes/GuestFreeSlotDto.html":{},"classes/HoomanWorkSlotDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/MeetingController.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"classes/NylasFreeBusy.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"classes/RegisterResponseDto.html":{},"classes/SendNotificationRequestDto.html":{},"classes/SessionCompletedDto.html":{},"modules/SessionModule.html":{},"injectables/SessionService.html":{},"classes/TimeSlot.html":{},"classes/UpdateAvailabilityDto.html":{},"classes/UpdateCalendarDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateSessionRequestDto.html":{},"classes/UserCredentialsDto.html":{},"classes/UserRegistrationDto.html":{},"classes/WorkSlot.html":{},"classes/WorkSlotDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":204,"title":{},"body":{"classes/Availability.html":{},"classes/BookRequestResponse.html":{},"classes/BusySlotDto.html":{},"classes/Calendar.html":{},"classes/CreateAvailabilityDto.html":{},"classes/CreateCalendarDto.html":{},"classes/CreateMeetingRequestDto.html":{},"classes/CreateMeetingResultDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateSessionRequestDto.html":{},"classes/DateTimeDto.html":{},"classes/FreeSlotDto.html":{},"classes/GuestFreeSlotDto.html":{},"classes/HoomanWorkSlotDto.html":{},"classes/NylasFreeBusy.html":{},"classes/Payment.html":{},"classes/RegisterResponseDto.html":{},"classes/SendNotificationRequestDto.html":{},"classes/SessionCompletedDto.html":{},"classes/TimeSlot.html":{},"classes/UpdateAvailabilityDto.html":{},"classes/UpdateCalendarDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateSessionRequestDto.html":{},"classes/UserCredentialsDto.html":{},"classes/UserRegistrationDto.html":{},"classes/WorkSlot.html":{},"classes/WorkSlotDto.html":{},"overview.html":{}}}],["client_reference_id",{"_index":1042,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["clientid",{"_index":431,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/NotificationService.html":{}}}],["clientsecret",{"_index":433,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/NotificationService.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":138,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_availabilitymodule",{"_index":244,"title":{},"body":{"modules/AvailabilityModule.html":{},"overview.html":{}}}],["cluster_availabilitymodule_exports",{"_index":246,"title":{},"body":{"modules/AvailabilityModule.html":{},"overview.html":{}}}],["cluster_availabilitymodule_providers",{"_index":245,"title":{},"body":{"modules/AvailabilityModule.html":{},"overview.html":{}}}],["cluster_calendarmodule",{"_index":384,"title":{},"body":{"modules/CalendarModule.html":{},"overview.html":{}}}],["cluster_calendarmodule_exports",{"_index":385,"title":{},"body":{"modules/CalendarModule.html":{},"overview.html":{}}}],["cluster_calendarmodule_providers",{"_index":386,"title":{},"body":{"modules/CalendarModule.html":{},"overview.html":{}}}],["cluster_encryptionmodule",{"_index":628,"title":{},"body":{"modules/EncryptionModule.html":{},"overview.html":{}}}],["cluster_encryptionmodule_exports",{"_index":629,"title":{},"body":{"modules/EncryptionModule.html":{},"overview.html":{}}}],["cluster_encryptionmodule_providers",{"_index":630,"title":{},"body":{"modules/EncryptionModule.html":{}}}],["cluster_freeslotmodule",{"_index":686,"title":{},"body":{"modules/FreeSlotModule.html":{},"overview.html":{}}}],["cluster_freeslotmodule_imports",{"_index":687,"title":{},"body":{"modules/FreeSlotModule.html":{}}}],["cluster_freeslotmodule_providers",{"_index":688,"title":{},"body":{"modules/FreeSlotModule.html":{},"overview.html":{}}}],["cluster_meetingmodule",{"_index":831,"title":{},"body":{"modules/MeetingModule.html":{},"overview.html":{}}}],["cluster_meetingmodule_imports",{"_index":832,"title":{},"body":{"modules/MeetingModule.html":{}}}],["cluster_meetingmodule_providers",{"_index":833,"title":{},"body":{"modules/MeetingModule.html":{},"overview.html":{}}}],["cluster_notificationmodule",{"_index":890,"title":{},"body":{"modules/NotificationModule.html":{},"overview.html":{}}}],["cluster_notificationmodule_exports",{"_index":891,"title":{},"body":{"modules/NotificationModule.html":{},"overview.html":{}}}],["cluster_notificationmodule_imports",{"_index":893,"title":{},"body":{"modules/NotificationModule.html":{}}}],["cluster_notificationmodule_providers",{"_index":892,"title":{},"body":{"modules/NotificationModule.html":{},"overview.html":{}}}],["cluster_paymentmodule",{"_index":982,"title":{},"body":{"modules/PaymentModule.html":{},"overview.html":{}}}],["cluster_paymentmodule_imports",{"_index":984,"title":{},"body":{"modules/PaymentModule.html":{}}}],["cluster_paymentmodule_providers",{"_index":983,"title":{},"body":{"modules/PaymentModule.html":{},"overview.html":{}}}],["cluster_sessionmodule",{"_index":1138,"title":{},"body":{"modules/SessionModule.html":{},"overview.html":{}}}],["cluster_sessionmodule_exports",{"_index":1140,"title":{},"body":{"modules/SessionModule.html":{},"overview.html":{}}}],["cluster_sessionmodule_imports",{"_index":1139,"title":{},"body":{"modules/SessionModule.html":{}}}],["cluster_sessionmodule_providers",{"_index":1141,"title":{},"body":{"modules/SessionModule.html":{},"overview.html":{}}}],["compare",{"_index":634,"title":{},"body":{"injectables/EncryptionService.html":{}}}],["compare(plain",{"_index":639,"title":{},"body":{"injectables/EncryptionService.html":{}}}],["comparison",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["compartimos",{"_index":945,"title":{},"body":{"injectables/NotificationService.html":{}}}],["completed.dto",{"_index":999,"title":{},"body":{"injectables/PaymentService.html":{}}}],["completed.dto.ts",{"_index":1034,"title":{},"body":{"classes/SessionCompletedDto.html":{},"coverage.html":{}}}],["completed.dto.ts:10",{"_index":1083,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:11",{"_index":1084,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:12",{"_index":1085,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:13",{"_index":1086,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:14",{"_index":1087,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:15",{"_index":1088,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:16",{"_index":1089,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:17",{"_index":1090,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:18",{"_index":1091,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:19",{"_index":1092,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:2",{"_index":1097,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:20",{"_index":1093,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:21",{"_index":1094,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:29",{"_index":1095,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:3",{"_index":1104,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:30",{"_index":1096,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:31",{"_index":1098,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:32",{"_index":1099,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:33",{"_index":1100,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:34",{"_index":1101,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:35",{"_index":1102,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:36",{"_index":1103,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:37",{"_index":1105,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:38",{"_index":1106,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:39",{"_index":1107,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:4",{"_index":1077,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:40",{"_index":1108,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:41",{"_index":1109,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:42",{"_index":1110,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:43",{"_index":1111,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:44",{"_index":1112,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:45",{"_index":1113,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:46",{"_index":1114,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:47",{"_index":1115,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:48",{"_index":1116,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:49",{"_index":1117,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:5",{"_index":1078,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:50",{"_index":1118,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:51",{"_index":1119,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:52",{"_index":1120,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:53",{"_index":1121,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:54",{"_index":1122,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:59",{"_index":1123,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:6",{"_index":1079,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:7",{"_index":1080,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:8",{"_index":1081,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["completed.dto.ts:9",{"_index":1082,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["config",{"_index":638,"title":{},"body":{"injectables/EncryptionService.html":{}}}],["configmodule",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["configmodule.forroot",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":150,"title":{},"body":{"modules/AuthModule.html":{},"modules/EncryptionModule.html":{},"injectables/EncryptionService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["configservice.get('jwt_secret",{"_index":812,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["configservice.get(jwt_expires_in",{"_index":160,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["configservice.get(jwt_secret",{"_index":157,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["configures",{"_index":1158,"title":{},"body":{"modules/SessionModule.html":{}}}],["consent",{"_index":1043,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["consent_collection",{"_index":1044,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["console.log(`unhandled",{"_index":1022,"title":{},"body":{"injectables/PaymentService.html":{}}}],["console.log(data",{"_index":889,"title":{},"body":{"injectables/MeetingService.html":{}}}],["console.log(mongo_db_connection_url",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log(process.env.mongo_db_connection_url",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log(resp",{"_index":884,"title":{},"body":{"injectables/MeetingService.html":{}}}],["const",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AvailabilityService.html":{},"injectables/CalendarService.html":{},"classes/DateTimeDto.html":{},"controllers/FreeSlotController.html":{},"injectables/FreeSlotService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Meeting.html":{},"injectables/MeetingService.html":{},"injectables/NotificationService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CalendarService.html":{},"classes/DateTimeDto.html":{},"injectables/EncryptionService.html":{},"controllers/FreeSlotController.html":{},"injectables/FreeSlotService.html":{},"injectables/JwtStrategy.html":{},"injectables/MeetingService.html":{},"injectables/NotificationService.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{}}}],["constructor(availabilityservice",{"_index":694,"title":{},"body":{"injectables/FreeSlotService.html":{}}}],["constructor(config",{"_index":636,"title":{},"body":{"injectables/EncryptionService.html":{}}}],["constructor(configservice",{"_index":796,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(httpservice",{"_index":841,"title":{},"body":{"injectables/MeetingService.html":{}}}],["constructor(meetingservice",{"_index":901,"title":{},"body":{"injectables/NotificationService.html":{}}}],["constructor(notificationservice",{"_index":989,"title":{},"body":{"injectables/PaymentService.html":{}}}],["constructor(private",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CalendarController.html":{},"injectables/EncryptionService.html":{},"controllers/MeetingController.html":{},"injectables/NotificationService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{}}}],["constructor(sessionmodel",{"_index":1160,"title":{},"body":{"injectables/SessionService.html":{}}}],["constructor(sessionservice",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(timestamp",{"_index":571,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["consultancy",{"_index":503,"title":{},"body":{"classes/CreateMeetingRequestDto.html":{},"interfaces/Meeting.html":{},"miscellaneous/variables.html":{}}}],["context",{"_index":773,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["controller",{"_index":81,"title":{"controllers/AuthController.html":{},"controllers/CalendarController.html":{},"controllers/FreeSlotController.html":{},"controllers/MeetingController.html":{},"controllers/PaymentController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/CalendarController.html":{},"controllers/FreeSlotController.html":{},"controllers/MeetingController.html":{},"controllers/PaymentController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('calendar",{"_index":377,"title":{},"body":{"controllers/CalendarController.html":{}}}],["controller('free",{"_index":674,"title":{},"body":{"controllers/FreeSlotController.html":{}}}],["controller('meeting",{"_index":828,"title":{},"body":{"controllers/MeetingController.html":{}}}],["controller('payment",{"_index":975,"title":{},"body":{"controllers/PaymentController.html":{}}}],["controllers",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/AvailabilityModule.html":{},"controllers/CalendarController.html":{},"modules/CalendarModule.html":{},"modules/DateTimeModule.html":{},"controllers/FreeSlotController.html":{},"modules/FreeSlotModule.html":{},"controllers/MeetingController.html":{},"modules/MeetingModule.html":{},"modules/NotificationModule.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"modules/SessionModule.html":{},"overview.html":{}}}],["convert",{"_index":277,"title":{},"body":{"injectables/AvailabilityService.html":{},"injectables/CalendarService.html":{}}}],["coverage",{"_index":1224,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":391,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/SessionService.html":{},"classes/UpdateAvailabilityDto.html":{},"classes/UpdateCalendarDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateSessionRequestDto.html":{}}}],["create(createcalendardto",{"_index":396,"title":{},"body":{"injectables/CalendarService.html":{}}}],["createavailabilitydto",{"_index":483,"title":{"classes/CreateAvailabilityDto.html":{}},"body":{"classes/CreateAvailabilityDto.html":{},"classes/UpdateAvailabilityDto.html":{},"coverage.html":{}}}],["createcalendardto",{"_index":397,"title":{"classes/CreateCalendarDto.html":{}},"body":{"injectables/CalendarService.html":{},"classes/CreateCalendarDto.html":{},"classes/UpdateCalendarDto.html":{},"coverage.html":{}}}],["createcalendardto.description",{"_index":463,"title":{},"body":{"injectables/CalendarService.html":{}}}],["createcalendardto.name",{"_index":462,"title":{},"body":{"injectables/CalendarService.html":{}}}],["created",{"_index":1045,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["created_at",{"_index":511,"title":{},"body":{"classes/CreateMeetingResultDto.html":{}}}],["createmeeting",{"_index":840,"title":{},"body":{"injectables/MeetingService.html":{}}}],["createmeetingrequestdto",{"_index":495,"title":{"classes/CreateMeetingRequestDto.html":{}},"body":{"classes/CreateMeetingRequestDto.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"coverage.html":{}}}],["createmeetingresultdto",{"_index":507,"title":{"classes/CreateMeetingResultDto.html":{}},"body":{"classes/CreateMeetingResultDto.html":{},"injectables/MeetingService.html":{},"coverage.html":{}}}],["createparamdecorator",{"_index":1363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createpaymentdto",{"_index":552,"title":{"classes/CreatePaymentDto.html":{}},"body":{"classes/CreatePaymentDto.html":{},"injectables/PaymentService.html":{},"classes/UpdatePaymentDto.html":{},"coverage.html":{}}}],["createsession",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{}}}],["createsessiondto",{"_index":1169,"title":{},"body":{"injectables/SessionService.html":{}}}],["createsessiondto.duration",{"_index":1172,"title":{},"body":{"injectables/SessionService.html":{}}}],["createsessiondto.timestamp",{"_index":1170,"title":{},"body":{"injectables/SessionService.html":{}}}],["createsessionrequestdto",{"_index":556,"title":{"classes/CreateSessionRequestDto.html":{}},"body":{"classes/CreateSessionRequestDto.html":{},"injectables/SessionService.html":{},"classes/UpdateSessionRequestDto.html":{},"coverage.html":{}}}],["createtoken",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["credential.dto.ts",{"_index":1198,"title":{},"body":{"classes/UserCredentialsDto.html":{},"coverage.html":{}}}],["credential.dto.ts:10",{"_index":1200,"title":{},"body":{"classes/UserCredentialsDto.html":{}}}],["credential.dto.ts:16",{"_index":1201,"title":{},"body":{"classes/UserCredentialsDto.html":{}}}],["ctx",{"_index":1365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currency",{"_index":1046,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["currency_conversion",{"_index":1047,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["currentdayofweek",{"_index":331,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["custom",{"_index":780,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["custom_fields",{"_index":1048,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["custom_text",{"_index":1049,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["customer",{"_index":1050,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["customer_creation",{"_index":1051,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["customer_details",{"_index":1052,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["customer_email",{"_index":1053,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["customeremail",{"_index":1017,"title":{},"body":{"injectables/PaymentService.html":{}}}],["cálido",{"_index":929,"title":{},"body":{"injectables/NotificationService.html":{}}}],["d",{"_index":276,"title":{},"body":{"injectables/AvailabilityService.html":{},"classes/DateTimeDto.html":{}}}],["d.getdate",{"_index":611,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["d.getfullyear",{"_index":612,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["d.getmonth",{"_index":610,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["d.gettime",{"_index":283,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["d.gettimezoneoffset",{"_index":289,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["d.tolocaletimestring('en",{"_index":619,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["da",{"_index":922,"title":{},"body":{"injectables/NotificationService.html":{}}}],["damos",{"_index":927,"title":{},"body":{"injectables/NotificationService.html":{}}}],["dash",{"_index":456,"title":{},"body":{"injectables/CalendarService.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":1364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"classes/Availability.html":{},"injectables/AvailabilityService.html":{},"injectables/CalendarService.html":{},"classes/DateTimeDto.html":{},"classes/FreeSlotDto.html":{},"injectables/FreeSlotService.html":{},"classes/UserRegistrationDto.html":{},"classes/WorkSlot.html":{}}}],["date().gettime",{"_index":604,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["date(0",{"_index":303,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["date(6",{"_index":306,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["date(date.gettime",{"_index":609,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["date(endstrdatetime",{"_index":324,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["date(monterreytime",{"_index":299,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["date(startstrdatetime",{"_index":323,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["date(timestamp",{"_index":605,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["date.gettimezoneoffset",{"_index":608,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["date.now",{"_index":1171,"title":{},"body":{"injectables/SessionService.html":{}}}],["dateofbirth",{"_index":1204,"title":{},"body":{"classes/UserRegistrationDto.html":{}}}],["datetime",{"_index":613,"title":{},"body":{"classes/DateTimeDto.html":{},"injectables/FreeSlotService.html":{}}}],["datetime.dayofweek",{"_index":622,"title":{},"body":{"classes/DateTimeDto.html":{},"injectables/FreeSlotService.html":{}}}],["datetime.offset",{"_index":620,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["datetime.strdate",{"_index":615,"title":{},"body":{"classes/DateTimeDto.html":{},"injectables/FreeSlotService.html":{}}}],["datetime.strtime",{"_index":618,"title":{},"body":{"classes/DateTimeDto.html":{},"injectables/FreeSlotService.html":{}}}],["datetime.timezone",{"_index":621,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["datetimedto",{"_index":418,"title":{"classes/DateTimeDto.html":{}},"body":{"injectables/CalendarService.html":{},"classes/DateTimeDto.html":{},"injectables/FreeSlotService.html":{},"coverage.html":{}}}],["datetimedto(timestamp",{"_index":614,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["datetimedto.gettimezonelist",{"_index":471,"title":{},"body":{"injectables/CalendarService.html":{}}}],["datetimedto.gettimezoneoffset(guesttimezone",{"_index":734,"title":{},"body":{"injectables/FreeSlotService.html":{}}}],["datetimedto.timestamptodatetime",{"_index":729,"title":{},"body":{"injectables/FreeSlotService.html":{}}}],["datetimedto.timezoneoffsetmap[timezone",{"_index":606,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["datetimemodule",{"_index":16,"title":{"modules/DateTimeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DateTimeModule.html":{},"modules.html":{},"overview.html":{}}}],["day",{"_index":236,"title":{},"body":{"classes/Availability.html":{},"injectables/AvailabilityService.html":{},"classes/DateTimeDto.html":{},"classes/HoomanWorkSlotDto.html":{},"classes/WorkSlot.html":{},"classes/WorkSlotDto.html":{}}}],["dayofweek",{"_index":261,"title":{},"body":{"injectables/AvailabilityService.html":{},"classes/DateTimeDto.html":{}}}],["days",{"_index":710,"title":{},"body":{"injectables/FreeSlotService.html":{}}}],["daysofweek",{"_index":330,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["daysofweek.indexof(dayofweek.tolowercase",{"_index":334,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["daysuntiltargetday",{"_index":335,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["de",{"_index":879,"title":{},"body":{"injectables/MeetingService.html":{},"injectables/NotificationService.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AvailabilityModule.html":{},"modules/CalendarModule.html":{},"modules/EncryptionModule.html":{},"modules/FreeSlotModule.html":{},"modules/MeetingModule.html":{},"modules/NotificationModule.html":{},"modules/PaymentModule.html":{},"modules/SessionModule.html":{},"overview.html":{}}}],["decorators",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"classes/Availability.html":{},"classes/BookRequestResponse.html":{},"controllers/CalendarController.html":{},"classes/CreateCalendarDto.html":{},"classes/CreateMeetingRequestDto.html":{},"controllers/FreeSlotController.html":{},"classes/GuestFreeSlotDto.html":{},"controllers/MeetingController.html":{},"classes/NylasFreeBusy.html":{},"controllers/PaymentController.html":{},"classes/RegisterResponseDto.html":{},"classes/TimeSlot.html":{},"classes/UserCredentialsDto.html":{},"classes/UserRegistrationDto.html":{},"classes/WorkSlot.html":{}}}],["default",{"_index":355,"title":{},"body":{"classes/BookRequestResponse.html":{},"classes/BusySlotDto.html":{},"classes/CreateMeetingRequestDto.html":{},"classes/DateTimeDto.html":{},"controllers/FreeSlotController.html":{},"classes/FreeSlotDto.html":{},"injectables/FreeSlotService.html":{},"injectables/NotificationService.html":{},"injectables/PaymentService.html":{},"classes/SendNotificationRequestDto.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":659,"title":{},"body":{"controllers/FreeSlotController.html":{}}}],["defined",{"_index":74,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Availability.html":{},"injectables/AvailabilityService.html":{},"classes/BookRequestResponse.html":{},"classes/BusySlotDto.html":{},"controllers/CalendarController.html":{},"injectables/CalendarService.html":{},"classes/CreateCalendarDto.html":{},"classes/CreateMeetingRequestDto.html":{},"classes/CreateMeetingResultDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateSessionRequestDto.html":{},"classes/DateTimeDto.html":{},"injectables/EncryptionService.html":{},"controllers/FreeSlotController.html":{},"classes/FreeSlotDto.html":{},"injectables/FreeSlotService.html":{},"classes/GuestFreeSlotDto.html":{},"classes/HoomanWorkSlotDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"injectables/NotificationService.html":{},"classes/NylasFreeBusy.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"classes/RegisterResponseDto.html":{},"classes/SendNotificationRequestDto.html":{},"classes/SessionCompletedDto.html":{},"injectables/SessionService.html":{},"classes/TimeSlot.html":{},"classes/UserCredentialsDto.html":{},"classes/UserRegistrationDto.html":{},"classes/WorkSlot.html":{},"classes/WorkSlotDto.html":{}}}],["defines",{"_index":1157,"title":{},"body":{"modules/SessionModule.html":{}}}],["del",{"_index":938,"title":{},"body":{"injectables/NotificationService.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AvailabilityModule.html":{},"modules/CalendarModule.html":{},"modules/EncryptionModule.html":{},"modules/FreeSlotModule.html":{},"modules/MeetingModule.html":{},"modules/NotificationModule.html":{},"modules/PaymentModule.html":{},"modules/SessionModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":354,"title":{},"body":{"classes/BookRequestResponse.html":{},"injectables/CalendarService.html":{},"classes/CreateCalendarDto.html":{},"classes/CreateMeetingRequestDto.html":{},"controllers/FreeSlotController.html":{},"interfaces/Meeting.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["destination's",{"_index":294,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["details",{"_index":349,"title":{},"body":{"classes/BookRequestResponse.html":{}}}],["development",{"_index":1300,"title":{},"body":{"index.html":{}}}],["disable",{"_index":422,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/NotificationService.html":{}}}],["display_name",{"_index":512,"title":{},"body":{"classes/CreateMeetingResultDto.html":{},"injectables/MeetingService.html":{}}}],["documentation",{"_index":1225,"title":{},"body":{"coverage.html":{}}}],["domingo",{"_index":748,"title":{},"body":{"classes/GuestFreeSlotDto.html":{}}}],["dotenv",{"_index":1265,"title":{},"body":{"dependencies.html":{}}}],["dotenv/config",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"injectables/AvailabilityService.html":{},"injectables/CalendarService.html":{},"injectables/MeetingService.html":{},"injectables/NotificationService.html":{},"injectables/PaymentService.html":{}}}],["draft",{"_index":910,"title":{},"body":{"injectables/NotificationService.html":{}}}],["draft(nylas",{"_index":913,"title":{},"body":{"injectables/NotificationService.html":{}}}],["draft.send",{"_index":954,"title":{},"body":{"injectables/NotificationService.html":{}}}],["dto/book",{"_index":825,"title":{},"body":{"controllers/MeetingController.html":{},"injectables/MeetingService.html":{}}}],["dto/busy",{"_index":698,"title":{},"body":{"injectables/FreeSlotService.html":{}}}],["dto/create",{"_index":410,"title":{},"body":{"injectables/CalendarService.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{}}}],["dto/send",{"_index":907,"title":{},"body":{"injectables/NotificationService.html":{}}}],["dto/session",{"_index":998,"title":{},"body":{"injectables/PaymentService.html":{}}}],["dto/update",{"_index":412,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{}}}],["dto/work",{"_index":226,"title":{},"body":{"classes/Availability.html":{},"injectables/AvailabilityService.html":{},"classes/WorkSlot.html":{}}}],["duration",{"_index":558,"title":{},"body":{"classes/CreateSessionRequestDto.html":{},"interfaces/ISession.html":{},"miscellaneous/variables.html":{}}}],["e2e",{"_index":1310,"title":{},"body":{"index.html":{}}}],["each",{"_index":243,"title":{},"body":{"classes/Availability.html":{},"classes/NylasFreeBusy.html":{},"classes/TimeSlot.html":{},"classes/WorkSlot.html":{}}}],["efficient",{"_index":1288,"title":{},"body":{"index.html":{}}}],["el",{"_index":936,"title":{},"body":{"injectables/NotificationService.html":{}}}],["email",{"_index":207,"title":{},"body":{"classes/Availability.html":{},"injectables/NotificationService.html":{},"classes/NylasFreeBusy.html":{},"classes/SendNotificationRequestDto.html":{},"classes/SessionCompletedDto.html":{},"classes/TimeSlot.html":{},"classes/UserCredentialsDto.html":{},"classes/UserRegistrationDto.html":{},"classes/WorkSlot.html":{}}}],["emails",{"_index":402,"title":{},"body":{"injectables/CalendarService.html":{}}}],["en",{"_index":465,"title":{},"body":{"injectables/CalendarService.html":{}}}],["enabled",{"_index":1124,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["encrypted",{"_index":640,"title":{},"body":{"injectables/EncryptionService.html":{}}}],["encryption.service",{"_index":632,"title":{},"body":{"modules/EncryptionModule.html":{}}}],["encryption/encryption.module",{"_index":149,"title":{},"body":{"modules/AuthModule.html":{},"modules/SessionModule.html":{}}}],["encryption/encryption.service",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{}}}],["encryptionmodule",{"_index":139,"title":{"modules/EncryptionModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/EncryptionModule.html":{},"modules/SessionModule.html":{},"modules.html":{},"overview.html":{}}}],["encryptionservice",{"_index":140,"title":{"injectables/EncryptionService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/EncryptionModule.html":{},"injectables/EncryptionService.html":{},"coverage.html":{},"overview.html":{}}}],["enddatetime",{"_index":242,"title":{},"body":{"classes/Availability.html":{},"injectables/AvailabilityService.html":{},"classes/FreeSlotDto.html":{},"classes/WorkSlot.html":{}}}],["endpointsecret",{"_index":979,"title":{},"body":{"controllers/PaymentController.html":{},"injectables/PaymentService.html":{}}}],["endstrdatetime",{"_index":321,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["endtime",{"_index":240,"title":{},"body":{"classes/Availability.html":{},"classes/BusySlotDto.html":{},"injectables/CalendarService.html":{},"classes/FreeSlotDto.html":{},"injectables/FreeSlotService.html":{},"classes/HoomanWorkSlotDto.html":{},"classes/NylasFreeBusy.html":{},"classes/TimeSlot.html":{},"classes/WorkSlot.html":{},"classes/WorkSlotDto.html":{},"miscellaneous/variables.html":{}}}],["entities/availability.entity",{"_index":262,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["entities/meeting.schema",{"_index":353,"title":{},"body":{"classes/BookRequestResponse.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{}}}],["entities/nylas",{"_index":416,"title":{},"body":{"injectables/CalendarService.html":{}}}],["entities/session.interface",{"_index":1167,"title":{},"body":{"injectables/SessionService.html":{}}}],["entities/session.schema",{"_index":1149,"title":{},"body":{"modules/SessionModule.html":{}}}],["entries.flatmap((entry",{"_index":717,"title":{},"body":{"injectables/FreeSlotService.html":{}}}],["entry.timeslots.map((slot",{"_index":718,"title":{},"body":{"injectables/FreeSlotService.html":{}}}],["enum",{"_index":504,"title":{},"body":{"classes/CreateMeetingRequestDto.html":{},"interfaces/Meeting.html":{},"miscellaneous/variables.html":{}}}],["env",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":776,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/PaymentService.html":{}}}],["err.message",{"_index":1011,"title":{},"body":{"injectables/PaymentService.html":{}}}],["error",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"injectables/PaymentService.html":{}}}],["error('slot",{"_index":861,"title":{},"body":{"injectables/MeetingService.html":{}}}],["eslint",{"_index":421,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/NotificationService.html":{}}}],["eslint/no",{"_index":426,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/NotificationService.html":{}}}],["esperamos",{"_index":949,"title":{},"body":{"injectables/NotificationService.html":{}}}],["establish",{"_index":786,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["estoffset",{"_index":295,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["event",{"_index":1005,"title":{},"body":{"injectables/PaymentService.html":{}}}],["event.data.object",{"_index":1016,"title":{},"body":{"injectables/PaymentService.html":{}}}],["event.type",{"_index":1013,"title":{},"body":{"injectables/PaymentService.html":{}}}],["example",{"_index":499,"title":{},"body":{"classes/CreateMeetingRequestDto.html":{},"injectables/JwtAuthGuard.html":{}}}],["exception",{"_index":789,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["executioncontext",{"_index":771,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["exists",{"_index":1370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expire_after_use",{"_index":513,"title":{},"body":{"classes/CreateMeetingResultDto.html":{}}}],["expires_at",{"_index":514,"title":{},"body":{"classes/CreateMeetingResultDto.html":{},"classes/SessionCompletedDto.html":{}}}],["expiresin",{"_index":159,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["export",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Availability.html":{},"modules/AvailabilityModule.html":{},"classes/BookRequestResponse.html":{},"classes/BusySlotDto.html":{},"classes/Calendar.html":{},"controllers/CalendarController.html":{},"modules/CalendarModule.html":{},"injectables/CalendarService.html":{},"classes/CreateAvailabilityDto.html":{},"classes/CreateCalendarDto.html":{},"classes/CreateMeetingRequestDto.html":{},"classes/CreateMeetingResultDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateSessionRequestDto.html":{},"classes/DateTimeDto.html":{},"modules/DateTimeModule.html":{},"modules/EncryptionModule.html":{},"injectables/EncryptionService.html":{},"controllers/FreeSlotController.html":{},"classes/FreeSlotDto.html":{},"modules/FreeSlotModule.html":{},"injectables/FreeSlotService.html":{},"classes/GuestFreeSlotDto.html":{},"classes/HoomanWorkSlotDto.html":{},"interfaces/ISession.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Meeting.html":{},"controllers/MeetingController.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"classes/NylasFreeBusy.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"classes/RegisterResponseDto.html":{},"classes/SendNotificationRequestDto.html":{},"classes/SessionCompletedDto.html":{},"modules/SessionModule.html":{},"injectables/SessionService.html":{},"classes/TimeSlot.html":{},"classes/UpdateAvailabilityDto.html":{},"classes/UpdateCalendarDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateSessionRequestDto.html":{},"classes/UserCredentialsDto.html":{},"classes/UserRegistrationDto.html":{},"classes/WorkSlot.html":{},"classes/WorkSlotDto.html":{}}}],["exported",{"_index":1154,"title":{},"body":{"modules/SessionModule.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AvailabilityModule.html":{},"modules/CalendarModule.html":{},"modules/EncryptionModule.html":{},"modules/FreeSlotModule.html":{},"modules/MeetingModule.html":{},"modules/NotificationModule.html":{},"modules/PaymentModule.html":{},"modules/SessionModule.html":{},"overview.html":{}}}],["express",{"_index":1256,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":763,"title":{},"body":{"interfaces/ISession.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Meeting.html":{},"classes/UpdateAvailabilityDto.html":{},"classes/UpdateCalendarDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateSessionRequestDto.html":{}}}],["external",{"_index":1155,"title":{},"body":{"modules/SessionModule.html":{}}}],["extractjwt",{"_index":800,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":809,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":657,"title":{},"body":{"controllers/FreeSlotController.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["feature",{"_index":1152,"title":{},"body":{"modules/SessionModule.html":{}}}],["file",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Availability.html":{},"modules/AvailabilityModule.html":{},"injectables/AvailabilityService.html":{},"classes/BookRequestResponse.html":{},"classes/BusySlotDto.html":{},"classes/Calendar.html":{},"controllers/CalendarController.html":{},"modules/CalendarModule.html":{},"injectables/CalendarService.html":{},"classes/CreateAvailabilityDto.html":{},"classes/CreateCalendarDto.html":{},"classes/CreateMeetingRequestDto.html":{},"classes/CreateMeetingResultDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateSessionRequestDto.html":{},"classes/DateTimeDto.html":{},"modules/DateTimeModule.html":{},"modules/EncryptionModule.html":{},"injectables/EncryptionService.html":{},"controllers/FreeSlotController.html":{},"classes/FreeSlotDto.html":{},"modules/FreeSlotModule.html":{},"injectables/FreeSlotService.html":{},"classes/GuestFreeSlotDto.html":{},"classes/HoomanWorkSlotDto.html":{},"interfaces/ISession.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Meeting.html":{},"controllers/MeetingController.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"classes/NylasFreeBusy.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"classes/RegisterResponseDto.html":{},"classes/SendNotificationRequestDto.html":{},"classes/SessionCompletedDto.html":{},"modules/SessionModule.html":{},"injectables/SessionService.html":{},"classes/TimeSlot.html":{},"classes/UpdateAvailabilityDto.html":{},"classes/UpdateCalendarDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateSessionRequestDto.html":{},"classes/UserCredentialsDto.html":{},"classes/UserRegistrationDto.html":{},"classes/WorkSlot.html":{},"classes/WorkSlotDto.html":{},"coverage.html":{}}}],["find",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["findall",{"_index":251,"title":{},"body":{"injectables/AvailabilityService.html":{},"injectables/CalendarService.html":{},"injectables/SessionService.html":{}}}],["findone",{"_index":252,"title":{},"body":{"injectables/AvailabilityService.html":{},"injectables/CalendarService.html":{},"injectables/SessionService.html":{}}}],["findone(id",{"_index":256,"title":{},"body":{"injectables/AvailabilityService.html":{},"injectables/CalendarService.html":{},"injectables/SessionService.html":{}}}],["findworkslots",{"_index":253,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["firstname",{"_index":1205,"title":{},"body":{"classes/UserRegistrationDto.html":{}}}],["firstvaluefrom",{"_index":849,"title":{},"body":{"injectables/MeetingService.html":{}}}],["framework",{"_index":1286,"title":{},"body":{"index.html":{}}}],["free",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"injectables/CalendarService.html":{},"controllers/FreeSlotController.html":{},"modules/FreeSlotModule.html":{},"injectables/FreeSlotService.html":{},"classes/GuestFreeSlotDto.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"modules/NotificationModule.html":{},"classes/NylasFreeBusy.html":{},"classes/TimeSlot.html":{},"coverage.html":{}}}],["freeslotcontroller",{"_index":648,"title":{"controllers/FreeSlotController.html":{}},"body":{"controllers/FreeSlotController.html":{},"modules/FreeSlotModule.html":{},"coverage.html":{}}}],["freeslotdto",{"_index":682,"title":{"classes/FreeSlotDto.html":{}},"body":{"classes/FreeSlotDto.html":{},"injectables/FreeSlotService.html":{},"coverage.html":{}}}],["freeslotmodule",{"_index":17,"title":{"modules/FreeSlotModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FreeSlotModule.html":{},"modules/MeetingModule.html":{},"modules/NotificationModule.html":{},"modules.html":{},"overview.html":{}}}],["freeslots",{"_index":720,"title":{},"body":{"injectables/FreeSlotService.html":{}}}],["freeslotsdata",{"_index":855,"title":{},"body":{"injectables/MeetingService.html":{}}}],["freeslotsdata.freeslots.some",{"_index":858,"title":{},"body":{"injectables/MeetingService.html":{}}}],["freeslotservice",{"_index":664,"title":{"injectables/FreeSlotService.html":{}},"body":{"controllers/FreeSlotController.html":{},"modules/FreeSlotModule.html":{},"injectables/FreeSlotService.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"modules/NotificationModule.html":{},"coverage.html":{},"overview.html":{}}}],["friday",{"_index":233,"title":{},"body":{"classes/Availability.html":{},"injectables/AvailabilityService.html":{},"classes/WorkSlot.html":{},"miscellaneous/variables.html":{}}}],["function",{"_index":263,"title":{},"body":{"injectables/AvailabilityService.html":{},"coverage.html":{}}}],["functions",{"_index":1279,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('timezones",{"_index":382,"title":{},"body":{"controllers/CalendarController.html":{}}}],["getdateofnextdayofweek",{"_index":254,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["getdateofnextdayofweek(dayofweek",{"_index":259,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["getfreebusy",{"_index":392,"title":{},"body":{"injectables/CalendarService.html":{}}}],["getfreebusy(starttime",{"_index":401,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/FreeSlotService.html":{}}}],["getfreeslots",{"_index":651,"title":{},"body":{"controllers/FreeSlotController.html":{},"injectables/FreeSlotService.html":{}}}],["getfreeslots(guesttimezone",{"_index":652,"title":{},"body":{"controllers/FreeSlotController.html":{},"injectables/FreeSlotService.html":{}}}],["gethello",{"_index":73,"title":{},"body":{"injectables/AppService.html":{}}}],["getmonterreyoffset",{"_index":296,"title":{},"body":{"injectables/AvailabilityService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getmonterreyoffset())}:00",{"_index":320,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["getnow",{"_index":275,"title":{},"body":{"injectables/AvailabilityService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getnow().getday",{"_index":332,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["gettimezonelist",{"_index":366,"title":{},"body":{"controllers/CalendarController.html":{},"injectables/CalendarService.html":{},"classes/DateTimeDto.html":{}}}],["gettimezoneoffset",{"_index":569,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["gettimezoneoffset(timezone",{"_index":598,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["getting",{"_index":1282,"title":{"index.html":{}},"body":{}}],["gracias",{"_index":917,"title":{},"body":{"injectables/NotificationService.html":{}}}],["graph",{"_index":1341,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":1317,"title":{},"body":{"index.html":{}}}],["guards",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["guest",{"_index":658,"title":{},"body":{"controllers/FreeSlotController.html":{}}}],["guest_url",{"_index":544,"title":{},"body":{"classes/CreateMeetingResultDto.html":{}}}],["guestfreeslotdto",{"_index":699,"title":{"classes/GuestFreeSlotDto.html":{}},"body":{"injectables/FreeSlotService.html":{},"classes/GuestFreeSlotDto.html":{},"coverage.html":{}}}],["guestfreeslots",{"_index":735,"title":{},"body":{"injectables/FreeSlotService.html":{}}}],["guestmeetingdate",{"_index":737,"title":{},"body":{"classes/GuestFreeSlotDto.html":{}}}],["guestmeetingday",{"_index":738,"title":{},"body":{"classes/GuestFreeSlotDto.html":{}}}],["guestmeetingstarttime",{"_index":739,"title":{},"body":{"classes/GuestFreeSlotDto.html":{}}}],["guestname",{"_index":1031,"title":{},"body":{"classes/SendNotificationRequestDto.html":{}}}],["guestslot",{"_index":727,"title":{},"body":{"injectables/FreeSlotService.html":{}}}],["guestslot.guestmeetingdate",{"_index":730,"title":{},"body":{"injectables/FreeSlotService.html":{}}}],["guestslot.guestmeetingday",{"_index":732,"title":{},"body":{"injectables/FreeSlotService.html":{}}}],["guestslot.guestmeetingstarttime",{"_index":731,"title":{},"body":{"injectables/FreeSlotService.html":{}}}],["guestslot.meetingstarttime",{"_index":728,"title":{},"body":{"injectables/FreeSlotService.html":{}}}],["guesttimezone",{"_index":655,"title":{},"body":{"controllers/FreeSlotController.html":{},"injectables/FreeSlotService.html":{}}}],["guesttimezoneoffset",{"_index":733,"title":{},"body":{"injectables/FreeSlotService.html":{}}}],["gusto",{"_index":924,"title":{},"body":{"injectables/NotificationService.html":{}}}],["handlerequest",{"_index":769,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlerequest(err",{"_index":774,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["hash",{"_index":635,"title":{},"body":{"injectables/EncryptionService.html":{}}}],["hash(plain",{"_index":643,"title":{},"body":{"injectables/EncryptionService.html":{}}}],["headers",{"_index":881,"title":{},"body":{"injectables/MeetingService.html":{}}}],["headersrequest",{"_index":870,"title":{},"body":{"injectables/MeetingService.html":{}}}],["hello",{"_index":79,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":783,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"modules/SessionModule.html":{},"index.html":{}}}],["hola",{"_index":915,"title":{},"body":{"injectables/NotificationService.html":{}}}],["hoomanworkslotdto",{"_index":216,"title":{"classes/HoomanWorkSlotDto.html":{}},"body":{"classes/Availability.html":{},"injectables/AvailabilityService.html":{},"classes/HoomanWorkSlotDto.html":{},"classes/WorkSlot.html":{},"classes/WorkSlotDto.html":{},"coverage.html":{}}}],["host_url",{"_index":542,"title":{},"body":{"classes/CreateMeetingResultDto.html":{}}}],["hour",{"_index":1173,"title":{},"body":{"injectables/SessionService.html":{}}}],["hour.endtime",{"_index":272,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["hour.starttime",{"_index":270,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["href",{"_index":543,"title":{},"body":{"classes/CreateMeetingResultDto.html":{}}}],["http",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpmodule",{"_index":835,"title":{},"body":{"modules/MeetingModule.html":{}}}],["https://nestjs.com",{"_index":1334,"title":{},"body":{"index.html":{}}}],["httpservice",{"_index":842,"title":{},"body":{"injectables/MeetingService.html":{}}}],["id",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{},"classes/Availability.html":{},"injectables/AvailabilityService.html":{},"injectables/CalendarService.html":{},"classes/CreateMeetingResultDto.html":{},"classes/SessionCompletedDto.html":{},"injectables/SessionService.html":{},"classes/WorkSlot.html":{}}}],["identifier",{"_index":1226,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":810,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["import",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Availability.html":{},"modules/AvailabilityModule.html":{},"injectables/AvailabilityService.html":{},"classes/BookRequestResponse.html":{},"controllers/CalendarController.html":{},"modules/CalendarModule.html":{},"injectables/CalendarService.html":{},"classes/CreateCalendarDto.html":{},"classes/CreateMeetingRequestDto.html":{},"modules/DateTimeModule.html":{},"modules/EncryptionModule.html":{},"injectables/EncryptionService.html":{},"controllers/FreeSlotController.html":{},"modules/FreeSlotModule.html":{},"injectables/FreeSlotService.html":{},"classes/GuestFreeSlotDto.html":{},"interfaces/ISession.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Meeting.html":{},"controllers/MeetingController.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"classes/NylasFreeBusy.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"classes/RegisterResponseDto.html":{},"modules/SessionModule.html":{},"injectables/SessionService.html":{},"classes/TimeSlot.html":{},"classes/UpdateAvailabilityDto.html":{},"classes/UpdateCalendarDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateSessionRequestDto.html":{},"classes/UserCredentialsDto.html":{},"classes/UserRegistrationDto.html":{},"classes/WorkSlot.html":{}}}],["imports",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FreeSlotModule.html":{},"modules/MeetingModule.html":{},"modules/NotificationModule.html":{},"modules/PaymentModule.html":{},"modules/SessionModule.html":{},"miscellaneous/variables.html":{}}}],["includes",{"_index":1145,"title":{},"body":{"modules/SessionModule.html":{}}}],["index",{"_index":71,"title":{"index.html":{}},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Availability.html":{},"injectables/AvailabilityService.html":{},"classes/BookRequestResponse.html":{},"classes/BusySlotDto.html":{},"controllers/CalendarController.html":{},"injectables/CalendarService.html":{},"classes/CreateCalendarDto.html":{},"classes/CreateMeetingRequestDto.html":{},"classes/CreateMeetingResultDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateSessionRequestDto.html":{},"classes/DateTimeDto.html":{},"injectables/EncryptionService.html":{},"controllers/FreeSlotController.html":{},"classes/FreeSlotDto.html":{},"injectables/FreeSlotService.html":{},"classes/GuestFreeSlotDto.html":{},"classes/HoomanWorkSlotDto.html":{},"interfaces/ISession.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Meeting.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"injectables/NotificationService.html":{},"classes/NylasFreeBusy.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"classes/RegisterResponseDto.html":{},"classes/SendNotificationRequestDto.html":{},"classes/SessionCompletedDto.html":{},"injectables/SessionService.html":{},"classes/TimeSlot.html":{},"classes/UserCredentialsDto.html":{},"classes/UserRegistrationDto.html":{},"classes/WorkSlot.html":{},"classes/WorkSlotDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Availability.html":{},"modules/AvailabilityModule.html":{},"injectables/AvailabilityService.html":{},"classes/BookRequestResponse.html":{},"classes/BusySlotDto.html":{},"classes/Calendar.html":{},"controllers/CalendarController.html":{},"modules/CalendarModule.html":{},"injectables/CalendarService.html":{},"classes/CreateAvailabilityDto.html":{},"classes/CreateCalendarDto.html":{},"classes/CreateMeetingRequestDto.html":{},"classes/CreateMeetingResultDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateSessionRequestDto.html":{},"classes/DateTimeDto.html":{},"modules/DateTimeModule.html":{},"modules/EncryptionModule.html":{},"injectables/EncryptionService.html":{},"controllers/FreeSlotController.html":{},"classes/FreeSlotDto.html":{},"modules/FreeSlotModule.html":{},"injectables/FreeSlotService.html":{},"classes/GuestFreeSlotDto.html":{},"classes/HoomanWorkSlotDto.html":{},"interfaces/ISession.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Meeting.html":{},"controllers/MeetingController.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"classes/NylasFreeBusy.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"classes/RegisterResponseDto.html":{},"classes/SendNotificationRequestDto.html":{},"classes/SessionCompletedDto.html":{},"modules/SessionModule.html":{},"injectables/SessionService.html":{},"classes/TimeSlot.html":{},"classes/UpdateAvailabilityDto.html":{},"classes/UpdateCalendarDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateSessionRequestDto.html":{},"classes/UserCredentialsDto.html":{},"classes/UserRegistrationDto.html":{},"classes/WorkSlot.html":{},"classes/WorkSlotDto.html":{}}}],["info.decorator",{"_index":668,"title":{},"body":{"controllers/FreeSlotController.html":{}}}],["info.decorator.ts",{"_index":1245,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["initial_join_options",{"_index":515,"title":{},"body":{"classes/CreateMeetingResultDto.html":{}}}],["inject",{"_index":162,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":68,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/AvailabilityService.html":{},"injectables/CalendarService.html":{},"injectables/EncryptionService.html":{},"injectables/FreeSlotService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MeetingService.html":{},"injectables/NotificationService.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/AvailabilityService.html":{},"injectables/CalendarService.html":{},"injectables/EncryptionService.html":{},"injectables/FreeSlotService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MeetingService.html":{},"injectables/NotificationService.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"coverage.html":{}}}],["injectables",{"_index":69,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/AvailabilityService.html":{},"injectables/CalendarService.html":{},"injectables/EncryptionService.html":{},"injectables/FreeSlotService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MeetingService.html":{},"injectables/NotificationService.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"overview.html":{}}}],["injectmodel",{"_index":853,"title":{},"body":{"injectables/MeetingService.html":{},"injectables/SessionService.html":{}}}],["injectmodel('meeting",{"_index":854,"title":{},"body":{"injectables/MeetingService.html":{}}}],["injectmodel('session",{"_index":1168,"title":{},"body":{"injectables/SessionService.html":{}}}],["installation",{"_index":1296,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1298,"title":{},"body":{"index.html":{}}}],["interface",{"_index":757,"title":{"interfaces/ISession.html":{},"interfaces/Meeting.html":{}},"body":{"interfaces/ISession.html":{},"interfaces/Meeting.html":{},"coverage.html":{}}}],["interfaces",{"_index":759,"title":{},"body":{"interfaces/ISession.html":{},"interfaces/Meeting.html":{},"overview.html":{}}}],["invoice",{"_index":1054,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["invoice_creation",{"_index":1055,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["invoice_data",{"_index":1133,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["is_available",{"_index":516,"title":{},"body":{"classes/CreateMeetingResultDto.html":{}}}],["is_captions_available",{"_index":551,"title":{},"body":{"classes/CreateMeetingResultDto.html":{}}}],["is_chat_available",{"_index":548,"title":{},"body":{"classes/CreateMeetingResultDto.html":{}}}],["is_locale_switcher_available",{"_index":550,"title":{},"body":{"classes/CreateMeetingResultDto.html":{}}}],["is_recording_available",{"_index":547,"title":{},"body":{"classes/CreateMeetingResultDto.html":{}}}],["is_whiteboard_available",{"_index":549,"title":{},"body":{"classes/CreateMeetingResultDto.html":{}}}],["isarray",{"_index":221,"title":{},"body":{"classes/Availability.html":{},"classes/WorkSlot.html":{}}}],["isdate",{"_index":1213,"title":{},"body":{"classes/UserRegistrationDto.html":{}}}],["isdstobserved",{"_index":311,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["isemail",{"_index":210,"title":{},"body":{"classes/Availability.html":{},"classes/NylasFreeBusy.html":{},"classes/TimeSlot.html":{},"classes/UserCredentialsDto.html":{},"classes/UserRegistrationDto.html":{},"classes/WorkSlot.html":{}}}],["isession",{"_index":758,"title":{"interfaces/ISession.html":{}},"body":{"interfaces/ISession.html":{},"injectables/SessionService.html":{},"coverage.html":{}}}],["isglobal",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["isin",{"_index":222,"title":{},"body":{"classes/Availability.html":{},"classes/GuestFreeSlotDto.html":{},"classes/WorkSlot.html":{}}}],["isnotempty",{"_index":1030,"title":{},"body":{"classes/RegisterResponseDto.html":{},"classes/UserCredentialsDto.html":{},"classes/UserRegistrationDto.html":{}}}],["isnumber",{"_index":491,"title":{},"body":{"classes/CreateCalendarDto.html":{},"classes/GuestFreeSlotDto.html":{},"classes/NylasFreeBusy.html":{},"classes/TimeSlot.html":{}}}],["isoptional",{"_index":223,"title":{},"body":{"classes/Availability.html":{},"classes/WorkSlot.html":{}}}],["isoptional()@isstring",{"_index":212,"title":{},"body":{"classes/Availability.html":{}}}],["ispositive",{"_index":492,"title":{},"body":{"classes/CreateCalendarDto.html":{}}}],["isslotfree",{"_index":857,"title":{},"body":{"injectables/MeetingService.html":{}}}],["isstring",{"_index":214,"title":{},"body":{"classes/Availability.html":{},"classes/CreateCalendarDto.html":{},"classes/GuestFreeSlotDto.html":{},"classes/NylasFreeBusy.html":{},"classes/TimeSlot.html":{},"classes/WorkSlot.html":{}}}],["isstring()@apiproperty({type",{"_index":488,"title":{},"body":{"classes/CreateCalendarDto.html":{}}}],["isstring()@isin(['lunes",{"_index":742,"title":{},"body":{"classes/GuestFreeSlotDto.html":{}}}],["isstring()@isin(['monday",{"_index":1217,"title":{},"body":{"classes/WorkSlot.html":{}}}],["jan",{"_index":279,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["join",{"_index":1324,"title":{},"body":{"index.html":{}}}],["join_approval_level",{"_index":517,"title":{},"body":{"classes/CreateMeetingResultDto.html":{}}}],["jueves",{"_index":745,"title":{},"body":{"classes/GuestFreeSlotDto.html":{}}}],["jul",{"_index":305,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["jul.gettimezoneoffset",{"_index":309,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["jwt",{"_index":803,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt_expires_in",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwt_secret",{"_index":153,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtauthguard",{"_index":372,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/CalendarController.html":{},"controllers/FreeSlotController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/MeetingController.html":{},"coverage.html":{}}}],["jwtfactory",{"_index":155,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtfromrequest",{"_index":808,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":146,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync(options",{"_index":164,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":141,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":1331,"title":{},"body":{"index.html":{}}}],["kebabcase",{"_index":436,"title":{},"body":{"injectables/CalendarService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["kebabcase(createcalendardto.name",{"_index":469,"title":{},"body":{"injectables/CalendarService.html":{}}}],["kebabcase(updatecalendardto.name",{"_index":480,"title":{},"body":{"injectables/CalendarService.html":{}}}],["keyname",{"_index":468,"title":{},"body":{"injectables/CalendarService.html":{}}}],["la",{"_index":947,"title":{},"body":{"injectables/NotificationService.html":{}}}],["language",{"_index":546,"title":{},"body":{"classes/CreateMeetingResultDto.html":{}}}],["las",{"_index":940,"title":{},"body":{"injectables/NotificationService.html":{}}}],["lastname",{"_index":1206,"title":{},"body":{"classes/UserRegistrationDto.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AvailabilityModule.html":{},"modules/CalendarModule.html":{},"modules/EncryptionModule.html":{},"modules/FreeSlotModule.html":{},"modules/MeetingModule.html":{},"modules/NotificationModule.html":{},"modules/PaymentModule.html":{},"modules/SessionModule.html":{},"overview.html":{}}}],["letter",{"_index":441,"title":{},"body":{"injectables/CalendarService.html":{},"miscellaneous/variables.html":{}}}],["license",{"_index":1337,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1314,"title":{},"body":{"index.html":{}}}],["line",{"_index":424,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/NotificationService.html":{}}}],["link",{"_index":946,"title":{},"body":{"injectables/NotificationService.html":{}}}],["literal",{"_index":522,"title":{},"body":{"classes/CreateMeetingResultDto.html":{},"classes/SessionCompletedDto.html":{}}}],["livemode",{"_index":1056,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["local",{"_index":285,"title":{},"body":{"injectables/AvailabilityService.html":{},"dependencies.html":{}}}],["locale",{"_index":1057,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["localoffset",{"_index":288,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["localtime",{"_index":282,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["localtimezonedate",{"_index":237,"title":{},"body":{"classes/Availability.html":{},"classes/WorkSlot.html":{}}}],["location",{"_index":464,"title":{},"body":{"injectables/CalendarService.html":{}}}],["logic",{"_index":782,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["login(@request",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{}}}],["long",{"_index":625,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["low",{"_index":455,"title":{},"body":{"injectables/CalendarService.html":{},"miscellaneous/variables.html":{}}}],["lower",{"_index":458,"title":{},"body":{"injectables/CalendarService.html":{}}}],["lunes",{"_index":752,"title":{},"body":{"classes/GuestFreeSlotDto.html":{}}}],["luxon",{"_index":1267,"title":{},"body":{"dependencies.html":{}}}],["línea",{"_index":466,"title":{},"body":{"injectables/CalendarService.html":{}}}],["main",{"_index":1143,"title":{},"body":{"modules/SessionModule.html":{}}}],["mainemailaccount",{"_index":712,"title":{},"body":{"injectables/FreeSlotService.html":{}}}],["map",{"_index":850,"title":{},"body":{"injectables/MeetingService.html":{}}}],["map((resp",{"_index":885,"title":{},"body":{"injectables/MeetingService.html":{}}}],["martes",{"_index":743,"title":{},"body":{"classes/GuestFreeSlotDto.html":{}}}],["matching",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Availability.html":{},"modules/AvailabilityModule.html":{},"injectables/AvailabilityService.html":{},"classes/BookRequestResponse.html":{},"classes/BusySlotDto.html":{},"classes/Calendar.html":{},"controllers/CalendarController.html":{},"modules/CalendarModule.html":{},"injectables/CalendarService.html":{},"classes/CreateAvailabilityDto.html":{},"classes/CreateCalendarDto.html":{},"classes/CreateMeetingRequestDto.html":{},"classes/CreateMeetingResultDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateSessionRequestDto.html":{},"classes/DateTimeDto.html":{},"modules/DateTimeModule.html":{},"modules/EncryptionModule.html":{},"injectables/EncryptionService.html":{},"controllers/FreeSlotController.html":{},"classes/FreeSlotDto.html":{},"modules/FreeSlotModule.html":{},"injectables/FreeSlotService.html":{},"classes/GuestFreeSlotDto.html":{},"classes/HoomanWorkSlotDto.html":{},"interfaces/ISession.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Meeting.html":{},"controllers/MeetingController.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"classes/NylasFreeBusy.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"classes/RegisterResponseDto.html":{},"classes/SendNotificationRequestDto.html":{},"classes/SessionCompletedDto.html":{},"modules/SessionModule.html":{},"injectables/SessionService.html":{},"classes/TimeSlot.html":{},"classes/UpdateAvailabilityDto.html":{},"classes/UpdateCalendarDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateSessionRequestDto.html":{},"classes/UserCredentialsDto.html":{},"classes/UserRegistrationDto.html":{},"classes/WorkSlot.html":{},"classes/WorkSlotDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.floor(date.now",{"_index":708,"title":{},"body":{"injectables/FreeSlotService.html":{}}}],["math.floor(enddatetime.gettime",{"_index":327,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["math.floor(startdatetime.gettime",{"_index":326,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["math.max(jan.gettimezoneoffset",{"_index":308,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["maxdate",{"_index":1214,"title":{},"body":{"classes/UserRegistrationDto.html":{}}}],["maxdate(require('moment')().subtract(13",{"_index":1215,"title":{},"body":{"classes/UserRegistrationDto.html":{}}}],["meeting",{"_index":347,"title":{"interfaces/Meeting.html":{}},"body":{"classes/BookRequestResponse.html":{},"classes/CreateMeetingRequestDto.html":{},"classes/CreateMeetingResultDto.html":{},"interfaces/Meeting.html":{},"controllers/MeetingController.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"injectables/NotificationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["meeting._links.guest_url.href",{"_index":951,"title":{},"body":{"injectables/NotificationService.html":{}}}],["meeting.save",{"_index":865,"title":{},"body":{"injectables/MeetingService.html":{}}}],["meeting.service",{"_index":824,"title":{},"body":{"controllers/MeetingController.html":{},"modules/MeetingModule.html":{}}}],["meeting/entities/meeting.schema",{"_index":909,"title":{},"body":{"injectables/NotificationService.html":{}}}],["meeting/meeting.module",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["meeting_code",{"_index":518,"title":{},"body":{"classes/CreateMeetingResultDto.html":{}}}],["meetingcontroller",{"_index":816,"title":{"controllers/MeetingController.html":{}},"body":{"controllers/MeetingController.html":{},"coverage.html":{}}}],["meetingmodel",{"_index":843,"title":{},"body":{"injectables/MeetingService.html":{}}}],["meetingmodule",{"_index":18,"title":{"modules/MeetingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MeetingModule.html":{},"modules/NotificationModule.html":{},"modules.html":{},"overview.html":{}}}],["meetings/rooms",{"_index":876,"title":{},"body":{"injectables/MeetingService.html":{}}}],["meetingschema",{"_index":350,"title":{},"body":{"classes/BookRequestResponse.html":{},"interfaces/Meeting.html":{},"modules/MeetingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["meetingservice",{"_index":823,"title":{"injectables/MeetingService.html":{}},"body":{"controllers/MeetingController.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"coverage.html":{},"overview.html":{}}}],["meetingstarttime",{"_index":740,"title":{},"body":{"classes/GuestFreeSlotDto.html":{}}}],["metadata",{"_index":467,"title":{},"body":{"injectables/CalendarService.html":{},"classes/CreateMeetingResultDto.html":{},"classes/SessionCompletedDto.html":{},"dependencies.html":{}}}],["method",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CalendarController.html":{},"controllers/MeetingController.html":{}}}],["method_not_allowed",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{}}}],["methods",{"_index":72,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AvailabilityService.html":{},"controllers/CalendarController.html":{},"injectables/CalendarService.html":{},"classes/DateTimeDto.html":{},"injectables/EncryptionService.html":{},"controllers/FreeSlotController.html":{},"injectables/FreeSlotService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"injectables/NotificationService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{}}}],["microphone_state",{"_index":545,"title":{},"body":{"classes/CreateMeetingResultDto.html":{}}}],["milliseconds",{"_index":562,"title":{},"body":{"classes/CreateSessionRequestDto.html":{},"injectables/SessionService.html":{}}}],["min",{"_index":493,"title":{},"body":{"classes/CreateCalendarDto.html":{}}}],["miscellaneous",{"_index":1278,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1313,"title":{},"body":{"index.html":{}}}],["miércoles",{"_index":744,"title":{},"body":{"classes/GuestFreeSlotDto.html":{}}}],["mode",{"_index":1058,"title":{},"body":{"classes/SessionCompletedDto.html":{},"index.html":{}}}],["model",{"_index":844,"title":{},"body":{"injectables/MeetingService.html":{},"injectables/SessionService.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AvailabilityModule.html":{},"modules/CalendarModule.html":{},"modules/DateTimeModule.html":{},"modules/EncryptionModule.html":{},"modules/FreeSlotModule.html":{},"modules/MeetingModule.html":{},"modules/NotificationModule.html":{},"modules/PaymentModule.html":{},"modules/SessionModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AvailabilityModule.html":{},"modules/CalendarModule.html":{},"modules/DateTimeModule.html":{},"modules/EncryptionModule.html":{},"modules/FreeSlotModule.html":{},"modules/MeetingModule.html":{},"modules/NotificationModule.html":{},"modules/PaymentModule.html":{},"modules/SessionModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AvailabilityModule.html":{},"modules/CalendarModule.html":{},"modules/DateTimeModule.html":{},"modules/EncryptionModule.html":{},"modules/FreeSlotModule.html":{},"modules/MeetingModule.html":{},"modules/NotificationModule.html":{},"modules/PaymentModule.html":{},"modules/SessionModule.html":{},"modules.html":{},"overview.html":{}}}],["monday",{"_index":229,"title":{},"body":{"classes/Availability.html":{},"injectables/AvailabilityService.html":{},"classes/WorkSlot.html":{},"miscellaneous/variables.html":{}}}],["mongo_db_connection_url",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mongoose",{"_index":762,"title":{},"body":{"interfaces/ISession.html":{},"interfaces/Meeting.html":{},"injectables/MeetingService.html":{},"modules/SessionModule.html":{},"injectables/SessionService.html":{},"dependencies.html":{}}}],["mongoose.document",{"_index":764,"title":{},"body":{"interfaces/ISession.html":{},"interfaces/Meeting.html":{}}}],["mongoose.schema",{"_index":815,"title":{},"body":{"interfaces/Meeting.html":{},"miscellaneous/variables.html":{}}}],["mongoosemodule",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/MeetingModule.html":{},"modules/SessionModule.html":{}}}],["mongoosemodule.forfeature",{"_index":837,"title":{},"body":{"modules/MeetingModule.html":{},"modules/SessionModule.html":{}}}],["mongoosemodule.forroot(mongo_db_connection_url",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["monterreytime",{"_index":297,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["month",{"_index":340,"title":{},"body":{"injectables/AvailabilityService.html":{},"classes/DateTimeDto.html":{}}}],["more",{"_index":1327,"title":{},"body":{"index.html":{}}}],["msec",{"_index":278,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["mucho",{"_index":923,"title":{},"body":{"injectables/NotificationService.html":{}}}],["myśliwiec",{"_index":1332,"title":{},"body":{"index.html":{}}}],["más",{"_index":943,"title":{},"body":{"injectables/NotificationService.html":{}}}],["n",{"_index":920,"title":{},"body":{"injectables/NotificationService.html":{}}}],["name",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AvailabilityService.html":{},"injectables/CalendarService.html":{},"classes/CreateCalendarDto.html":{},"classes/DateTimeDto.html":{},"injectables/EncryptionService.html":{},"controllers/FreeSlotController.html":{},"injectables/FreeSlotService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/MeetingController.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"injectables/NotificationService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"classes/SessionCompletedDto.html":{},"modules/SessionModule.html":{},"injectables/SessionService.html":{},"miscellaneous/functions.html":{}}}],["needed",{"_index":581,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["nest",{"_index":1293,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1336,"title":{},"body":{"index.html":{}}}],["nestjs/axios",{"_index":836,"title":{},"body":{"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/AvailabilityModule.html":{},"injectables/AvailabilityService.html":{},"controllers/CalendarController.html":{},"modules/CalendarModule.html":{},"injectables/CalendarService.html":{},"modules/DateTimeModule.html":{},"modules/EncryptionModule.html":{},"injectables/EncryptionService.html":{},"controllers/FreeSlotController.html":{},"modules/FreeSlotModule.html":{},"injectables/FreeSlotService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/MeetingController.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"modules/SessionModule.html":{},"injectables/SessionService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EncryptionModule.html":{},"injectables/EncryptionService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1252,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":147,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1193,"title":{},"body":{"classes/UpdatePaymentDto.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"modules/SessionModule.html":{},"injectables/SessionService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":145,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1255,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"classes/BookRequestResponse.html":{},"controllers/CalendarController.html":{},"classes/CreateCalendarDto.html":{},"classes/CreateMeetingRequestDto.html":{},"controllers/FreeSlotController.html":{},"controllers/MeetingController.html":{},"controllers/PaymentController.html":{},"classes/RegisterResponseDto.html":{},"classes/UpdateAvailabilityDto.html":{},"classes/UpdateCalendarDto.html":{},"classes/UpdateSessionRequestDto.html":{},"classes/UserCredentialsDto.html":{},"classes/UserRegistrationDto.html":{},"dependencies.html":{}}}],["new",{"_index":267,"title":{},"body":{"injectables/AvailabilityService.html":{},"injectables/CalendarService.html":{},"classes/DateTimeDto.html":{},"controllers/FreeSlotController.html":{},"injectables/FreeSlotService.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/Meeting.html":{},"injectables/MeetingService.html":{},"injectables/NotificationService.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newsession",{"_index":1174,"title":{},"body":{"injectables/SessionService.html":{}}}],["newsession.save",{"_index":1176,"title":{},"body":{"injectables/SessionService.html":{}}}],["next",{"_index":423,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/NotificationService.html":{}}}],["node.js",{"_index":1285,"title":{},"body":{"index.html":{}}}],["normalize('nfd",{"_index":438,"title":{},"body":{"injectables/CalendarService.html":{},"miscellaneous/variables.html":{}}}],["nos",{"_index":921,"title":{},"body":{"injectables/NotificationService.html":{}}}],["notallowedlogin(@request",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["notallowedregister(@request",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{}}}],["notification",{"_index":908,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/PaymentService.html":{},"classes/SendNotificationRequestDto.html":{},"coverage.html":{}}}],["notification.service",{"_index":896,"title":{},"body":{"modules/NotificationModule.html":{}}}],["notification/notification.module",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["notificationmodule",{"_index":19,"title":{"modules/NotificationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NotificationModule.html":{},"modules/PaymentModule.html":{},"modules.html":{},"overview.html":{}}}],["notificationrequest",{"_index":906,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/PaymentService.html":{}}}],["notificationrequest.email",{"_index":953,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/PaymentService.html":{}}}],["notificationrequest.guestname",{"_index":916,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/PaymentService.html":{}}}],["notificationservice",{"_index":894,"title":{"injectables/NotificationService.html":{}},"body":{"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"injectables/PaymentService.html":{},"coverage.html":{},"overview.html":{}}}],["npm",{"_index":1297,"title":{},"body":{"index.html":{}}}],["null",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{},"classes/Availability.html":{},"injectables/JwtStrategy.html":{},"classes/SessionCompletedDto.html":{},"classes/WorkSlot.html":{}}}],["number",{"_index":239,"title":{},"body":{"classes/Availability.html":{},"classes/BusySlotDto.html":{},"injectables/CalendarService.html":{},"classes/CreateMeetingRequestDto.html":{},"classes/CreateSessionRequestDto.html":{},"classes/DateTimeDto.html":{},"classes/FreeSlotDto.html":{},"classes/GuestFreeSlotDto.html":{},"classes/HoomanWorkSlotDto.html":{},"interfaces/ISession.html":{},"interfaces/Meeting.html":{},"classes/NylasFreeBusy.html":{},"classes/SessionCompletedDto.html":{},"injectables/SessionService.html":{},"classes/TimeSlot.html":{},"classes/WorkSlot.html":{},"classes/WorkSlotDto.html":{},"miscellaneous/variables.html":{}}}],["nylas",{"_index":390,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/NotificationService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["nylas.calendars.delete(id",{"_index":481,"title":{},"body":{"injectables/CalendarService.html":{}}}],["nylas.calendars.find(id",{"_index":473,"title":{},"body":{"injectables/CalendarService.html":{}}}],["nylas.calendars.find(id).then((calendar",{"_index":474,"title":{},"body":{"injectables/CalendarService.html":{}}}],["nylas.calendars.list",{"_index":472,"title":{},"body":{"injectables/CalendarService.html":{}}}],["nylas.config",{"_index":430,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/NotificationService.html":{}}}],["nylas.with(process.env.nylas_main_account_access_token",{"_index":435,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/NotificationService.html":{},"miscellaneous/variables.html":{}}}],["nylas/lib/models/calendar",{"_index":414,"title":{},"body":{"injectables/CalendarService.html":{}}}],["nylascalendar",{"_index":413,"title":{},"body":{"injectables/CalendarService.html":{}}}],["nylascalendar(nylas",{"_index":461,"title":{},"body":{"injectables/CalendarService.html":{}}}],["nylasfreebusy",{"_index":415,"title":{"classes/NylasFreeBusy.html":{}},"body":{"injectables/CalendarService.html":{},"injectables/FreeSlotService.html":{},"classes/NylasFreeBusy.html":{},"classes/TimeSlot.html":{},"coverage.html":{}}}],["object",{"_index":579,"title":{},"body":{"classes/DateTimeDto.html":{},"classes/NylasFreeBusy.html":{},"classes/SessionCompletedDto.html":{},"classes/TimeSlot.html":{},"miscellaneous/variables.html":{}}}],["object.keys(datetimedto.timezoneoffsetmap",{"_index":626,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["obtain",{"_index":284,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["offset",{"_index":287,"title":{},"body":{"injectables/AvailabilityService.html":{},"classes/DateTimeDto.html":{}}}],["open",{"_index":1315,"title":{},"body":{"index.html":{}}}],["optional",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AvailabilityService.html":{},"injectables/CalendarService.html":{},"classes/CreateSessionRequestDto.html":{},"classes/DateTimeDto.html":{},"injectables/EncryptionService.html":{},"controllers/FreeSlotController.html":{},"injectables/FreeSlotService.html":{},"interfaces/ISession.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"injectables/NotificationService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":161,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ost",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{}}}],["out",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AvailabilityModule.html":{},"modules/CalendarModule.html":{},"modules/EncryptionModule.html":{},"modules/FreeSlotModule.html":{},"modules/MeetingModule.html":{},"modules/NotificationModule.html":{},"modules/PaymentModule.html":{},"modules/SessionModule.html":{},"overview.html":{}}}],["overlaps",{"_index":724,"title":{},"body":{"injectables/FreeSlotService.html":{}}}],["overview",{"_index":1343,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["package",{"_index":1249,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["para",{"_index":935,"title":{},"body":{"injectables/NotificationService.html":{}}}],["parameter",{"_index":676,"title":{},"body":{"controllers/FreeSlotController.html":{}}}],["parameters",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AvailabilityService.html":{},"injectables/CalendarService.html":{},"classes/DateTimeDto.html":{},"injectables/EncryptionService.html":{},"controllers/FreeSlotController.html":{},"injectables/FreeSlotService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"injectables/NotificationService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"miscellaneous/functions.html":{}}}],["parte",{"_index":931,"title":{},"body":{"injectables/NotificationService.html":{}}}],["partialtype",{"_index":1187,"title":{},"body":{"classes/UpdateAvailabilityDto.html":{},"classes/UpdateCalendarDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateSessionRequestDto.html":{}}}],["partialtype(createavailabilitydto",{"_index":1189,"title":{},"body":{"classes/UpdateAvailabilityDto.html":{}}}],["partialtype(createcalendardto",{"_index":1191,"title":{},"body":{"classes/UpdateCalendarDto.html":{}}}],["partialtype(createpaymentdto",{"_index":1195,"title":{},"body":{"classes/UpdatePaymentDto.html":{}}}],["passport",{"_index":802,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":144,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":804,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":806,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserCredentialsDto.html":{},"classes/UserRegistrationDto.html":{}}}],["path",{"_index":380,"title":{},"body":{"controllers/CalendarController.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{}}}],["path.join(base_url",{"_index":875,"title":{},"body":{"injectables/MeetingService.html":{}}}],["payload",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payment",{"_index":963,"title":{"classes/Payment.html":{}},"body":{"classes/Payment.html":{},"controllers/PaymentController.html":{},"coverage.html":{}}}],["payment.controller",{"_index":986,"title":{},"body":{"modules/PaymentModule.html":{}}}],["payment.dto",{"_index":992,"title":{},"body":{"injectables/PaymentService.html":{},"classes/UpdatePaymentDto.html":{}}}],["payment.dto.ts",{"_index":554,"title":{},"body":{"classes/CreatePaymentDto.html":{},"classes/UpdatePaymentDto.html":{},"coverage.html":{}}}],["payment.dto.ts:2",{"_index":555,"title":{},"body":{"classes/CreatePaymentDto.html":{}}}],["payment.service",{"_index":973,"title":{},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{}}}],["payment/payment.module",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["payment_intent",{"_index":1059,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["payment_link",{"_index":1060,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["payment_method_collection",{"_index":1061,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["payment_method_options",{"_index":1062,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["payment_method_types",{"_index":1063,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["payment_status",{"_index":1064,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["paymentcontroller",{"_index":965,"title":{"controllers/PaymentController.html":{}},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"coverage.html":{}}}],["paymentmodule",{"_index":20,"title":{"modules/PaymentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PaymentModule.html":{},"modules.html":{},"overview.html":{}}}],["paymentservice",{"_index":972,"title":{"injectables/PaymentService.html":{}},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"coverage.html":{},"overview.html":{}}}],["paymentsuccess",{"_index":967,"title":{},"body":{"controllers/PaymentController.html":{},"injectables/PaymentService.html":{}}}],["paymentsuccess(request",{"_index":968,"title":{},"body":{"controllers/PaymentController.html":{},"injectables/PaymentService.html":{}}}],["phone",{"_index":1130,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["phone_number_collection",{"_index":1065,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["pipe",{"_index":882,"title":{},"body":{"injectables/MeetingService.html":{}}}],["plain",{"_index":642,"title":{},"body":{"injectables/EncryptionService.html":{}}}],["plaintoclass",{"_index":702,"title":{},"body":{"injectables/FreeSlotService.html":{},"injectables/MeetingService.html":{},"injectables/PaymentService.html":{}}}],["plaintoclass(busyslotdto",{"_index":719,"title":{},"body":{"injectables/FreeSlotService.html":{}}}],["plaintoclass(createmeetingresultdto",{"_index":886,"title":{},"body":{"injectables/MeetingService.html":{}}}],["please",{"_index":1325,"title":{},"body":{"index.html":{}}}],["pm",{"_index":942,"title":{},"body":{"injectables/NotificationService.html":{}}}],["por",{"_index":918,"title":{},"body":{"injectables/NotificationService.html":{}}}],["post",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"controllers/PaymentController.html":{}}}],["post('/success",{"_index":970,"title":{},"body":{"controllers/PaymentController.html":{}}}],["post('book",{"_index":829,"title":{},"body":{"controllers/MeetingController.html":{}}}],["post('login",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('session",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CalendarController.html":{},"controllers/FreeSlotController.html":{},"controllers/MeetingController.html":{},"controllers/PaymentController.html":{}}}],["prependzero",{"_index":319,"title":{},"body":{"injectables/AvailabilityService.html":{},"classes/DateTimeDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["prependzero(targetdate.getdate",{"_index":339,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["prependzero(targetdate.getmonth",{"_index":341,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["prependzero(time",{"_index":264,"title":{},"body":{"injectables/AvailabilityService.html":{},"classes/DateTimeDto.html":{},"miscellaneous/functions.html":{}}}],["previously",{"_index":445,"title":{},"body":{"injectables/CalendarService.html":{},"miscellaneous/variables.html":{}}}],["private",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CalendarService.html":{},"controllers/FreeSlotController.html":{},"injectables/FreeSlotService.html":{},"injectables/JwtStrategy.html":{},"injectables/MeetingService.html":{},"injectables/SessionService.html":{}}}],["process.env.mongo_db_protocol}://${process.env.mongo_db_user}:${process.env.mongo_db_password}@${process.env.mongo_db_host}/?retrywrites=true&w=majority",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["process.env.nylas_client_id",{"_index":432,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/NotificationService.html":{}}}],["process.env.nylas_client_secret",{"_index":434,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/NotificationService.html":{}}}],["process.env.nylas_main_account_email",{"_index":713,"title":{},"body":{"injectables/FreeSlotService.html":{}}}],["process.env.stripe_payment_success_webhook_secret_key",{"_index":980,"title":{},"body":{"controllers/PaymentController.html":{}}}],["process.env.vonage_api_base_url",{"_index":869,"title":{},"body":{"injectables/MeetingService.html":{}}}],["process.env.vonage_jwt_365_days",{"_index":873,"title":{},"body":{"injectables/MeetingService.html":{}}}],["production",{"_index":1305,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":1284,"title":{},"body":{"index.html":{}}}],["project",{"_index":1316,"title":{},"body":{"index.html":{}}}],["promise",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CalendarService.html":{},"injectables/EncryptionService.html":{},"injectables/JwtStrategy.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"injectables/SessionService.html":{}}}],["promotions",{"_index":1125,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["properties",{"_index":206,"title":{"properties.html":{}},"body":{"classes/Availability.html":{},"classes/BookRequestResponse.html":{},"classes/BusySlotDto.html":{},"injectables/CalendarService.html":{},"classes/CreateCalendarDto.html":{},"classes/CreateMeetingRequestDto.html":{},"classes/CreateMeetingResultDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateSessionRequestDto.html":{},"classes/DateTimeDto.html":{},"classes/FreeSlotDto.html":{},"classes/GuestFreeSlotDto.html":{},"classes/HoomanWorkSlotDto.html":{},"interfaces/ISession.html":{},"interfaces/Meeting.html":{},"classes/NylasFreeBusy.html":{},"classes/RegisterResponseDto.html":{},"classes/SendNotificationRequestDto.html":{},"classes/SessionCompletedDto.html":{},"classes/TimeSlot.html":{},"classes/UserCredentialsDto.html":{},"classes/UserRegistrationDto.html":{},"classes/WorkSlot.html":{},"classes/WorkSlotDto.html":{},"properties.html":{}}}],["property",{"_index":1369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":1153,"title":{},"body":{"modules/SessionModule.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AvailabilityModule.html":{},"modules/CalendarModule.html":{},"modules/DateTimeModule.html":{},"modules/EncryptionModule.html":{},"modules/FreeSlotModule.html":{},"modules/MeetingModule.html":{},"modules/NotificationModule.html":{},"modules/PaymentModule.html":{},"modules/SessionModule.html":{},"overview.html":{}}}],["query",{"_index":663,"title":{},"body":{"controllers/FreeSlotController.html":{}}}],["query('guesttimezone",{"_index":677,"title":{},"body":{"controllers/FreeSlotController.html":{}}}],["rawbodyrequest",{"_index":969,"title":{},"body":{"controllers/PaymentController.html":{}}}],["read",{"_index":1326,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CalendarController.html":{},"injectables/EncryptionService.html":{},"controllers/FreeSlotController.html":{},"injectables/FreeSlotService.html":{},"injectables/JwtStrategy.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"injectables/NotificationService.html":{},"controllers/PaymentController.html":{},"injectables/SessionService.html":{}}}],["record).password",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["record_only_owner",{"_index":541,"title":{},"body":{"classes/CreateMeetingResultDto.html":{}}}],["recording_options",{"_index":519,"title":{},"body":{"classes/CreateMeetingResultDto.html":{}}}],["recovered_from",{"_index":1066,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["reflect",{"_index":1274,"title":{},"body":{"dependencies.html":{}}}],["registerresponsedto",{"_index":1024,"title":{"classes/RegisterResponseDto.html":{}},"body":{"classes/RegisterResponseDto.html":{},"coverage.html":{}}}],["registration.dto.ts",{"_index":1203,"title":{},"body":{"classes/UserRegistrationDto.html":{},"coverage.html":{}}}],["registration.dto.ts:11",{"_index":1209,"title":{},"body":{"classes/UserRegistrationDto.html":{}}}],["registration.dto.ts:17",{"_index":1212,"title":{},"body":{"classes/UserRegistrationDto.html":{}}}],["registration.dto.ts:24",{"_index":1208,"title":{},"body":{"classes/UserRegistrationDto.html":{}}}],["registration.dto.ts:29",{"_index":1210,"title":{},"body":{"classes/UserRegistrationDto.html":{}}}],["registration.dto.ts:34",{"_index":1211,"title":{},"body":{"classes/UserRegistrationDto.html":{}}}],["remove",{"_index":393,"title":{},"body":{"injectables/CalendarService.html":{},"miscellaneous/variables.html":{}}}],["remove(id",{"_index":405,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/SessionService.html":{}}}],["removes",{"_index":1180,"title":{},"body":{"injectables/SessionService.html":{}}}],["replace",{"_index":453,"title":{},"body":{"injectables/CalendarService.html":{},"miscellaneous/variables.html":{}}}],["replace(/([a",{"_index":447,"title":{},"body":{"injectables/CalendarService.html":{},"miscellaneous/variables.html":{}}}],["replace(/[\\s_]+/g",{"_index":452,"title":{},"body":{"injectables/CalendarService.html":{},"miscellaneous/variables.html":{}}}],["replace(/[\\u0300",{"_index":443,"title":{},"body":{"injectables/CalendarService.html":{},"miscellaneous/variables.html":{}}}],["repository",{"_index":1295,"title":{},"body":{"index.html":{}}}],["req",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PaymentController.html":{}}}],["request",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"miscellaneous/variables.html":{}}}],["request.dto",{"_index":671,"title":{},"body":{"controllers/FreeSlotController.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"injectables/NotificationService.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"classes/UpdateSessionRequestDto.html":{}}}],["request.dto.ts",{"_index":497,"title":{},"body":{"classes/CreateMeetingRequestDto.html":{},"classes/CreateSessionRequestDto.html":{},"classes/SendNotificationRequestDto.html":{},"classes/UpdateSessionRequestDto.html":{},"coverage.html":{}}}],["request.dto.ts:15",{"_index":506,"title":{},"body":{"classes/CreateMeetingRequestDto.html":{}}}],["request.dto.ts:2",{"_index":560,"title":{},"body":{"classes/CreateSessionRequestDto.html":{},"classes/SendNotificationRequestDto.html":{}}}],["request.dto.ts:3",{"_index":559,"title":{},"body":{"classes/CreateSessionRequestDto.html":{},"classes/SendNotificationRequestDto.html":{}}}],["request.dto.ts:4",{"_index":561,"title":{},"body":{"classes/CreateSessionRequestDto.html":{}}}],["request.dto.ts:8",{"_index":501,"title":{},"body":{"classes/CreateMeetingRequestDto.html":{}}}],["request.headers['stripe",{"_index":977,"title":{},"body":{"controllers/PaymentController.html":{}}}],["request.method",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.rawbody",{"_index":1008,"title":{},"body":{"injectables/PaymentService.html":{}}}],["request.response",{"_index":826,"title":{},"body":{"controllers/MeetingController.html":{},"injectables/MeetingService.html":{}}}],["request.response.ts",{"_index":346,"title":{},"body":{"classes/BookRequestResponse.html":{},"coverage.html":{}}}],["request.response.ts:6",{"_index":351,"title":{},"body":{"classes/BookRequestResponse.html":{}}}],["request.user",{"_index":1367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestbooking",{"_index":818,"title":{},"body":{"controllers/MeetingController.html":{},"injectables/MeetingService.html":{}}}],["requestbooking(bookrequest",{"_index":819,"title":{},"body":{"controllers/MeetingController.html":{},"injectables/MeetingService.html":{}}}],["require('nylas",{"_index":429,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/NotificationService.html":{},"miscellaneous/variables.html":{}}}],["require('nylas/lib/models/draft",{"_index":911,"title":{},"body":{"injectables/NotificationService.html":{},"miscellaneous/variables.html":{}}}],["required",{"_index":656,"title":{},"body":{"controllers/FreeSlotController.html":{},"interfaces/Meeting.html":{},"miscellaneous/variables.html":{}}}],["requires",{"_index":428,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/NotificationService.html":{}}}],["res",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PaymentController.html":{}}}],["reset",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AvailabilityModule.html":{},"modules/CalendarModule.html":{},"modules/EncryptionModule.html":{},"modules/FreeSlotModule.html":{},"modules/MeetingModule.html":{},"modules/NotificationModule.html":{},"modules/PaymentModule.html":{},"modules/SessionModule.html":{},"overview.html":{}}}],["resp.data",{"_index":887,"title":{},"body":{"injectables/MeetingService.html":{}}}],["response",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{}}}],["response.dto.ts",{"_index":1026,"title":{},"body":{"classes/RegisterResponseDto.html":{},"coverage.html":{}}}],["response.dto.ts:9",{"_index":1029,"title":{},"body":{"classes/RegisterResponseDto.html":{}}}],["response.sendstatus(200",{"_index":1023,"title":{},"body":{"injectables/PaymentService.html":{}}}],["response.sendstatus(400).send(`webhook",{"_index":1010,"title":{},"body":{"injectables/PaymentService.html":{}}}],["response.setheader('allow",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.status(405).send({statuscode",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{}}}],["result.dto",{"_index":848,"title":{},"body":{"injectables/MeetingService.html":{}}}],["result.dto.ts",{"_index":508,"title":{},"body":{"classes/CreateMeetingResultDto.html":{},"coverage.html":{}}}],["result.dto.ts:11",{"_index":534,"title":{},"body":{"classes/CreateMeetingResultDto.html":{}}}],["result.dto.ts:12",{"_index":523,"title":{},"body":{"classes/CreateMeetingResultDto.html":{}}}],["result.dto.ts:2",{"_index":530,"title":{},"body":{"classes/CreateMeetingResultDto.html":{}}}],["result.dto.ts:20",{"_index":525,"title":{},"body":{"classes/CreateMeetingResultDto.html":{}}}],["result.dto.ts:21",{"_index":532,"title":{},"body":{"classes/CreateMeetingResultDto.html":{}}}],["result.dto.ts:22",{"_index":528,"title":{},"body":{"classes/CreateMeetingResultDto.html":{}}}],["result.dto.ts:23",{"_index":537,"title":{},"body":{"classes/CreateMeetingResultDto.html":{}}}],["result.dto.ts:24",{"_index":531,"title":{},"body":{"classes/CreateMeetingResultDto.html":{}}}],["result.dto.ts:27",{"_index":533,"title":{},"body":{"classes/CreateMeetingResultDto.html":{}}}],["result.dto.ts:28",{"_index":539,"title":{},"body":{"classes/CreateMeetingResultDto.html":{}}}],["result.dto.ts:3",{"_index":526,"title":{},"body":{"classes/CreateMeetingResultDto.html":{}}}],["result.dto.ts:31",{"_index":524,"title":{},"body":{"classes/CreateMeetingResultDto.html":{}}}],["result.dto.ts:4",{"_index":535,"title":{},"body":{"classes/CreateMeetingResultDto.html":{}}}],["result.dto.ts:5",{"_index":538,"title":{},"body":{"classes/CreateMeetingResultDto.html":{}}}],["result.dto.ts:6",{"_index":529,"title":{},"body":{"classes/CreateMeetingResultDto.html":{}}}],["result.dto.ts:7",{"_index":536,"title":{},"body":{"classes/CreateMeetingResultDto.html":{}}}],["results",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Availability.html":{},"modules/AvailabilityModule.html":{},"injectables/AvailabilityService.html":{},"classes/BookRequestResponse.html":{},"classes/BusySlotDto.html":{},"classes/Calendar.html":{},"controllers/CalendarController.html":{},"modules/CalendarModule.html":{},"injectables/CalendarService.html":{},"classes/CreateAvailabilityDto.html":{},"classes/CreateCalendarDto.html":{},"classes/CreateMeetingRequestDto.html":{},"classes/CreateMeetingResultDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateSessionRequestDto.html":{},"classes/DateTimeDto.html":{},"modules/DateTimeModule.html":{},"modules/EncryptionModule.html":{},"injectables/EncryptionService.html":{},"controllers/FreeSlotController.html":{},"classes/FreeSlotDto.html":{},"modules/FreeSlotModule.html":{},"injectables/FreeSlotService.html":{},"classes/GuestFreeSlotDto.html":{},"classes/HoomanWorkSlotDto.html":{},"interfaces/ISession.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Meeting.html":{},"controllers/MeetingController.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"classes/NylasFreeBusy.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"classes/RegisterResponseDto.html":{},"classes/SendNotificationRequestDto.html":{},"classes/SessionCompletedDto.html":{},"modules/SessionModule.html":{},"injectables/SessionService.html":{},"classes/TimeSlot.html":{},"classes/UpdateAvailabilityDto.html":{},"classes/UpdateCalendarDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateSessionRequestDto.html":{},"classes/UserCredentialsDto.html":{},"classes/UserRegistrationDto.html":{},"classes/WorkSlot.html":{},"classes/WorkSlotDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":78,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AvailabilityService.html":{},"controllers/CalendarController.html":{},"injectables/CalendarService.html":{},"classes/DateTimeDto.html":{},"injectables/EncryptionService.html":{},"controllers/FreeSlotController.html":{},"injectables/FreeSlotService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"injectables/NotificationService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{},"miscellaneous/variables.html":{}}}],["returning",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["returns",{"_index":76,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AvailabilityService.html":{},"controllers/CalendarController.html":{},"injectables/CalendarService.html":{},"classes/DateTimeDto.html":{},"injectables/EncryptionService.html":{},"controllers/FreeSlotController.html":{},"injectables/FreeSlotService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"injectables/NotificationService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"injectables/SessionService.html":{}}}],["reunión",{"_index":948,"title":{},"body":{"injectables/NotificationService.html":{}}}],["run",{"_index":1301,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":852,"title":{},"body":{"injectables/MeetingService.html":{},"dependencies.html":{}}}],["s",{"_index":437,"title":{},"body":{"injectables/CalendarService.html":{},"miscellaneous/variables.html":{}}}],["saludarte",{"_index":925,"title":{},"body":{"injectables/NotificationService.html":{}}}],["saturday",{"_index":234,"title":{},"body":{"classes/Availability.html":{},"injectables/AvailabilityService.html":{},"classes/WorkSlot.html":{},"miscellaneous/variables.html":{}}}],["scalable",{"_index":1289,"title":{},"body":{"index.html":{}}}],["schema",{"_index":838,"title":{},"body":{"modules/MeetingModule.html":{},"modules/SessionModule.html":{}}}],["seconds",{"_index":711,"title":{},"body":{"injectables/FreeSlotService.html":{}}}],["secret",{"_index":156,"title":{},"body":{"modules/AuthModule.html":{},"classes/CreatePaymentDto.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":811,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["sendnotification",{"_index":900,"title":{},"body":{"injectables/NotificationService.html":{}}}],["sendnotification(notificationrequest",{"_index":903,"title":{},"body":{"injectables/NotificationService.html":{}}}],["sendnotificationrequestdto",{"_index":904,"title":{"classes/SendNotificationRequestDto.html":{}},"body":{"injectables/NotificationService.html":{},"injectables/PaymentService.html":{},"classes/SendNotificationRequestDto.html":{},"coverage.html":{}}}],["server",{"_index":1290,"title":{},"body":{"index.html":{}}}],["sesión",{"_index":933,"title":{},"body":{"injectables/NotificationService.html":{}}}],["session",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateSessionRequestDto.html":{},"controllers/FreeSlotController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/SessionModule.html":{},"injectables/SessionService.html":{},"classes/UpdateSessionRequestDto.html":{},"coverage.html":{}}}],["session.duration",{"_index":793,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["session.id",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["session.service",{"_index":1147,"title":{},"body":{"modules/SessionModule.html":{}}}],["session.timestamp",{"_index":792,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["session/decorators/session",{"_index":667,"title":{},"body":{"controllers/FreeSlotController.html":{}}}],["session/dto/update",{"_index":670,"title":{},"body":{"controllers/FreeSlotController.html":{}}}],["session/entities/session.schema",{"_index":805,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["session/session.module",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FreeSlotModule.html":{}}}],["session/session.service",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"controllers/FreeSlotController.html":{},"injectables/JwtStrategy.html":{}}}],["sessioncompleted",{"_index":1015,"title":{},"body":{"injectables/PaymentService.html":{}}}],["sessioncompleted.customer_details.email",{"_index":1018,"title":{},"body":{"injectables/PaymentService.html":{}}}],["sessioncompleted.customer_details.name",{"_index":1019,"title":{},"body":{"injectables/PaymentService.html":{}}}],["sessioncompleteddto",{"_index":997,"title":{"classes/SessionCompletedDto.html":{}},"body":{"injectables/PaymentService.html":{},"classes/SessionCompletedDto.html":{},"coverage.html":{}}}],["sessioninfo",{"_index":653,"title":{},"body":{"controllers/FreeSlotController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sessionmodel",{"_index":1162,"title":{},"body":{"injectables/SessionService.html":{}}}],["sessionmodule",{"_index":21,"title":{"modules/SessionModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FreeSlotModule.html":{},"modules/SessionModule.html":{},"modules.html":{},"overview.html":{}}}],["sessionschema",{"_index":1148,"title":{},"body":{"modules/SessionModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sessionservice",{"_index":169,"title":{"injectables/SessionService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/FreeSlotController.html":{},"injectables/JwtStrategy.html":{},"modules/SessionModule.html":{},"injectables/SessionService.html":{},"coverage.html":{},"overview.html":{}}}],["set",{"_index":378,"title":{},"body":{"controllers/CalendarController.html":{},"controllers/MeetingController.html":{}}}],["setting",{"_index":1150,"title":{},"body":{"modules/SessionModule.html":{}}}],["setup_intent",{"_index":1067,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["shipping_address",{"_index":1127,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["shipping_address_collection",{"_index":1068,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["shipping_cost",{"_index":1069,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["shipping_details",{"_index":1070,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["shipping_options",{"_index":1071,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["side",{"_index":1291,"title":{},"body":{"index.html":{}}}],["signature",{"_index":978,"title":{},"body":{"controllers/PaymentController.html":{}}}],["signoptions",{"_index":158,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["slot",{"_index":650,"title":{},"body":{"controllers/FreeSlotController.html":{},"injectables/FreeSlotService.html":{},"injectables/MeetingService.html":{}}}],["slot.controller",{"_index":690,"title":{},"body":{"modules/FreeSlotModule.html":{}}}],["slot.controller.ts",{"_index":649,"title":{},"body":{"controllers/FreeSlotController.html":{},"coverage.html":{}}}],["slot.controller.ts:24",{"_index":661,"title":{},"body":{"controllers/FreeSlotController.html":{}}}],["slot.day",{"_index":325,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["slot.dto",{"_index":227,"title":{},"body":{"classes/Availability.html":{},"injectables/AvailabilityService.html":{},"injectables/FreeSlotService.html":{},"classes/WorkSlot.html":{}}}],["slot.dto.ts",{"_index":359,"title":{},"body":{"classes/BusySlotDto.html":{},"classes/FreeSlotDto.html":{},"classes/GuestFreeSlotDto.html":{},"classes/HoomanWorkSlotDto.html":{},"classes/WorkSlotDto.html":{},"coverage.html":{}}}],["slot.dto.ts:14",{"_index":749,"title":{},"body":{"classes/GuestFreeSlotDto.html":{}}}],["slot.dto.ts:17",{"_index":741,"title":{},"body":{"classes/GuestFreeSlotDto.html":{}}}],["slot.dto.ts:2",{"_index":361,"title":{},"body":{"classes/BusySlotDto.html":{},"classes/FreeSlotDto.html":{},"classes/WorkSlotDto.html":{}}}],["slot.dto.ts:20",{"_index":750,"title":{},"body":{"classes/GuestFreeSlotDto.html":{}}}],["slot.dto.ts:23",{"_index":751,"title":{},"body":{"classes/GuestFreeSlotDto.html":{}}}],["slot.dto.ts:3",{"_index":360,"title":{},"body":{"classes/BusySlotDto.html":{},"classes/FreeSlotDto.html":{},"classes/WorkSlotDto.html":{}}}],["slot.dto.ts:5",{"_index":685,"title":{},"body":{"classes/FreeSlotDto.html":{}}}],["slot.dto.ts:6",{"_index":684,"title":{},"body":{"classes/FreeSlotDto.html":{}}}],["slot.dto.ts:7",{"_index":754,"title":{},"body":{"classes/HoomanWorkSlotDto.html":{}}}],["slot.dto.ts:8",{"_index":756,"title":{},"body":{"classes/HoomanWorkSlotDto.html":{}}}],["slot.dto.ts:9",{"_index":755,"title":{},"body":{"classes/HoomanWorkSlotDto.html":{}}}],["slot.endtime",{"_index":322,"title":{},"body":{"injectables/AvailabilityService.html":{},"injectables/FreeSlotService.html":{}}}],["slot.meetingstarttime",{"_index":859,"title":{},"body":{"injectables/MeetingService.html":{}}}],["slot.module",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/MeetingModule.html":{},"modules/NotificationModule.html":{}}}],["slot.module.ts",{"_index":689,"title":{},"body":{"modules/FreeSlotModule.html":{}}}],["slot.service",{"_index":665,"title":{},"body":{"controllers/FreeSlotController.html":{},"modules/FreeSlotModule.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"modules/NotificationModule.html":{}}}],["slot.service.ts",{"_index":693,"title":{},"body":{"injectables/FreeSlotService.html":{},"coverage.html":{}}}],["slot.service.ts:13",{"_index":695,"title":{},"body":{"injectables/FreeSlotService.html":{}}}],["slot.service.ts:19",{"_index":696,"title":{},"body":{"injectables/FreeSlotService.html":{}}}],["slot.starttime",{"_index":317,"title":{},"body":{"injectables/AvailabilityService.html":{},"injectables/FreeSlotService.html":{}}}],["slot/dto/busy",{"_index":358,"title":{},"body":{"classes/BusySlotDto.html":{},"coverage.html":{}}}],["slot/free",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"controllers/FreeSlotController.html":{},"modules/FreeSlotModule.html":{},"injectables/FreeSlotService.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"modules/NotificationModule.html":{},"coverage.html":{}}}],["slots",{"_index":673,"title":{},"body":{"controllers/FreeSlotController.html":{}}}],["source",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Availability.html":{},"modules/AvailabilityModule.html":{},"injectables/AvailabilityService.html":{},"classes/BookRequestResponse.html":{},"classes/BusySlotDto.html":{},"classes/Calendar.html":{},"controllers/CalendarController.html":{},"modules/CalendarModule.html":{},"injectables/CalendarService.html":{},"classes/CreateAvailabilityDto.html":{},"classes/CreateCalendarDto.html":{},"classes/CreateMeetingRequestDto.html":{},"classes/CreateMeetingResultDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateSessionRequestDto.html":{},"classes/DateTimeDto.html":{},"modules/DateTimeModule.html":{},"modules/EncryptionModule.html":{},"injectables/EncryptionService.html":{},"controllers/FreeSlotController.html":{},"classes/FreeSlotDto.html":{},"modules/FreeSlotModule.html":{},"injectables/FreeSlotService.html":{},"classes/GuestFreeSlotDto.html":{},"classes/HoomanWorkSlotDto.html":{},"interfaces/ISession.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Meeting.html":{},"controllers/MeetingController.html":{},"modules/MeetingModule.html":{},"injectables/MeetingService.html":{},"modules/NotificationModule.html":{},"injectables/NotificationService.html":{},"classes/NylasFreeBusy.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"classes/RegisterResponseDto.html":{},"classes/SendNotificationRequestDto.html":{},"classes/SessionCompletedDto.html":{},"modules/SessionModule.html":{},"injectables/SessionService.html":{},"classes/TimeSlot.html":{},"classes/UpdateAvailabilityDto.html":{},"classes/UpdateCalendarDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateSessionRequestDto.html":{},"classes/UserCredentialsDto.html":{},"classes/UserRegistrationDto.html":{},"classes/WorkSlot.html":{},"classes/WorkSlotDto.html":{},"index.html":{}}}],["spaces",{"_index":454,"title":{},"body":{"injectables/CalendarService.html":{},"miscellaneous/variables.html":{}}}],["split",{"_index":439,"title":{},"body":{"injectables/CalendarService.html":{},"miscellaneous/variables.html":{}}}],["sponsors",{"_index":1319,"title":{},"body":{"index.html":{}}}],["src/.../app.module.ts",{"_index":1354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.constants.ts",{"_index":1350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.module.ts",{"_index":1351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../availability.service.ts",{"_index":1281,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../calendar.service.ts",{"_index":1352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1280,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../meeting.schema.ts",{"_index":1353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../notification.service.ts",{"_index":1355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../payment.service.ts",{"_index":1358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../session",{"_index":1356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../session.schema.ts",{"_index":1357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.service.ts",{"_index":70,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":75,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.constants.ts",{"_index":1231,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/auth.controller.ts",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:11",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/auth.service.ts",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:32",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:6",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/register",{"_index":1025,"title":{},"body":{"classes/RegisterResponseDto.html":{},"coverage.html":{}}}],["src/auth/dto/user",{"_index":1197,"title":{},"body":{"classes/UserCredentialsDto.html":{},"classes/UserRegistrationDto.html":{},"coverage.html":{}}}],["src/auth/guards/jwt",{"_index":766,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":794,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts:21",{"_index":799,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:9",{"_index":797,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/availability/availability.module.ts",{"_index":248,"title":{},"body":{"modules/AvailabilityModule.html":{}}}],["src/availability/availability.service.ts",{"_index":250,"title":{},"body":{"injectables/AvailabilityService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/availability/availability.service.ts:121",{"_index":260,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["src/availability/availability.service.ts:83",{"_index":255,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["src/availability/availability.service.ts:89",{"_index":257,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["src/availability/availability.service.ts:93",{"_index":258,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["src/availability/dto/create",{"_index":484,"title":{},"body":{"classes/CreateAvailabilityDto.html":{},"coverage.html":{}}}],["src/availability/dto/free",{"_index":683,"title":{},"body":{"classes/FreeSlotDto.html":{},"coverage.html":{}}}],["src/availability/dto/guest",{"_index":736,"title":{},"body":{"classes/GuestFreeSlotDto.html":{},"coverage.html":{}}}],["src/availability/dto/update",{"_index":1186,"title":{},"body":{"classes/UpdateAvailabilityDto.html":{},"coverage.html":{}}}],["src/availability/dto/work",{"_index":753,"title":{},"body":{"classes/HoomanWorkSlotDto.html":{},"classes/WorkSlotDto.html":{},"coverage.html":{}}}],["src/availability/entities/availability.entity.ts",{"_index":205,"title":{},"body":{"classes/Availability.html":{},"classes/WorkSlot.html":{},"coverage.html":{}}}],["src/availability/entities/availability.entity.ts:23",{"_index":1218,"title":{},"body":{"classes/WorkSlot.html":{}}}],["src/availability/entities/availability.entity.ts:26",{"_index":1221,"title":{},"body":{"classes/WorkSlot.html":{}}}],["src/availability/entities/availability.entity.ts:29",{"_index":1223,"title":{},"body":{"classes/WorkSlot.html":{}}}],["src/availability/entities/availability.entity.ts:32",{"_index":1220,"title":{},"body":{"classes/WorkSlot.html":{}}}],["src/availability/entities/availability.entity.ts:34",{"_index":1222,"title":{},"body":{"classes/WorkSlot.html":{}}}],["src/availability/entities/availability.entity.ts:35",{"_index":1219,"title":{},"body":{"classes/WorkSlot.html":{}}}],["src/availability/entities/availability.entity.ts:41",{"_index":213,"title":{},"body":{"classes/Availability.html":{}}}],["src/availability/entities/availability.entity.ts:44",{"_index":215,"title":{},"body":{"classes/Availability.html":{}}}],["src/availability/entities/availability.entity.ts:47",{"_index":211,"title":{},"body":{"classes/Availability.html":{}}}],["src/availability/entities/availability.entity.ts:51",{"_index":219,"title":{},"body":{"classes/Availability.html":{}}}],["src/calendar/calendar.controller.ts",{"_index":365,"title":{},"body":{"controllers/CalendarController.html":{},"coverage.html":{}}}],["src/calendar/calendar.controller.ts:16",{"_index":368,"title":{},"body":{"controllers/CalendarController.html":{}}}],["src/calendar/calendar.module.ts",{"_index":387,"title":{},"body":{"modules/CalendarModule.html":{}}}],["src/calendar/calendar.service.ts",{"_index":389,"title":{},"body":{"injectables/CalendarService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/calendar/calendar.service.ts:27",{"_index":395,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/calendar/calendar.service.ts:36",{"_index":398,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/calendar/calendar.service.ts:50",{"_index":404,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/calendar/calendar.service.ts:54",{"_index":399,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/calendar/calendar.service.ts:58",{"_index":400,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/calendar/calendar.service.ts:62",{"_index":409,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/calendar/calendar.service.ts:73",{"_index":406,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/calendar/calendar.service.ts:77",{"_index":403,"title":{},"body":{"injectables/CalendarService.html":{}}}],["src/calendar/dto/create",{"_index":486,"title":{},"body":{"classes/CreateCalendarDto.html":{},"coverage.html":{}}}],["src/calendar/dto/update",{"_index":1190,"title":{},"body":{"classes/UpdateCalendarDto.html":{},"coverage.html":{}}}],["src/calendar/entities/calendar.entity.ts",{"_index":363,"title":{},"body":{"classes/Calendar.html":{},"coverage.html":{}}}],["src/calendar/entities/nylas",{"_index":955,"title":{},"body":{"classes/NylasFreeBusy.html":{},"classes/TimeSlot.html":{},"coverage.html":{}}}],["src/date",{"_index":563,"title":{},"body":{"classes/DateTimeDto.html":{},"modules/DateTimeModule.html":{},"coverage.html":{}}}],["src/encryption/encryption.module.ts",{"_index":631,"title":{},"body":{"modules/EncryptionModule.html":{}}}],["src/encryption/encryption.service.ts",{"_index":633,"title":{},"body":{"injectables/EncryptionService.html":{},"coverage.html":{}}}],["src/encryption/encryption.service.ts:13",{"_index":641,"title":{},"body":{"injectables/EncryptionService.html":{}}}],["src/encryption/encryption.service.ts:6",{"_index":637,"title":{},"body":{"injectables/EncryptionService.html":{}}}],["src/encryption/encryption.service.ts:9",{"_index":644,"title":{},"body":{"injectables/EncryptionService.html":{}}}],["src/free",{"_index":357,"title":{},"body":{"classes/BusySlotDto.html":{},"controllers/FreeSlotController.html":{},"modules/FreeSlotModule.html":{},"injectables/FreeSlotService.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":1241,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/meeting/dto/book",{"_index":345,"title":{},"body":{"classes/BookRequestResponse.html":{},"coverage.html":{}}}],["src/meeting/dto/create",{"_index":496,"title":{},"body":{"classes/CreateMeetingRequestDto.html":{},"classes/CreateMeetingResultDto.html":{},"coverage.html":{}}}],["src/meeting/entities/meeting.schema.ts",{"_index":814,"title":{},"body":{"interfaces/Meeting.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/meeting/meeting.controller.ts",{"_index":817,"title":{},"body":{"controllers/MeetingController.html":{},"coverage.html":{}}}],["src/meeting/meeting.controller.ts:18",{"_index":821,"title":{},"body":{"controllers/MeetingController.html":{}}}],["src/meeting/meeting.module",{"_index":897,"title":{},"body":{"modules/NotificationModule.html":{}}}],["src/meeting/meeting.module.ts",{"_index":834,"title":{},"body":{"modules/MeetingModule.html":{}}}],["src/meeting/meeting.service",{"_index":898,"title":{},"body":{"modules/NotificationModule.html":{},"injectables/NotificationService.html":{}}}],["src/meeting/meeting.service.ts",{"_index":839,"title":{},"body":{"injectables/MeetingService.html":{},"coverage.html":{}}}],["src/meeting/meeting.service.ts:16",{"_index":845,"title":{},"body":{"injectables/MeetingService.html":{}}}],["src/meeting/meeting.service.ts:23",{"_index":847,"title":{},"body":{"injectables/MeetingService.html":{}}}],["src/meeting/meeting.service.ts:42",{"_index":846,"title":{},"body":{"injectables/MeetingService.html":{}}}],["src/notification/dto/send",{"_index":996,"title":{},"body":{"injectables/PaymentService.html":{},"classes/SendNotificationRequestDto.html":{},"coverage.html":{}}}],["src/notification/notification.module",{"_index":987,"title":{},"body":{"modules/PaymentModule.html":{}}}],["src/notification/notification.module.ts",{"_index":895,"title":{},"body":{"modules/NotificationModule.html":{}}}],["src/notification/notification.service",{"_index":995,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/notification/notification.service.ts",{"_index":899,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/notification/notification.service.ts:19",{"_index":902,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/notification/notification.service.ts:22",{"_index":905,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/payment/dto/create",{"_index":553,"title":{},"body":{"classes/CreatePaymentDto.html":{},"coverage.html":{}}}],["src/payment/dto/session",{"_index":1033,"title":{},"body":{"classes/SessionCompletedDto.html":{},"coverage.html":{}}}],["src/payment/dto/update",{"_index":1192,"title":{},"body":{"classes/UpdatePaymentDto.html":{},"coverage.html":{}}}],["src/payment/entities/payment.entity.ts",{"_index":964,"title":{},"body":{"classes/Payment.html":{},"coverage.html":{}}}],["src/payment/payment.controller.ts",{"_index":966,"title":{},"body":{"controllers/PaymentController.html":{},"coverage.html":{}}}],["src/payment/payment.controller.ts:18",{"_index":971,"title":{},"body":{"controllers/PaymentController.html":{}}}],["src/payment/payment.module.ts",{"_index":985,"title":{},"body":{"modules/PaymentModule.html":{}}}],["src/payment/payment.service.ts",{"_index":988,"title":{},"body":{"injectables/PaymentService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/payment/payment.service.ts:16",{"_index":990,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/payment/payment.service.ts:19",{"_index":991,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/session/decorators/session",{"_index":1244,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/session/dto/create",{"_index":557,"title":{},"body":{"classes/CreateSessionRequestDto.html":{},"coverage.html":{}}}],["src/session/dto/update",{"_index":1196,"title":{},"body":{"classes/UpdateSessionRequestDto.html":{},"coverage.html":{}}}],["src/session/entities/session.interface.ts",{"_index":760,"title":{},"body":{"interfaces/ISession.html":{},"coverage.html":{}}}],["src/session/entities/session.schema.ts",{"_index":1246,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/session/session.module.ts",{"_index":1142,"title":{},"body":{"modules/SessionModule.html":{}}}],["src/session/session.service.ts",{"_index":1159,"title":{},"body":{"injectables/SessionService.html":{},"coverage.html":{}}}],["src/session/session.service.ts:13",{"_index":1163,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/session/session.service.ts:28",{"_index":1164,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/session/session.service.ts:32",{"_index":1166,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/session/session.service.ts:9",{"_index":1161,"title":{},"body":{"injectables/SessionService.html":{}}}],["start",{"_index":1302,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1304,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1306,"title":{},"body":{"index.html":{}}}],["startdatetime",{"_index":241,"title":{},"body":{"classes/Availability.html":{},"injectables/AvailabilityService.html":{},"classes/FreeSlotDto.html":{},"classes/WorkSlot.html":{}}}],["started",{"_index":1283,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1294,"title":{},"body":{"index.html":{}}}],["startstrdatetime",{"_index":315,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["starttime",{"_index":238,"title":{},"body":{"classes/Availability.html":{},"classes/BusySlotDto.html":{},"injectables/CalendarService.html":{},"classes/FreeSlotDto.html":{},"injectables/FreeSlotService.html":{},"classes/HoomanWorkSlotDto.html":{},"classes/NylasFreeBusy.html":{},"classes/TimeSlot.html":{},"classes/WorkSlot.html":{},"classes/WorkSlotDto.html":{},"miscellaneous/variables.html":{}}}],["statements",{"_index":1227,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":567,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["status",{"_index":962,"title":{},"body":{"classes/NylasFreeBusy.html":{},"classes/SessionCompletedDto.html":{},"classes/TimeSlot.html":{}}}],["stay",{"_index":1328,"title":{},"body":{"index.html":{}}}],["stdtimezoneoffset",{"_index":302,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["strategies/jwt.strategy",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":801,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["strdate",{"_index":565,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["string",{"_index":77,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/Availability.html":{},"injectables/AvailabilityService.html":{},"controllers/CalendarController.html":{},"injectables/CalendarService.html":{},"classes/CreateCalendarDto.html":{},"classes/CreateMeetingResultDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateSessionRequestDto.html":{},"classes/DateTimeDto.html":{},"injectables/EncryptionService.html":{},"controllers/FreeSlotController.html":{},"injectables/FreeSlotService.html":{},"classes/GuestFreeSlotDto.html":{},"classes/HoomanWorkSlotDto.html":{},"interfaces/ISession.html":{},"interfaces/Meeting.html":{},"classes/NylasFreeBusy.html":{},"classes/RegisterResponseDto.html":{},"classes/SendNotificationRequestDto.html":{},"classes/SessionCompletedDto.html":{},"classes/TimeSlot.html":{},"classes/UserCredentialsDto.html":{},"classes/UserRegistrationDto.html":{},"classes/WorkSlot.html":{},"classes/WorkSlotDto.html":{},"miscellaneous/variables.html":{}}}],["string})@isemail()@isnotempty",{"_index":1199,"title":{},"body":{"classes/UserCredentialsDto.html":{},"classes/UserRegistrationDto.html":{}}}],["string})@isnotempty",{"_index":1028,"title":{},"body":{"classes/RegisterResponseDto.html":{},"classes/UserCredentialsDto.html":{},"classes/UserRegistrationDto.html":{}}}],["stripe",{"_index":994,"title":{},"body":{"injectables/PaymentService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["stripe(process.env.stripe_secret_key",{"_index":1000,"title":{},"body":{"injectables/PaymentService.html":{},"miscellaneous/variables.html":{}}}],["stripe.webhooks.constructevent",{"_index":1007,"title":{},"body":{"injectables/PaymentService.html":{}}}],["stripesignature",{"_index":976,"title":{},"body":{"controllers/PaymentController.html":{},"injectables/PaymentService.html":{}}}],["strtargetday",{"_index":313,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["strtargetday}t",{"_index":316,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["strtime",{"_index":566,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["sub",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["subject",{"_index":914,"title":{},"body":{"injectables/NotificationService.html":{}}}],["submit",{"_index":1128,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["submit_type",{"_index":1072,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["subscription",{"_index":1073,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["success_url",{"_index":1074,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["such",{"_index":1146,"title":{},"body":{"modules/SessionModule.html":{}}}],["sunday",{"_index":235,"title":{},"body":{"classes/Availability.html":{},"injectables/AvailabilityService.html":{},"classes/WorkSlot.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":807,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["super.canactivate(context",{"_index":787,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["super.login(request",{"_index":785,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["support",{"_index":1320,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1339,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":675,"title":{},"body":{"controllers/FreeSlotController.html":{}}}],["switch",{"_index":1012,"title":{},"body":{"injectables/PaymentService.html":{}}}],["sábado",{"_index":747,"title":{},"body":{"classes/GuestFreeSlotDto.html":{}}}],["table",{"_index":1248,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1247,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":851,"title":{},"body":{"injectables/MeetingService.html":{}}}],["tap((data",{"_index":888,"title":{},"body":{"injectables/MeetingService.html":{}}}],["tap((resp",{"_index":883,"title":{},"body":{"injectables/MeetingService.html":{}}}],["targetdate",{"_index":337,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["targetdate.getfullyear",{"_index":343,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["targetdate.setdate(targetdate.getdate",{"_index":338,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["targetdayofweekindex",{"_index":333,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["tax_exempt",{"_index":1131,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["tax_ids",{"_index":1132,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["te",{"_index":926,"title":{},"body":{"injectables/NotificationService.html":{}}}],["terms_of_service",{"_index":1126,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["test",{"_index":1309,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":1312,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1311,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1308,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1318,"title":{},"body":{"index.html":{}}}],["theme_id",{"_index":520,"title":{},"body":{"classes/CreateMeetingResultDto.html":{}}}],["then((entries",{"_index":716,"title":{},"body":{"injectables/FreeSlotService.html":{}}}],["this.authservice.createtoken",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.createtoken(req.user",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.availabilityservice.findworkslots",{"_index":706,"title":{},"body":{"injectables/FreeSlotService.html":{}}}],["this.calendarservice",{"_index":715,"title":{},"body":{"injectables/FreeSlotService.html":{}}}],["this.calendarservice.gettimezonelist",{"_index":383,"title":{},"body":{"controllers/CalendarController.html":{}}}],["this.config.get('hash_rounds",{"_index":646,"title":{},"body":{"injectables/EncryptionService.html":{}}}],["this.createmeeting",{"_index":866,"title":{},"body":{"injectables/MeetingService.html":{}}}],["this.encryptionservice.compare",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.freeslotservice.getfreeslots",{"_index":856,"title":{},"body":{"injectables/MeetingService.html":{}}}],["this.freeslotservice.getfreeslots(guesttimezone",{"_index":681,"title":{},"body":{"controllers/FreeSlotController.html":{}}}],["this.getdateofnextdayofweek(slot.day",{"_index":314,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["this.httpservice",{"_index":874,"title":{},"body":{"injectables/MeetingService.html":{}}}],["this.jwtservice.sign",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign(payload",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.meetingmodel(bookrequest",{"_index":862,"title":{},"body":{"injectables/MeetingService.html":{}}}],["this.meetingservice.createmeeting",{"_index":912,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.meetingservice.requestbooking(bookrequest",{"_index":830,"title":{},"body":{"controllers/MeetingController.html":{}}}],["this.notificationservice.sendnotification(notificationrequest",{"_index":1020,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.nylas",{"_index":460,"title":{},"body":{"injectables/CalendarService.html":{}}}],["this.nylas.calendars.freebusy",{"_index":482,"title":{},"body":{"injectables/CalendarService.html":{}}}],["this.paymentservice.paymentsuccess",{"_index":981,"title":{},"body":{"controllers/PaymentController.html":{}}}],["this.prependzero",{"_index":617,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["this.prependzero(month",{"_index":616,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["this.sessionmodel(createsessiondto",{"_index":1175,"title":{},"body":{"injectables/SessionService.html":{}}}],["this.sessionmodel.findbyid(id",{"_index":1178,"title":{},"body":{"injectables/SessionService.html":{}}}],["this.sessionmodel.findbyidandupdate(id",{"_index":1179,"title":{},"body":{"injectables/SessionService.html":{}}}],["this.sessionservice.create",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sessionservice.findbyid",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sessionservice.findone(payload.id",{"_index":813,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.sessionservice.update(sessioninfo.id",{"_index":680,"title":{},"body":{"controllers/FreeSlotController.html":{}}}],["this.timestamp",{"_index":603,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["this.usersservice.findbyemail(email",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":788,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/MeetingService.html":{}}}],["thursday",{"_index":232,"title":{},"body":{"classes/Availability.html":{},"injectables/AvailabilityService.html":{},"classes/WorkSlot.html":{},"miscellaneous/variables.html":{}}}],["time",{"_index":265,"title":{},"body":{"injectables/AvailabilityService.html":{},"classes/DateTimeDto.html":{},"controllers/FreeSlotController.html":{},"miscellaneous/functions.html":{}}}],["time.dto",{"_index":420,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/FreeSlotService.html":{}}}],["time.dto.ts",{"_index":564,"title":{},"body":{"classes/DateTimeDto.html":{},"coverage.html":{}}}],["time.dto.ts:1",{"_index":572,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["time.dto.ts:31",{"_index":599,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["time.dto.ts:35",{"_index":597,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["time.dto.ts:39",{"_index":575,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["time.dto.ts:40",{"_index":574,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["time.dto.ts:41",{"_index":578,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["time.dto.ts:42",{"_index":577,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["time.dto.ts:43",{"_index":573,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["time.dto.ts:45",{"_index":596,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["time.dto.ts:5",{"_index":576,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["time.dto.ts:62",{"_index":600,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["time.dto.ts:7",{"_index":602,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["time.module",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["time.module.ts",{"_index":627,"title":{},"body":{"modules/DateTimeModule.html":{}}}],["time/date",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/DateTimeModule.html":{}}}],["time/dto/date",{"_index":419,"title":{},"body":{"injectables/CalendarService.html":{},"classes/DateTimeDto.html":{},"injectables/FreeSlotService.html":{},"coverage.html":{}}}],["timeslot",{"_index":960,"title":{"classes/TimeSlot.html":{}},"body":{"classes/NylasFreeBusy.html":{},"classes/TimeSlot.html":{},"coverage.html":{}}}],["timeslots",{"_index":957,"title":{},"body":{"classes/NylasFreeBusy.html":{},"classes/TimeSlot.html":{}}}],["timestamp",{"_index":498,"title":{},"body":{"classes/CreateMeetingRequestDto.html":{},"classes/CreateSessionRequestDto.html":{},"classes/DateTimeDto.html":{},"interfaces/ISession.html":{},"interfaces/Meeting.html":{},"miscellaneous/variables.html":{}}}],["timestamptodatetime",{"_index":570,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["timestamptodatetime(timestamp",{"_index":601,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["timezone",{"_index":208,"title":{},"body":{"classes/Availability.html":{},"injectables/AvailabilityService.html":{},"injectables/CalendarService.html":{},"classes/CreateSessionRequestDto.html":{},"classes/DateTimeDto.html":{},"controllers/FreeSlotController.html":{},"interfaces/ISession.html":{},"classes/WorkSlot.html":{},"miscellaneous/variables.html":{}}}],["timezoneoffsetmap",{"_index":568,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["today",{"_index":310,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["today.gettimezoneoffset",{"_index":312,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["todo",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{}}}],["tolocaledatestring('en",{"_index":623,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["tolowercase",{"_index":457,"title":{},"body":{"injectables/CalendarService.html":{},"classes/DateTimeDto.html":{},"miscellaneous/variables.html":{}}}],["total_details",{"_index":1075,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["touch",{"_index":1329,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":220,"title":{},"body":{"classes/Availability.html":{},"injectables/FreeSlotService.html":{},"injectables/MeetingService.html":{},"classes/NylasFreeBusy.html":{},"injectables/PaymentService.html":{},"classes/TimeSlot.html":{},"classes/UserRegistrationDto.html":{},"classes/WorkSlot.html":{},"dependencies.html":{}}}],["true",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"classes/Availability.html":{},"injectables/FreeSlotService.html":{},"interfaces/Meeting.html":{},"classes/NylasFreeBusy.html":{},"classes/TimeSlot.html":{},"classes/WorkSlot.html":{},"miscellaneous/variables.html":{}}}],["true})@type(undefined",{"_index":218,"title":{},"body":{"classes/Availability.html":{},"classes/NylasFreeBusy.html":{}}}],["try",{"_index":1006,"title":{},"body":{"injectables/PaymentService.html":{}}}],["tuesday",{"_index":230,"title":{},"body":{"classes/Availability.html":{},"injectables/AvailabilityService.html":{},"classes/WorkSlot.html":{},"miscellaneous/variables.html":{}}}],["tutoring",{"_index":502,"title":{},"body":{"classes/CreateMeetingRequestDto.html":{},"interfaces/Meeting.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":1335,"title":{},"body":{"index.html":{}}}],["type",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{},"classes/Availability.html":{},"injectables/AvailabilityService.html":{},"classes/BookRequestResponse.html":{},"classes/BusySlotDto.html":{},"injectables/CalendarService.html":{},"classes/CreateCalendarDto.html":{},"classes/CreateMeetingRequestDto.html":{},"classes/CreateMeetingResultDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateSessionRequestDto.html":{},"classes/DateTimeDto.html":{},"injectables/EncryptionService.html":{},"controllers/FreeSlotController.html":{},"classes/FreeSlotDto.html":{},"injectables/FreeSlotService.html":{},"classes/GuestFreeSlotDto.html":{},"classes/HoomanWorkSlotDto.html":{},"interfaces/ISession.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Meeting.html":{},"controllers/MeetingController.html":{},"injectables/MeetingService.html":{},"injectables/NotificationService.html":{},"classes/NylasFreeBusy.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"classes/RegisterResponseDto.html":{},"classes/SendNotificationRequestDto.html":{},"classes/SessionCompletedDto.html":{},"injectables/SessionService.html":{},"classes/TimeSlot.html":{},"classes/UserCredentialsDto.html":{},"classes/UserRegistrationDto.html":{},"classes/WorkSlot.html":{},"classes/WorkSlotDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":1194,"title":{},"body":{"classes/UpdatePaymentDto.html":{},"dependencies.html":{}}}],["types/bcrypt",{"_index":1258,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":425,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/NotificationService.html":{},"index.html":{}}}],["tzdifference",{"_index":607,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["u036f]/g",{"_index":444,"title":{},"body":{"injectables/CalendarService.html":{},"miscellaneous/variables.html":{}}}],["ui_settings",{"_index":521,"title":{},"body":{"classes/CreateMeetingResultDto.html":{}}}],["una",{"_index":928,"title":{},"body":{"injectables/NotificationService.html":{}}}],["unauthorizedexception",{"_index":777,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["undefined",{"_index":505,"title":{},"body":{"classes/CreateMeetingRequestDto.html":{},"classes/DateTimeDto.html":{}}}],["unit",{"_index":1307,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":662,"title":{},"body":{"controllers/FreeSlotController.html":{},"injectables/FreeSlotService.html":{},"injectables/NotificationService.html":{},"miscellaneous/variables.html":{}}}],["unlicensed",{"_index":1348,"title":{},"body":{"properties.html":{}}}],["up",{"_index":1151,"title":{},"body":{"modules/SessionModule.html":{}}}],["update",{"_index":394,"title":{},"body":{"injectables/CalendarService.html":{},"classes/DateTimeDto.html":{},"injectables/SessionService.html":{}}}],["update(id",{"_index":407,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/SessionService.html":{}}}],["updateavailabilitydto",{"_index":1185,"title":{"classes/UpdateAvailabilityDto.html":{}},"body":{"classes/UpdateAvailabilityDto.html":{},"coverage.html":{}}}],["updatecalendardto",{"_index":408,"title":{"classes/UpdateCalendarDto.html":{}},"body":{"injectables/CalendarService.html":{},"classes/UpdateCalendarDto.html":{},"coverage.html":{}}}],["updatecalendardto.description",{"_index":478,"title":{},"body":{"injectables/CalendarService.html":{}}}],["updatecalendardto.name",{"_index":476,"title":{},"body":{"injectables/CalendarService.html":{}}}],["updated",{"_index":678,"title":{},"body":{"controllers/FreeSlotController.html":{}}}],["updated.timezone",{"_index":679,"title":{},"body":{"controllers/FreeSlotController.html":{}}}],["updatepaymentdto",{"_index":993,"title":{"classes/UpdatePaymentDto.html":{}},"body":{"injectables/PaymentService.html":{},"classes/UpdatePaymentDto.html":{},"coverage.html":{}}}],["updatesessiondto",{"_index":669,"title":{},"body":{"controllers/FreeSlotController.html":{},"injectables/SessionService.html":{}}}],["updatesessionrequestdto",{"_index":1165,"title":{"classes/UpdateSessionRequestDto.html":{}},"body":{"injectables/SessionService.html":{},"classes/UpdateSessionRequestDto.html":{},"coverage.html":{}}}],["url",{"_index":1076,"title":{},"body":{"classes/SessionCompletedDto.html":{}}}],["use",{"_index":1156,"title":{},"body":{"modules/SessionModule.html":{}}}],["usefactory",{"_index":163,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["useguards",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CalendarController.html":{},"controllers/FreeSlotController.html":{},"controllers/MeetingController.html":{}}}],["useguards(jwtauthguard",{"_index":381,"title":{},"body":{"controllers/CalendarController.html":{},"controllers/FreeSlotController.html":{},"controllers/MeetingController.html":{}}}],["useguards(jwtauthguard)@get('timezones')@apibearerauth",{"_index":367,"title":{},"body":{"controllers/CalendarController.html":{}}}],["useguards(jwtauthguard)@get()@apiquery({name",{"_index":654,"title":{},"body":{"controllers/FreeSlotController.html":{}}}],["useguards(jwtauthguard)@post('book')@apibearerauth",{"_index":820,"title":{},"body":{"controllers/MeetingController.html":{}}}],["useguards(localauthguard",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["user.userid",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.username",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["usercredentialsdto",{"_index":129,"title":{"classes/UserCredentialsDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/UserCredentialsDto.html":{},"coverage.html":{}}}],["username",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["userregistrationdto",{"_index":1202,"title":{"classes/UserRegistrationDto.html":{}},"body":{"classes/UserRegistrationDto.html":{},"coverage.html":{}}}],["using",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"modules/SessionModule.html":{}}}],["utc",{"_index":286,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["utctime",{"_index":292,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["validate",{"_index":795,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":798,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateif",{"_index":494,"title":{},"body":{"classes/CreateCalendarDto.html":{}}}],["validatenested",{"_index":224,"title":{},"body":{"classes/Availability.html":{},"classes/NylasFreeBusy.html":{},"classes/TimeSlot.html":{},"classes/WorkSlot.html":{}}}],["validatenested({each",{"_index":217,"title":{},"body":{"classes/Availability.html":{},"classes/NylasFreeBusy.html":{}}}],["validateuser(email",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":225,"title":{},"body":{"classes/Availability.html":{},"classes/CreateCalendarDto.html":{},"classes/GuestFreeSlotDto.html":{},"classes/NylasFreeBusy.html":{},"classes/RegisterResponseDto.html":{},"classes/TimeSlot.html":{},"classes/UserCredentialsDto.html":{},"classes/UserRegistrationDto.html":{},"classes/WorkSlot.html":{},"dependencies.html":{}}}],["value",{"_index":298,"title":{},"body":{"injectables/AvailabilityService.html":{},"classes/DateTimeDto.html":{},"controllers/FreeSlotController.html":{},"injectables/FreeSlotService.html":{},"classes/SendNotificationRequestDto.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":427,"title":{},"body":{"injectables/CalendarService.html":{},"injectables/NotificationService.html":{}}}],["variable",{"_index":1228,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1349,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1346,"title":{},"body":{"properties.html":{}}}],["videollamada",{"_index":950,"title":{},"body":{"injectables/NotificationService.html":{}}}],["viernes",{"_index":746,"title":{},"body":{"classes/GuestFreeSlotDto.html":{}}}],["virtual",{"_index":878,"title":{},"body":{"injectables/MeetingService.html":{}}}],["watch",{"_index":1303,"title":{},"body":{"index.html":{}}}],["way",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{}}}],["website",{"_index":1333,"title":{},"body":{"index.html":{}}}],["wednesday",{"_index":231,"title":{},"body":{"classes/Availability.html":{},"injectables/AvailabilityService.html":{},"classes/WorkSlot.html":{},"miscellaneous/variables.html":{}}}],["weekday",{"_index":624,"title":{},"body":{"classes/DateTimeDto.html":{}}}],["work",{"_index":723,"title":{},"body":{"injectables/FreeSlotService.html":{}}}],["workslot",{"_index":228,"title":{"classes/WorkSlot.html":{}},"body":{"classes/Availability.html":{},"injectables/AvailabilityService.html":{},"classes/WorkSlot.html":{},"coverage.html":{}}}],["workslot.day",{"_index":268,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["workslot.enddatetime",{"_index":329,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["workslot.endtime",{"_index":271,"title":{},"body":{"injectables/AvailabilityService.html":{},"injectables/FreeSlotService.html":{}}}],["workslot.localtimezonedate",{"_index":273,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["workslot.startdatetime",{"_index":328,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["workslot.starttime",{"_index":269,"title":{},"body":{"injectables/AvailabilityService.html":{},"injectables/FreeSlotService.html":{}}}],["workslotdto",{"_index":703,"title":{"classes/WorkSlotDto.html":{}},"body":{"injectables/FreeSlotService.html":{},"classes/HoomanWorkSlotDto.html":{},"classes/WorkSlotDto.html":{},"coverage.html":{}}}],["workslots",{"_index":209,"title":{},"body":{"classes/Availability.html":{},"injectables/AvailabilityService.html":{},"injectables/FreeSlotService.html":{},"classes/WorkSlot.html":{}}}],["workslots.filter((workslot",{"_index":722,"title":{},"body":{"injectables/FreeSlotService.html":{}}}],["workslotsresult",{"_index":705,"title":{},"body":{"injectables/FreeSlotService.html":{}}}],["workslotsresult.workslots",{"_index":707,"title":{},"body":{"injectables/FreeSlotService.html":{}}}],["world",{"_index":80,"title":{},"body":{"injectables/AppService.html":{}}}],["xx",{"_index":937,"title":{},"body":{"injectables/NotificationService.html":{}}}],["xx:xx",{"_index":941,"title":{},"body":{"injectables/NotificationService.html":{}}}],["xxxx",{"_index":939,"title":{},"body":{"injectables/NotificationService.html":{}}}],["y').todate",{"_index":1216,"title":{},"body":{"classes/UserRegistrationDto.html":{}}}],["year",{"_index":342,"title":{},"body":{"injectables/AvailabilityService.html":{},"classes/DateTimeDto.html":{}}}],["you'd",{"_index":1323,"title":{},"body":{"index.html":{}}}],["z])([a",{"_index":448,"title":{},"body":{"injectables/CalendarService.html":{},"miscellaneous/variables.html":{}}}],["z])/g",{"_index":449,"title":{},"body":{"injectables/CalendarService.html":{},"miscellaneous/variables.html":{}}}],["zone",{"_index":300,"title":{},"body":{"injectables/AvailabilityService.html":{}}}],["zoom",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AvailabilityModule.html":{},"modules/CalendarModule.html":{},"modules/EncryptionModule.html":{},"modules/FreeSlotModule.html":{},"modules/MeetingModule.html":{},"modules/NotificationModule.html":{},"modules/PaymentModule.html":{},"modules/SessionModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAvailabilityModule\n\nAvailabilityModule\n\nAppModule -->\n\nAvailabilityModule->AppModule\n\n\n\n\n\nCalendarModule\n\nCalendarModule\n\nAppModule -->\n\nCalendarModule->AppModule\n\n\n\n\n\nDateTimeModule\n\nDateTimeModule\n\nAppModule -->\n\nDateTimeModule->AppModule\n\n\n\n\n\nFreeSlotModule\n\nFreeSlotModule\n\nAppModule -->\n\nFreeSlotModule->AppModule\n\n\n\n\n\nMeetingModule\n\nMeetingModule\n\nAppModule -->\n\nMeetingModule->AppModule\n\n\n\n\n\nNotificationModule\n\nNotificationModule\n\nAppModule -->\n\nNotificationModule->AppModule\n\n\n\n\n\nPaymentModule\n\nPaymentModule\n\nAppModule -->\n\nPaymentModule->AppModule\n\n\n\n\n\nSessionModule\n\nSessionModule\n\nAppModule -->\n\nSessionModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            AvailabilityModule\n                        \n                        \n                            CalendarModule\n                        \n                        \n                            DateTimeModule\n                        \n                        \n                            FreeSlotModule\n                        \n                        \n                            MeetingModule\n                        \n                        \n                            NotificationModule\n                        \n                        \n                            PaymentModule\n                        \n                        \n                            SessionModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { PaymentModule } from './payment/payment.module';\nimport { MeetingModule } from './meeting/meeting.module';\nimport { NotificationModule } from './notification/notification.module';\nimport { CalendarModule } from './calendar/calendar.module';\nimport { AvailabilityModule } from './availability/availability.module';\nimport { FreeSlotModule } from './free-slot/free-slot.module';\nimport { DateTimeModule } from './date-time/date-time.module';\nimport { SessionModule } from './session/session.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport 'dotenv/config';\nimport { AuthModule } from './auth/auth.module';\n//console.log(process.env.MONGO_DB_CONNECTION_URL);\n\nconst MONGO_DB_CONNECTION_URL = `${process.env.MONGO_DB_PROTOCOL}://${process.env.MONGO_DB_USER}:${process.env.MONGO_DB_PASSWORD}@${process.env.MONGO_DB_HOST}/?retryWrites=true&w=majority`;\n\nconsole.log(MONGO_DB_CONNECTION_URL);\n@Module({\n  imports: [\n    AuthModule,\n    PaymentModule,\n    MeetingModule,\n    NotificationModule,\n    CalendarModule,\n    AvailabilityModule,\n    FreeSlotModule,\n    DateTimeModule,\n    SessionModule,\n    ConfigModule.forRoot({\n      envFilePath: '.env',\n      isGlobal: true,\n    }),\n    MongooseModule.forRoot(MONGO_DB_CONNECTION_URL),\n  ],\n  controllers: [],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                createSession\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        createSession\n                        \n                    \n                \n            \n            \n                \n                    \n                    createSession()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('session')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Request, Post, UseGuards, Body } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { AuthService } from './auth.service';\n\n@ApiTags('Authentication')\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @Post('session')\n  async createSession(): Promise {\n    return this.authService.createToken();\n  }\n\n  // TODO: find an alternate way of returning this response by using Guards\n  // @All('register')\n  // async notAllowedRegister(@Request() request, @Res() response): Promise {\n  //   // Return a 405 Method Not Allowed error for any HTTP method that is not POST\n  //   if (request.method !== 'P  OST') {\n  //     response.setHeader('Allow', 'POST');\n  //     response.status(405).send({statusCode: 405, error: METHOD_NOT_ALLOWED});\n  //   }\n  // }\n\n  // @UseGuards(LocalAuthGuard)\n  // @Post('login')\n  // @ApiBody({type: UserCredentialsDto})\n  // async login(@Request() req): Promise {\n  //   return this.authService.createToken(req.user);\n  // }\n\n  // @All('login')\n  // async notAllowedLogin(@Request() request, @Res() response): Promise {\n  //   // Return a 405 Method Not Allowed error for any HTTP method that is not POST\n  //   if (request.method !== 'POST') {\n  //     response.setHeader('Allow', 'POST');\n  //     response.status(405).send({statusCode: 405, error: METHOD_NOT_ALLOWED});\n  //   }\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nEncryptionModule\n\nEncryptionModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nEncryptionModule->AuthModule\n\n\n\n\n\nSessionModule\n\nSessionModule\n\nAuthModule -->\n\nSessionModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nEncryptionService\n\nEncryptionService\n\nAuthModule -->\n\nEncryptionService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            EncryptionService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            EncryptionModule\n                        \n                        \n                            SessionModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { JwtStrategy } from './strategies/jwt.strategy';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { AuthController } from './auth.controller';\nimport { EncryptionModule } from '../encryption/encryption.module';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { EncryptionService } from '../encryption/encryption.service';\nimport { JWT_EXPIRES_IN, JWT_SECRET } from './auth.constants';\nimport { SessionModule } from '../session/session.module';\n\nconst jwtFactory = (configService: ConfigService) => ({\n  secret: configService.get(JWT_SECRET),\n  signOptions: {\n    expiresIn: configService.get(JWT_EXPIRES_IN),\n  },\n});\n\nconst options = {\n  imports: [ConfigModule],\n  inject: [ConfigService],\n  useFactory: jwtFactory,\n};\n\n@Module({\n  imports: [\n    EncryptionModule,\n    PassportModule,\n    JwtModule.registerAsync(options),\n    SessionModule,\n  ],\n  providers: [AuthService, JwtStrategy, EncryptionService, ConfigService],\n  exports: [AuthService],\n  controllers: [AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sessionService: SessionService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sessionService\n                                                  \n                                                        \n                                                                        SessionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    createToken()\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { SessionService } from '../session/session.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private sessionService: SessionService,\n    private jwtService: JwtService, //private readonly encryptionService: EncryptionService,\n  ) {}\n\n  // async validateUser(email: string, password: string): Promise {\n  //   const session = await this.sessionService.findById()\n  //   const user = await this.usersService.findByEmail(email);\n  //   const comparison = this.encryptionService.compare(\n  //     password,\n  //     (user as Record).password,\n  //   );\n  //   if (user && comparison) {\n  //     return user;\n  //   }\n  //   return null;\n  // }\n\n  // async login(user: any) {\n  //   const payload = { username: user.username, sub: user.userId };\n  //   return {\n  //     access_token: this.jwtService.sign(payload),\n  //   };\n  // }\n\n  async createToken(): Promise {\n    const session = await this.sessionService.create();\n    return {\n      access_token: this.jwtService.sign({\n        id: session.id,\n      }),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Availability.html":{"url":"classes/Availability.html","title":"class - Availability","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Availability\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/availability/entities/availability.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                timezone\n                            \n                            \n                                    \n                                    \n                                workSlots\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/availability/entities/availability.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/availability/entities/availability.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        timezone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/availability/entities/availability.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        workSlots\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HoomanWorkSlotDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/availability/entities/availability.entity.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport {\n  IsArray,\n  IsIn,\n  IsOptional,\n  IsString,\n  IsEmail,\n  ValidateNested,\n} from 'class-validator';\nimport { HoomanWorkSlotDto } from '../dto/work-slot.dto';\n\nexport class WorkSlot {\n  @IsString()\n  @IsIn([\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n    'sunday',\n  ])\n  day: string;\n\n  @IsString()\n  localTimezoneDate: string;\n\n  @IsString()\n  startTime: number;\n\n  @IsString()\n  endTime: number;\n\n  startDateTime: Date;\n  endDateTime: Date;\n}\n\nexport class Availability {\n  @IsOptional()\n  @IsString()\n  id: string | null;\n\n  @IsString()\n  timezone: string;\n\n  @IsEmail()\n  email: string;\n\n  @ValidateNested({ each: true })\n  @Type(() => HoomanWorkSlotDto)\n  workSlots: HoomanWorkSlotDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AvailabilityModule.html":{"url":"modules/AvailabilityModule.html","title":"module - AvailabilityModule","body":"\n                   \n\n\n\n\n    Modules\n    AvailabilityModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AvailabilityModule\n\n\n\ncluster_AvailabilityModule_providers\n\n\n\ncluster_AvailabilityModule_exports\n\n\n\n\nAvailabilityService \n\nAvailabilityService \n\n\n\nAvailabilityModule\n\nAvailabilityModule\n\nAvailabilityService  -->\n\nAvailabilityModule->AvailabilityService \n\n\n\n\n\nAvailabilityService\n\nAvailabilityService\n\nAvailabilityModule -->\n\nAvailabilityService->AvailabilityModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/availability/availability.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AvailabilityService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AvailabilityService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AvailabilityService } from './availability.service';\n\n@Module({\n  controllers: [],\n  providers: [AvailabilityService],\n  exports: [AvailabilityService],\n})\nexport class AvailabilityModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AvailabilityService.html":{"url":"injectables/AvailabilityService.html","title":"injectable - AvailabilityService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AvailabilityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/availability/availability.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                findWorkSlots\n                            \n                            \n                                getDateOfNextDayOfWeek\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/availability/availability.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/availability/availability.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findWorkSlots\n                        \n                    \n                \n            \n            \n                \nfindWorkSlots()\n                \n            \n\n\n            \n                \n                    Defined in src/availability/availability.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { timezone: any; workSlots: any; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDateOfNextDayOfWeek\n                        \n                    \n                \n            \n            \n                \ngetDateOfNextDayOfWeek(dayOfWeek: string)\n                \n            \n\n\n            \n                \n                    Defined in src/availability/availability.service.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dayOfWeek\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Availability, WorkSlot } from './entities/availability.entity';\nimport 'dotenv/config';\nimport { HoomanWorkSlotDto } from './dto/work-slot.dto';\n\nfunction prependZero(time) {\n  return time  {\n  availableHours.forEach((hour) => {\n    const workSlot = new HoomanWorkSlotDto();\n    workSlot.day = day;\n    workSlot.startTime = hour.startTime;\n    workSlot.endTime = hour.endTime;\n    //workSlot.localTimezoneDate = '';\n    availability.workSlots.push(workSlot);\n  });\n});\n\nfunction getNow() {\n  const d = new Date();\n\n  // convert to msec since Jan 1 1970\n  const localTime = d.getTime();\n\n  // obtain local UTC offset and convert to msec\n  const localOffset = d.getTimezoneOffset() * 60 * 1000;\n\n  // obtain UTC time in msec\n  const utcTime = localTime + localOffset;\n\n  // obtain and add destination's UTC time offset\n  const estOffset = getMonterreyOffset();\n  const monterreyTime = utcTime + 60 * 60 * 1000 * estOffset;\n\n  // convert msec value to date string\n  return new Date(monterreyTime);\n}\n// Get time zone offset for 'America/Monterrey'\nfunction getMonterreyOffset() {\n  const stdTimezoneOffset = () => {\n    const jan = new Date(0, 0, 1);\n    const jul = new Date(6, 6, 1);\n    return Math.max(jan.getTimezoneOffset(), jul.getTimezoneOffset());\n  };\n\n  const today = new Date();\n\n  const isDstObserved = (today: Date) => {\n    return today.getTimezoneOffset()  {\n        const strTargetDay = this.getDateOfNextDayOfWeek(slot.day);\n\n        const startStrDateTime = `${strTargetDay}T${\n          slot.startTime\n        }:00.000-${prependZero(-getMonterreyOffset())}:00`;\n        const endStrDateTime = `${strTargetDay}T${\n          slot.endTime\n        }:00.000-${prependZero(-getMonterreyOffset())}:00`;\n\n        const startDateTime = new Date(startStrDateTime);\n        const endDateTime = new Date(endStrDateTime);\n\n        const workSlot = new WorkSlot();\n        workSlot.localTimezoneDate = strTargetDay;\n        workSlot.day = slot.day;\n        workSlot.startTime = Math.floor(startDateTime.getTime() / 1000);\n        workSlot.endTime = Math.floor(endDateTime.getTime() / 1000);\n        workSlot.startDateTime = startDateTime;\n        workSlot.endDateTime = endDateTime;\n        return workSlot;\n      }),\n    };\n  }\n\n  getDateOfNextDayOfWeek(dayOfWeek: string): string {\n    const daysOfWeek = [\n      'sunday',\n      'monday',\n      'tuesday',\n      'wednesday',\n      'thursday',\n      'friday',\n      'saturday',\n    ];\n    const currentDayOfWeek = getNow().getDay();\n\n    const targetDayOfWeekIndex = daysOfWeek.indexOf(dayOfWeek.toLowerCase());\n    const daysUntilTargetDay =\n      (targetDayOfWeekIndex + 7 - currentDayOfWeek) % 7;\n    const targetDate = new Date();\n    targetDate.setDate(targetDate.getDate() + daysUntilTargetDay);\n\n    const day = prependZero(targetDate.getDate());\n    const month = prependZero(targetDate.getMonth() + 1);\n    const year = targetDate.getFullYear();\n\n    return `${year}-${month}-${day}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BookRequestResponse.html":{"url":"classes/BookRequestResponse.html","title":"class - BookRequestResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BookRequestResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/meeting/dto/create-booking.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                meeting\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        meeting\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Meeting\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The meeting details', type: MeetingSchema})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/meeting/dto/create-booking.response.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Meeting, MeetingSchema } from '../entities/meeting.schema';\n\nclass BookRequestResponse {\n  @ApiProperty({ description: 'The meeting details', type: MeetingSchema })\n  meeting: Meeting;\n}\n\nexport default BookRequestResponse;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BusySlotDto.html":{"url":"classes/BusySlotDto.html","title":"class - BusySlotDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BusySlotDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/free-slot/dto/busy-slot.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                endTime\n                            \n                            \n                                startTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        endTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/free-slot/dto/busy-slot.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/free-slot/dto/busy-slot.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export default class BusySlotDto {\n  startTime: number;\n  endTime: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Calendar.html":{"url":"classes/Calendar.html","title":"class - Calendar","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Calendar\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/calendar/entities/calendar.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Calendar {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CalendarController.html":{"url":"controllers/CalendarController.html","title":"controller - CalendarController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CalendarController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/calendar/calendar.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                calendar\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                getTimezoneList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        getTimezoneList\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTimezoneList()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('timezones')@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/calendar/calendar.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        // calendar.controller.ts\n\nimport { Controller, Get, UseGuards } from '@nestjs/common';\nimport { CalendarService } from './calendar.service';\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Calendar')\n@Controller('calendar') // Set the base path for the controller\nexport class CalendarController {\n  constructor(private readonly calendarService: CalendarService) {}\n\n  @UseGuards(JwtAuthGuard)\n  @Get('timezones') // Set the path for the controller method\n  @ApiBearerAuth()\n  getTimezoneList(): string[] {\n    return this.calendarService.getTimezoneList();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CalendarModule.html":{"url":"modules/CalendarModule.html","title":"module - CalendarModule","body":"\n                   \n\n\n\n\n    Modules\n    CalendarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CalendarModule\n\n\n\ncluster_CalendarModule_exports\n\n\n\ncluster_CalendarModule_providers\n\n\n\n\nCalendarService \n\nCalendarService \n\n\n\nCalendarModule\n\nCalendarModule\n\nCalendarService  -->\n\nCalendarModule->CalendarService \n\n\n\n\n\nCalendarService\n\nCalendarService\n\nCalendarModule -->\n\nCalendarService->CalendarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/calendar/calendar.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CalendarService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CalendarController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CalendarService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CalendarService } from './calendar.service';\nimport { CalendarController } from './calendar.controller';\n\n@Module({\n  controllers: [CalendarController],\n  providers: [CalendarService],\n  exports: [CalendarService],\n})\nexport class CalendarModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CalendarService.html":{"url":"injectables/CalendarService.html","title":"injectable - CalendarService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CalendarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/calendar/calendar.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                nylas\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                getFreeBusy\n                            \n                            \n                                getTimezoneList\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/calendar/calendar.service.ts:27\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createCalendarDto: CreateCalendarDto)\n                \n            \n\n\n            \n                \n                    Defined in src/calendar/calendar.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCalendarDto\n                                    \n                                                CreateCalendarDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/calendar/calendar.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/calendar/calendar.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getFreeBusy\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFreeBusy(startTime: number, endTime: number, emails: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/calendar/calendar.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    startTime\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    endTime\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    emails\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTimezoneList\n                        \n                    \n                \n            \n            \n                \ngetTimezoneList()\n                \n            \n\n\n            \n                \n                    Defined in src/calendar/calendar.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/calendar/calendar.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateCalendarDto: UpdateCalendarDto)\n                \n            \n\n\n            \n                \n                    Defined in src/calendar/calendar.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateCalendarDto\n                                    \n                                                UpdateCalendarDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        nylas\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/calendar/calendar.service.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateCalendarDto } from './dto/create-calendar.dto';\nimport { UpdateCalendarDto } from './dto/update-calendar.dto';\nimport 'dotenv/config';\nimport NylasCalendar from 'nylas/lib/models/calendar';\nimport { NylasFreeBusy } from './entities/nylas-free-busy.entity';\nimport { DateTimeDto } from '../date-time/dto/date-time.dto';\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst Nylas = require('nylas');\n\nNylas.config({\n  clientId: process.env.NYLAS_CLIENT_ID,\n  clientSecret: process.env.NYLAS_CLIENT_SECRET,\n});\n\nconst nylas = Nylas.with(process.env.NYLAS_MAIN_ACCOUNT_ACCESS_TOKEN);\n\nconst kebabCase = (s: string) =>\n  s\n    .normalize('NFD') // split an accented letter in the base letter and the accent\n    .replace(/[\\u0300-\\u036f]/g, '') // remove all previously split accents\n    .replace(/([a-z])([A-Z])/g, '$1-$2') // split camelCase\n    .replace(/[\\s_]+/g, '-') // replace all spaces and low dash\n    .toLowerCase(); // convert to lower case\n@Injectable()\nexport class CalendarService {\n  private nylas;\n\n  constructor() {\n    Nylas.config({\n      clientId: process.env.NYLAS_CLIENT_ID,\n      clientSecret: process.env.NYLAS_CLIENT_SECRET,\n    });\n    this.nylas = Nylas.with(process.env.NYLAS_MAIN_ACCOUNT_ACCESS_TOKEN);\n  }\n  create(createCalendarDto: CreateCalendarDto) {\n    const calendar = new NylasCalendar(nylas, {\n      name: createCalendarDto.name,\n      description: createCalendarDto.description,\n      location: 'En línea',\n      timezone: 'America/Monterrey',\n      metadata: {\n        keyname: kebabCase(createCalendarDto.name),\n      },\n    });\n\n    return calendar.save();\n  }\n\n  getTimezoneList(): string[] {\n    return DateTimeDto.getTimeZoneList();\n  }\n\n  findAll() {\n    return nylas.calendars.list();\n  }\n\n  findOne(id: string) {\n    return nylas.calendars.find(id);\n  }\n\n  update(id: string, updateCalendarDto: UpdateCalendarDto) {\n    return nylas.calendars.find(id).then((calendar: NylasCalendar) => {\n      calendar.name = updateCalendarDto.name;\n      calendar.description = updateCalendarDto.description;\n      calendar.metadata = {\n        keyname: kebabCase(updateCalendarDto.name),\n      };\n      return calendar.save();\n    });\n  }\n\n  remove(id: string) {\n    return nylas.calendars.delete(id);\n  }\n\n  async getFreeBusy(\n    startTime: number,\n    endTime: number,\n    emails: string[],\n  ): Promise {\n    return await this.nylas.calendars.freeBusy({\n      startTime: startTime,\n      endTime: endTime,\n      emails: emails,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAvailabilityDto.html":{"url":"classes/CreateAvailabilityDto.html","title":"class - CreateAvailabilityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAvailabilityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/availability/dto/create-availability.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateAvailabilityDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCalendarDto.html":{"url":"classes/CreateCalendarDto.html","title":"class - CreateCalendarDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCalendarDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/calendar/dto/create-calendar.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/calendar/dto/create-calendar.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/calendar/dto/create-calendar.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  //IsNumber,\n  //IsPositive,\n  IsString,\n  //Min,\n  //ValidateIf,\n} from 'class-validator';\nexport class CreateCalendarDto {\n  @IsString()\n  @ApiProperty({\n    type: 'string',\n  })\n  name: string;\n\n  @IsString()\n  @ApiProperty({\n    type: 'string',\n  })\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMeetingRequestDto.html":{"url":"classes/CreateMeetingRequestDto.html","title":"class - CreateMeetingRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMeetingRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/meeting/dto/create-booking-request.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                timestamp\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        timestamp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The timestamp of the meeting', example: 1629462063})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/meeting/dto/create-booking-request.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"tutoring\" | \"consultancy\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The type of meeting', example: 'tutoring', enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/meeting/dto/create-booking-request.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nclass CreateMeetingRequestDto {\n  @ApiProperty({\n    description: 'The timestamp of the meeting',\n    example: 1629462063,\n  })\n  timestamp: number;\n\n  @ApiProperty({\n    description: 'The type of meeting',\n    example: 'tutoring',\n    enum: ['tutoring', 'consultancy'],\n  })\n  type: 'tutoring' | 'consultancy';\n}\n\nexport default CreateMeetingRequestDto;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMeetingResultDto.html":{"url":"classes/CreateMeetingResultDto.html","title":"class - CreateMeetingResultDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMeetingResultDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/meeting/dto/create-meeting-result.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _links\n                            \n                            \n                                available_features\n                            \n                            \n                                created_at\n                            \n                            \n                                display_name\n                            \n                            \n                                expire_after_use\n                            \n                            \n                                expires_at\n                            \n                            \n                                id\n                            \n                            \n                                initial_join_options\n                            \n                            \n                                is_available\n                            \n                            \n                                join_approval_level\n                            \n                            \n                                meeting_code\n                            \n                            \n                                metadata\n                            \n                            \n                                recording_options\n                            \n                            \n                                theme_id\n                            \n                            \n                                type\n                            \n                            \n                                ui_settings\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _links\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/meeting/dto/create-meeting-result.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        available_features\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/meeting/dto/create-meeting-result.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/meeting/dto/create-meeting-result.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        display_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/meeting/dto/create-meeting-result.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expire_after_use\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/meeting/dto/create-meeting-result.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expires_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/meeting/dto/create-meeting-result.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/meeting/dto/create-meeting-result.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initial_join_options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/meeting/dto/create-meeting-result.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        is_available\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/meeting/dto/create-meeting-result.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        join_approval_level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/meeting/dto/create-meeting-result.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meeting_code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/meeting/dto/create-meeting-result.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/meeting/dto/create-meeting-result.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recording_options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/meeting/dto/create-meeting-result.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        theme_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/meeting/dto/create-meeting-result.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/meeting/dto/create-meeting-result.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ui_settings\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/meeting/dto/create-meeting-result.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateMeetingResultDto {\n  id: string;\n  display_name: string;\n  metadata: any;\n  type: string;\n  expires_at: string;\n  recording_options: {\n    auto_record: boolean;\n    record_only_owner: boolean;\n  };\n  meeting_code: string;\n  _links: {\n    host_url: {\n      href: string;\n    };\n    guest_url: {\n      href: string;\n    };\n  };\n  created_at: string;\n  is_available: boolean;\n  expire_after_use: boolean;\n  theme_id: any;\n  initial_join_options: {\n    microphone_state: string;\n  };\n  join_approval_level: string;\n  ui_settings: {\n    language: string;\n  };\n  available_features: {\n    is_recording_available: boolean;\n    is_chat_available: boolean;\n    is_whiteboard_available: boolean;\n    is_locale_switcher_available: boolean;\n    is_captions_available: boolean;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePaymentDto.html":{"url":"classes/CreatePaymentDto.html","title":"class - CreatePaymentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePaymentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment/dto/create-payment.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                secret\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        secret\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/create-payment.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreatePaymentDto {\n  secret: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSessionRequestDto.html":{"url":"classes/CreateSessionRequestDto.html","title":"class - CreateSessionRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSessionRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/session/dto/create-session-request.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                duration\n                            \n                            \n                                timestamp\n                            \n                            \n                                    Optional\n                                timezone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/session/dto/create-session-request.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timestamp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/session/dto/create-session-request.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        timezone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/session/dto/create-session-request.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateSessionRequestDto {\n  timestamp: number;\n  duration: number; // milliseconds\n  timezone?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DateTimeDto.html":{"url":"classes/DateTimeDto.html","title":"class - DateTimeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DateTimeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/date-time/dto/date-time.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dayOfWeek\n                            \n                            \n                                offset\n                            \n                            \n                                strDate\n                            \n                            \n                                strTime\n                            \n                            \n                                timestamp\n                            \n                            \n                                timezone\n                            \n                            \n                                    Static\n                                timezoneOffsetMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getTimeZoneList\n                            \n                            \n                                    Static\n                                getTimezoneOffset\n                            \n                            \n                                    Static\n                                prependZero\n                            \n                            \n                                    Static\n                                timestampToDateTime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(timestamp: number | undefined)\n                    \n                \n                        \n                            \n                                Defined in src/date-time/dto/date-time.dto.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timestamp\n                                                  \n                                                        \n                                                                        number | undefined\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dayOfWeek\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/date-time/dto/date-time.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        offset\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/date-time/dto/date-time.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        strDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/date-time/dto/date-time.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        strTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/date-time/dto/date-time.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timestamp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/date-time/dto/date-time.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timezone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/date-time/dto/date-time.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        timezoneOffsetMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    'America/Bahia_Banderas': -6, // Update the offset as needed\n    'America/Cancun': -5,\n    'America/Chihuahua': -6,\n    'America/Ciudad_Juarez': -6,\n    'America/Ensenada': -7,\n    'America/Hermosillo': -7,\n    'America/Matamoros': -5,\n    'America/Mazatlan': -6,\n    'America/Merida': -6,\n    'America/Mexico_City': -6,\n    'America/Monterrey': -6,\n    'America/Ojinaga': -6,\n    'America/Santa_Isabel': -8,\n    'America/Tijuana': -7,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/date-time/dto/date-time.dto.ts:45\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getTimeZoneList\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTimeZoneList()\n                \n            \n\n\n            \n                \n                    Defined in src/date-time/dto/date-time.dto.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getTimezoneOffset\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTimezoneOffset(timezone: string)\n                \n            \n\n\n            \n                \n                    Defined in src/date-time/dto/date-time.dto.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    timezone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        prependZero\n                        \n                    \n                \n            \n            \n                \n                    \n                    prependZero(time)\n                \n            \n\n\n            \n                \n                    Defined in src/date-time/dto/date-time.dto.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        timestampToDateTime\n                        \n                    \n                \n            \n            \n                \n                    \n                    timestampToDateTime(timestamp: number, timezone: string)\n                \n            \n\n\n            \n                \n                    Defined in src/date-time/dto/date-time.dto.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    timestamp\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    timezone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'America/Monterrey'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DateTimeDto\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class DateTimeDto {\n  constructor(timestamp: number | undefined) {\n    this.timestamp = timestamp ? timestamp : new Date().getTime();\n  }\n  strTime: string;\n\n  static timestampToDateTime(\n    timestamp: number,\n    timezone = 'America/Monterrey',\n  ): DateTimeDto {\n    const date = new Date(timestamp);\n    const offset = DateTimeDto.timezoneOffsetMap[timezone];\n    const tzDifference = offset * 60 + date.getTimezoneOffset();\n    const d = new Date(date.getTime() + tzDifference * 60 * 1000),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n    const dateTime = new DateTimeDto(timestamp);\n    dateTime.strDate = `${year}-${this.prependZero(month)}-${this.prependZero(\n      day,\n    )}`;\n    dateTime.strTime = d.toLocaleTimeString('en-US');\n    dateTime.offset = offset;\n    dateTime.timezone = timezone;\n    dateTime.dayOfWeek = d\n      .toLocaleDateString('en-US', { weekday: 'long' })\n      .toLowerCase();\n    return dateTime;\n  }\n\n  static getTimezoneOffset(timezone: string): number {\n    return DateTimeDto.timezoneOffsetMap[timezone];\n  }\n\n  static getTimeZoneList(): string[] {\n    return Object.keys(DateTimeDto.timezoneOffsetMap);\n  }\n\n  strDate: string;\n  offset: number;\n  timezone: string;\n  timestamp: number;\n  dayOfWeek: string;\n\n  static timezoneOffsetMap = {\n    'America/Bahia_Banderas': -6, // Update the offset as needed\n    'America/Cancun': -5,\n    'America/Chihuahua': -6,\n    'America/Ciudad_Juarez': -6,\n    'America/Ensenada': -7,\n    'America/Hermosillo': -7,\n    'America/Matamoros': -5,\n    'America/Mazatlan': -6,\n    'America/Merida': -6,\n    'America/Mexico_City': -6,\n    'America/Monterrey': -6,\n    'America/Ojinaga': -6,\n    'America/Santa_Isabel': -8,\n    'America/Tijuana': -7,\n  };\n\n  static prependZero(time) {\n    return time \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DateTimeModule.html":{"url":"modules/DateTimeModule.html","title":"module - DateTimeModule","body":"\n                   \n\n\n\n\n    Modules\n    DateTimeModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/date-time/date-time.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\n@Module({\n  controllers: [],\n  providers: [],\n})\nexport class DateTimeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EncryptionModule.html":{"url":"modules/EncryptionModule.html","title":"module - EncryptionModule","body":"\n                   \n\n\n\n\n    Modules\n    EncryptionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EncryptionModule\n\n\n\ncluster_EncryptionModule_exports\n\n\n\ncluster_EncryptionModule_providers\n\n\n\n\nEncryptionService \n\nEncryptionService \n\n\n\nEncryptionModule\n\nEncryptionModule\n\nEncryptionService  -->\n\nEncryptionModule->EncryptionService \n\n\n\n\n\nEncryptionService\n\nEncryptionService\n\nEncryptionModule -->\n\nEncryptionService->EncryptionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/encryption/encryption.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EncryptionService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EncryptionService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { EncryptionService } from './encryption.service';\n\n@Module({\n  providers: [EncryptionService, ConfigService],\n  exports: [EncryptionService],\n})\nexport class EncryptionModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EncryptionService.html":{"url":"injectables/EncryptionService.html","title":"injectable - EncryptionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EncryptionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/encryption/encryption.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                compare\n                            \n                            \n                                    Async\n                                hash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/encryption/encryption.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        compare\n                        \n                    \n                \n            \n            \n                \n                    \n                    compare(plain: string, encrypted: string)\n                \n            \n\n\n            \n                \n                    Defined in src/encryption/encryption.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    plain\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    encrypted\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        hash\n                        \n                    \n                \n            \n            \n                \n                    \n                    hash(plain: string)\n                \n            \n\n\n            \n                \n                    Defined in src/encryption/encryption.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    plain\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { compare, hash } from 'bcrypt';\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class EncryptionService {\n  constructor(private readonly config: ConfigService) {}\n\n  async hash(plain: string): Promise {\n    return hash(plain, this.config.get('HASH_ROUNDS', 10));\n  }\n\n  async compare(plain: string, encrypted: string): Promise {\n    return compare(plain, encrypted);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FreeSlotController.html":{"url":"controllers/FreeSlotController.html","title":"controller - FreeSlotController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FreeSlotController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/free-slot/free-slot.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                free-slot\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getFreeSlots\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        Async\n                        getFreeSlots\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFreeSlots(guestTimezone: string, sessionInfo)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get()@ApiQuery({name: 'guestTimezone', required: false, type: String, description: 'The timezone of the guest. Defaults to America/Monterrey.'})@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/free-slot/free-slot.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    guestTimezone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'America/Monterrey'\n                                    \n\n                                \n                                \n                                    sessionInfo\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Query, UseGuards } from '@nestjs/common';\nimport { FreeSlotService } from './free-slot.service';\nimport { ApiBearerAuth, ApiQuery, ApiTags } from '@nestjs/swagger';\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\nimport { SessionInfo } from '../session/decorators/session-info.decorator';\nimport { SessionService } from '../session/session.service';\nimport { UpdateSessionDto } from '../session/dto/update-session-request.dto';\n@ApiTags('Free Time Slots')\n@Controller('free-slot')\nexport class FreeSlotController {\n  constructor(\n    private readonly freeSlotService: FreeSlotService,\n    private readonly sessionService: SessionService,\n  ) {}\n  @UseGuards(JwtAuthGuard)\n  @Get()\n  @ApiQuery({\n    name: 'guestTimezone',\n    required: false,\n    type: String,\n    description: 'The timezone of the guest. Defaults to America/Monterrey.',\n  }) // Add a Swagger query parameter\n  @ApiBearerAuth()\n  async getFreeSlots(\n    @Query('guestTimezone') guestTimezone = 'America/Monterrey',\n    @SessionInfo() sessionInfo,\n  ) {\n    const updated = new UpdateSessionDto();\n    updated.timezone = guestTimezone;\n    await this.sessionService.update(sessionInfo.id, updated);\n    return this.freeSlotService.getFreeSlots(guestTimezone);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FreeSlotDto.html":{"url":"classes/FreeSlotDto.html","title":"class - FreeSlotDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FreeSlotDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/availability/dto/free-slot.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                endDateTime\n                            \n                            \n                                endTime\n                            \n                            \n                                startDateTime\n                            \n                            \n                                startTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        endDateTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/availability/dto/free-slot.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/availability/dto/free-slot.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startDateTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/availability/dto/free-slot.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/availability/dto/free-slot.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export default class FreeSlotDto {\n  startTime: number;\n  endTime: number;\n\n  startDateTime: Date;\n  endDateTime: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FreeSlotModule.html":{"url":"modules/FreeSlotModule.html","title":"module - FreeSlotModule","body":"\n                   \n\n\n\n\n    Modules\n    FreeSlotModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FreeSlotModule\n\n\n\ncluster_FreeSlotModule_imports\n\n\n\ncluster_FreeSlotModule_providers\n\n\n\n\nSessionModule\n\nSessionModule\n\n\n\nFreeSlotModule\n\nFreeSlotModule\n\nFreeSlotModule -->\n\nSessionModule->FreeSlotModule\n\n\n\n\n\nAvailabilityService\n\nAvailabilityService\n\nFreeSlotModule -->\n\nAvailabilityService->FreeSlotModule\n\n\n\n\n\nCalendarService\n\nCalendarService\n\nFreeSlotModule -->\n\nCalendarService->FreeSlotModule\n\n\n\n\n\nFreeSlotService\n\nFreeSlotService\n\nFreeSlotModule -->\n\nFreeSlotService->FreeSlotModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/free-slot/free-slot.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AvailabilityService\n                        \n                        \n                            CalendarService\n                        \n                        \n                            FreeSlotService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FreeSlotController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SessionModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FreeSlotService } from './free-slot.service';\nimport { FreeSlotController } from './free-slot.controller';\nimport { AvailabilityService } from '../availability/availability.service';\nimport { CalendarService } from '../calendar/calendar.service';\nimport { SessionModule } from '../session/session.module';\n\n@Module({\n  imports: [SessionModule],\n  controllers: [FreeSlotController],\n  providers: [FreeSlotService, AvailabilityService, CalendarService],\n})\nexport class FreeSlotModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FreeSlotService.html":{"url":"injectables/FreeSlotService.html","title":"injectable - FreeSlotService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FreeSlotService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/free-slot/free-slot.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getFreeSlots\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(availabilityService: AvailabilityService, calendarService: CalendarService)\n                    \n                \n                        \n                            \n                                Defined in src/free-slot/free-slot.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        availabilityService\n                                                  \n                                                        \n                                                                        AvailabilityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        calendarService\n                                                  \n                                                        \n                                                                        CalendarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getFreeSlots\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFreeSlots(guestTimezone: string)\n                \n            \n\n\n            \n                \n                    Defined in src/free-slot/free-slot.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    guestTimezone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'America/Monterrey'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AvailabilityService } from '../availability/availability.service';\nimport { NylasFreeBusy } from '../calendar/entities/nylas-free-busy.entity';\nimport { CalendarService } from '../calendar/calendar.service';\nimport BusySlotDto from './dto/busy-slot.dto';\nimport { GuestFreeSlotDto } from '../availability/dto/guest-free-slot.dto';\nimport FreeSlotDto from '../availability/dto/free-slot.dto';\nimport { plainToClass } from 'class-transformer';\nimport { WorkSlotDto } from '../availability/dto/work-slot.dto';\nimport { DateTimeDto } from '../date-time/dto/date-time.dto';\n\n@Injectable()\nexport class FreeSlotService {\n  constructor(\n    private readonly availabilityService: AvailabilityService,\n    private readonly calendarService: CalendarService,\n  ) {}\n\n  async getFreeSlots(guestTimezone = 'America/Monterrey') {\n    const workSlotsResult = this.availabilityService.findWorkSlots();\n\n    const workSlots = workSlotsResult.workSlots;\n\n    const startTime = Math.floor(Date.now() / 1000);\n    const endTime = startTime + 60 * 60 * 24 * 5; // add 5 days in seconds\n    const mainEmailAccount = process.env.NYLAS_MAIN_ACCOUNT_EMAIL;\n\n    const busySlots: BusySlotDto[] = await this.calendarService\n      .getFreeBusy(startTime, endTime, [mainEmailAccount])\n      .then((entries: NylasFreeBusy[]) => {\n        return entries.flatMap((entry) => {\n          return entry.timeSlots.map((slot) =>\n            plainToClass(BusySlotDto, {\n              startTime: slot.startTime,\n              endTime: slot.endTime,\n            }),\n          );\n        });\n      });\n\n    const freeSlots: FreeSlotDto[] =\n      busySlots.length === 0\n        ? workSlots\n        : workSlots.filter((workSlot: WorkSlotDto) => {\n            // return true if the work slot overlaps with any busy slot\n            return (\n              workSlot.startTime  {\n                return (\n                  (workSlot.startTime > busySlot.startTime &&\n                    workSlot.startTime  busySlot.startTime &&\n                    workSlot.endTime  {\n        const guestSlot = new GuestFreeSlotDto();\n        guestSlot.meetingStartTime = slot.startTime;\n        const dateTime = DateTimeDto.timestampToDateTime(\n          slot.startTime * 1000,\n          guestTimezone,\n        );\n\n        guestSlot.guestMeetingDate = dateTime.strDate;\n        guestSlot.guestMeetingStartTime = dateTime.strTime;\n        guestSlot.meetingStartTime = slot.startTime;\n        guestSlot.guestMeetingDay = dateTime.dayOfWeek;\n\n        return guestSlot;\n      },\n    );\n\n    return {\n      guestTimezone: guestTimezone,\n      guestTimezoneOffset: DateTimeDto.getTimezoneOffset(guestTimezone),\n      freeSlots: guestFreeSlots,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GuestFreeSlotDto.html":{"url":"classes/GuestFreeSlotDto.html","title":"class - GuestFreeSlotDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GuestFreeSlotDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/availability/dto/guest-free-slot.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                guestMeetingDate\n                            \n                            \n                                    \n                                    \n                                guestMeetingDay\n                            \n                            \n                                    \n                                guestMeetingStartTime\n                            \n                            \n                                    \n                                meetingStartTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        guestMeetingDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/availability/dto/guest-free-slot.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        guestMeetingDay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsIn(['lunes', 'martes', 'miércoles', 'jueves', 'viernes', 'sábado', 'domingo'])\n                        \n                    \n                \n                    \n                        \n                                Defined in src/availability/dto/guest-free-slot.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        guestMeetingStartTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/availability/dto/guest-free-slot.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        meetingStartTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/availability/dto/guest-free-slot.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsIn, IsNumber, IsString } from 'class-validator';\n\nexport class GuestFreeSlotDto {\n  @IsString()\n  @IsIn([\n    'lunes',\n    'martes',\n    'miércoles',\n    'jueves',\n    'viernes',\n    'sábado',\n    'domingo',\n  ])\n  guestMeetingDay: string;\n\n  @IsString()\n  guestMeetingDate: string;\n\n  @IsString()\n  guestMeetingStartTime: string;\n\n  @IsNumber()\n  meetingStartTime: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HoomanWorkSlotDto.html":{"url":"classes/HoomanWorkSlotDto.html","title":"class - HoomanWorkSlotDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HoomanWorkSlotDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/availability/dto/work-slot.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                day\n                            \n                            \n                                endTime\n                            \n                            \n                                startTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        day\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/availability/dto/work-slot.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/availability/dto/work-slot.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/availability/dto/work-slot.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class WorkSlotDto {\n  startTime: number;\n  endTime: number;\n}\n\nexport class HoomanWorkSlotDto {\n  day: string;\n  startTime: string;\n  endTime: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISession.html":{"url":"interfaces/ISession.html","title":"interface - ISession","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISession\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/session/entities/session.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            timestamp\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            timezone\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timezone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timezone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as mongoose from 'mongoose';\n\nexport interface ISession extends mongoose.Document {\n  _id: string;\n  timestamp: number;\n  duration: number;\n  timezone?: string;\n  // authenticityToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/jwt-auth.guard.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, session, info)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/jwt-auth.guard.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    session\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  canActivate(context: ExecutionContext) {\n    // Add your custom authentication logic here\n    // for example, call super.logIn(request) to establish a session.\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, session, info) {\n    // You can throw an exception based on either \"info\" or \"err\" arguments\n    if (err || !session) {\n      throw err || new UnauthorizedException();\n    }\n    if (session.timestamp + session.duration \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, sessionService: SessionService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sessionService\n                                                  \n                                                        \n                                                                        SessionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/jwt.strategy.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { SessionService } from '../../session/session.service';\nimport { Session } from '../../session/entities/session.schema';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly sessionService: SessionService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('JWT_SECRET'),\n    });\n  }\n\n  async validate(payload: any): Promise {\n    const session = await this.sessionService.findOne(payload.id);\n    if (session) {\n      return session;\n    }\n    return null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Meeting.html":{"url":"interfaces/Meeting.html","title":"interface - Meeting","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Meeting\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/meeting/entities/meeting.schema.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            timestamp\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"tutoring\" | \"consultancy\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"tutoring\" | \"consultancy\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as mongoose from 'mongoose';\n\nexport const MeetingSchema = new mongoose.Schema({\n  timestamp: {\n    type: Number,\n    required: true,\n    description: 'The timestamp of the meeting',\n  },\n  type: {\n    type: String,\n    required: true,\n    enum: ['tutoring', 'consultancy'],\n    description: 'The type of meeting',\n  },\n});\n\nexport interface Meeting extends mongoose.Document {\n  _id: string;\n  timestamp: number;\n  type: 'tutoring' | 'consultancy';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MeetingController.html":{"url":"controllers/MeetingController.html","title":"controller - MeetingController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MeetingController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/meeting/meeting.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                meeting\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                requestBooking\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        requestBooking\n                        \n                    \n                \n            \n            \n                \n                    \n                    requestBooking(bookRequest: CreateMeetingRequestDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Post('book')@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/meeting/meeting.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bookRequest\n                                    \n                                                CreateMeetingRequestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        // calendar.controller.ts\n\nimport { Controller, Post, UseGuards } from '@nestjs/common';\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { MeetingService } from './meeting.service';\nimport CreateMeetingRequestDto from './dto/create-meeting-request.dto';\nimport BookRequestResponse from './dto/book-request.response';\n\n@ApiTags('Meeting')\n@Controller('meeting') // Set the base path for the controller\nexport class MeetingController {\n  constructor(private readonly meetingService: MeetingService) {}\n\n  @UseGuards(JwtAuthGuard)\n  @Post('book') // Set the path for the controller method\n  @ApiBearerAuth()\n  requestBooking(\n    bookRequest: CreateMeetingRequestDto,\n  ): Promise {\n    return this.meetingService.requestBooking(bookRequest);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MeetingModule.html":{"url":"modules/MeetingModule.html","title":"module - MeetingModule","body":"\n                   \n\n\n\n\n    Modules\n    MeetingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MeetingModule\n\n\n\ncluster_MeetingModule_imports\n\n\n\ncluster_MeetingModule_providers\n\n\n\n\nFreeSlotModule\n\nFreeSlotModule\n\n\n\nMeetingModule\n\nMeetingModule\n\nMeetingModule -->\n\nFreeSlotModule->MeetingModule\n\n\n\n\n\nFreeSlotService\n\nFreeSlotService\n\nMeetingModule -->\n\nFreeSlotService->MeetingModule\n\n\n\n\n\nMeetingService\n\nMeetingService\n\nMeetingModule -->\n\nMeetingService->MeetingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/meeting/meeting.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FreeSlotService\n                        \n                        \n                            MeetingService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FreeSlotModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MeetingService } from './meeting.service';\nimport { HttpModule } from '@nestjs/axios';\nimport { FreeSlotService } from '../free-slot/free-slot.service';\nimport { FreeSlotModule } from '../free-slot/free-slot.module';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { MeetingSchema } from './entities/meeting.schema';\n\n@Module({\n  imports: [\n    HttpModule,\n    FreeSlotModule,\n    MongooseModule.forFeature([{ name: 'meeting', schema: MeetingSchema }]),\n  ],\n  exports: [HttpModule],\n  controllers: [],\n  providers: [MeetingService, FreeSlotService],\n})\nexport class MeetingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MeetingService.html":{"url":"injectables/MeetingService.html","title":"injectable - MeetingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MeetingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/meeting/meeting.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createMeeting\n                            \n                            \n                                    Async\n                                requestBooking\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, freeSlotService: FreeSlotService, meetingModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/meeting/meeting.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        freeSlotService\n                                                  \n                                                        \n                                                                        FreeSlotService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        meetingModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createMeeting\n                        \n                    \n                \n            \n            \n                \n                    \n                    createMeeting()\n                \n            \n\n\n            \n                \n                    Defined in src/meeting/meeting.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        requestBooking\n                        \n                    \n                \n            \n            \n                \n                    \n                    requestBooking(bookRequest: CreateMeetingRequestDto)\n                \n            \n\n\n            \n                \n                    Defined in src/meeting/meeting.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bookRequest\n                                    \n                                                CreateMeetingRequestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateMeetingResultDto } from './dto/create-meeting-result.dto';\nimport { HttpService } from '@nestjs/axios';\nimport { firstValueFrom, map, tap } from 'rxjs';\nimport { plainToClass } from 'class-transformer';\nimport 'dotenv/config';\nimport * as path from 'path';\nimport { FreeSlotService } from '../free-slot/free-slot.service';\nimport CreateMeetingRequestDto from './dto/create-meeting-request.dto';\nimport { Meeting } from './entities/meeting.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport BookRequestResponse from \"./dto/book-request.response\";\n\n@Injectable()\nexport class MeetingService {\n  constructor(\n    private readonly httpService: HttpService,\n    private readonly freeSlotService: FreeSlotService,\n    @InjectModel('meeting') private readonly meetingModel: Model,\n  ) {}\n\n  async requestBooking(\n    bookRequest: CreateMeetingRequestDto,\n  ): Promise {\n    const freeSlotsData = await this.freeSlotService.getFreeSlots();\n    const isSlotFree = freeSlotsData.freeSlots.some(\n      (slot) => slot.meetingStartTime === bookRequest.timestamp,\n    );\n    if (!isSlotFree) {\n      throw new Error('Slot is not free');\n    }\n    const meeting = new this.meetingModel(bookRequest);\n    const bookingResponse: BookRequestResponse = new BookRequestResponse();\n    bookingResponse.meeting = await meeting.save();\n    // await meeting.save();\n    // return this.createMeeting();\n    return bookingResponse;\n    // return ['Meeting booked'];\n  }\n\n  async createMeeting(): Promise {\n    const BASE_URL = process.env.VONAGE_API_BASE_URL;\n    const headersRequest = {\n      Authorization: `Bearer ${process.env.VONAGE_JWT_365_DAYS}`,\n    };\n    return firstValueFrom(\n      this.httpService\n        .post(\n          path.join(BASE_URL, 'meetings/rooms'),\n          { display_name: 'Aula virtual de aprendecoding.com' },\n          { headers: headersRequest },\n        )\n        .pipe(\n          tap((resp) => console.log(resp)),\n          map((resp) => plainToClass(CreateMeetingResultDto, resp.data)),\n          tap((data) => console.log(data)),\n        ),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NotificationModule.html":{"url":"modules/NotificationModule.html","title":"module - NotificationModule","body":"\n                   \n\n\n\n\n    Modules\n    NotificationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NotificationModule\n\n\n\ncluster_NotificationModule_exports\n\n\n\ncluster_NotificationModule_providers\n\n\n\ncluster_NotificationModule_imports\n\n\n\n\nMeetingModule\n\nMeetingModule\n\n\n\nNotificationModule\n\nNotificationModule\n\nNotificationModule -->\n\nMeetingModule->NotificationModule\n\n\n\n\n\nNotificationService \n\nNotificationService \n\nNotificationService  -->\n\nNotificationModule->NotificationService \n\n\n\n\n\nMeetingService\n\nMeetingService\n\nNotificationModule -->\n\nMeetingService->NotificationModule\n\n\n\n\n\nNotificationService\n\nNotificationService\n\nNotificationModule -->\n\nNotificationService->NotificationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/notification/notification.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MeetingService\n                        \n                        \n                            NotificationService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MeetingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NotificationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { NotificationService } from './notification.service';\nimport { MeetingModule } from 'src/meeting/meeting.module';\nimport { MeetingService } from 'src/meeting/meeting.service';\n// import { FreeSlotModule } from \"../free-slot/free-slot.module\";\n// import { FreeSlotService } from \"../free-slot/free-slot.service\";\n\n@Module({\n  imports: [MeetingModule],\n  controllers: [],\n  providers: [NotificationService, MeetingService],\n  exports: [NotificationService],\n})\nexport class NotificationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notification/notification.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendNotification\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(meetingService: MeetingService)\n                    \n                \n                        \n                            \n                                Defined in src/notification/notification.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        meetingService\n                                                  \n                                                        \n                                                                        MeetingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendNotification\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendNotification(notificationRequest: SendNotificationRequestDto, meeting: Meeting)\n                \n            \n\n\n            \n                \n                    Defined in src/notification/notification.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    notificationRequest\n                                    \n                                                SendNotificationRequestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    meeting\n                                    \n                                                Meeting\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { SendNotificationRequestDto } from './dto/send-notification-request.dto';\nimport 'dotenv/config';\nimport { MeetingService } from 'src/meeting/meeting.service';\nimport { Meeting } from \"../meeting/entities/meeting.schema\";\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst Nylas = require('nylas');\n\nNylas.config({\n  clientId: process.env.NYLAS_CLIENT_ID,\n  clientSecret: process.env.NYLAS_CLIENT_SECRET,\n});\n\nconst nylas = Nylas.with(process.env.NYLAS_MAIN_ACCOUNT_ACCESS_TOKEN);\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst { default: Draft } = require('nylas/lib/models/draft');\n\n@Injectable()\nexport class NotificationService {\n  constructor(private readonly meetingService: MeetingService) {}\n\n  async sendNotification(notificationRequest: SendNotificationRequestDto, meeting: Meeting) {\n    // const meeting = await this.meetingService.createMeeting();\n    const draft = new Draft(nylas, {\n      subject: `¡Hola, ${notificationRequest.guestName}! Gracias por agendar`,\n      body: `\n        Hola, ${notificationRequest.guestName}\n        \\n\n        \\n Nos da mucho gusto saludarte. \n        \\n\n        \\n Te damos una cálido bienvenida de parte de aprendecoding.com :) \n        \\n Has agendado una sesión de asesoría para el XX de XX del XXXX a las XX:XX pm. \n        \\n Más abajo te compartimos el link de la reunión. \n        \\n Te esperamos! \n        \\n\n        \\n Link de videollamada: ${meeting._links.guest_url.href}\n        \\n\n        \\n Atentamente, \n        \\n aprendecoding.com`,\n      to: [\n        {\n          name: notificationRequest.guestName,\n          email: notificationRequest.email,\n        },\n      ],\n    });\n    return draft.send();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NylasFreeBusy.html":{"url":"classes/NylasFreeBusy.html","title":"class - NylasFreeBusy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NylasFreeBusy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/calendar/entities/nylas-free-busy.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                object\n                            \n                            \n                                    \n                                    \n                                timeSlots\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/calendar/entities/nylas-free-busy.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/calendar/entities/nylas-free-busy.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        timeSlots\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TimeSlot[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/calendar/entities/nylas-free-busy.entity.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNumber, IsString, ValidateNested } from 'class-validator';\nimport { Type } from 'class-transformer';\n\nclass TimeSlot {\n  @IsString()\n  object: string;\n\n  @IsString()\n  status: string;\n\n  @IsNumber()\n  startTime: number;\n\n  @IsNumber()\n  endTime: number;\n}\n\nexport class NylasFreeBusy {\n  @IsString()\n  object: string;\n\n  @IsEmail()\n  email: string;\n\n  @ValidateNested({ each: true })\n  @Type(() => TimeSlot)\n  timeSlots: TimeSlot[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Payment.html":{"url":"classes/Payment.html","title":"class - Payment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Payment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment/entities/payment.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Payment {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PaymentController.html":{"url":"controllers/PaymentController.html","title":"controller - PaymentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PaymentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment/payment.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                payment\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                paymentSuccess\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        paymentSuccess\n                        \n                    \n                \n            \n            \n                \n                    \n                    paymentSuccess(request: RawBodyRequest, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/success')\n                \n            \n\n            \n                \n                    Defined in src/payment/payment.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            RawBodyRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  Req,\n  Res,\n  RawBodyRequest,\n  Response,\n} from '@nestjs/common';\nimport { PaymentService } from './payment.service';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Payment')\n@Controller('payment')\nexport class PaymentController {\n  constructor(private readonly paymentService: PaymentService) {}\n\n  @Post('/success')\n  paymentSuccess(\n    @Req() request: RawBodyRequest,\n    @Res() response: Response,\n  ) {\n    const stripeSignature = request.headers['stripe-signature'];\n    const endpointSecret =\n      process.env.STRIPE_PAYMENT_SUCCESS_WEBHOOK_SECRET_KEY;\n\n    return this.paymentService.paymentSuccess(\n      request,\n      stripeSignature,\n      endpointSecret,\n      response,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaymentModule.html":{"url":"modules/PaymentModule.html","title":"module - PaymentModule","body":"\n                   \n\n\n\n\n    Modules\n    PaymentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PaymentModule\n\n\n\ncluster_PaymentModule_providers\n\n\n\ncluster_PaymentModule_imports\n\n\n\n\nNotificationModule\n\nNotificationModule\n\n\n\nPaymentModule\n\nPaymentModule\n\nPaymentModule -->\n\nNotificationModule->PaymentModule\n\n\n\n\n\nPaymentService\n\nPaymentService\n\nPaymentModule -->\n\nPaymentService->PaymentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/payment/payment.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PaymentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PaymentController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NotificationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PaymentService } from './payment.service';\nimport { PaymentController } from './payment.controller';\nimport { NotificationModule } from 'src/notification/notification.module';\n@Module({\n  imports: [NotificationModule],\n  controllers: [PaymentController],\n  providers: [PaymentService],\n})\nexport class PaymentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaymentService.html":{"url":"injectables/PaymentService.html","title":"injectable - PaymentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaymentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment/payment.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                paymentSuccess\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(notificationService: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/payment/payment.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        paymentSuccess\n                        \n                    \n                \n            \n            \n                \n                    \n                    paymentSuccess(request, stripeSignature, endpointSecret, response)\n                \n            \n\n\n            \n                \n                    Defined in src/payment/payment.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    stripeSignature\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    endpointSecret\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreatePaymentDto } from './dto/create-payment.dto';\nimport { UpdatePaymentDto } from './dto/update-payment.dto';\nimport Stripe from 'stripe';\nimport 'dotenv/config';\nimport { NotificationService } from 'src/notification/notification.service';\nimport { SendNotificationRequestDto } from 'src/notification/dto/send-notification-request.dto';\nimport { plainToClass } from 'class-transformer';\nimport { SessionCompletedDto } from './dto/session-completed.dto';\n\nconst stripe = new Stripe(process.env.STRIPE_SECRET_KEY, {\n  apiVersion: '2022-11-15',\n});\n\n@Injectable()\nexport class PaymentService {\n  constructor(private notificationService: NotificationService) {}\n\n  async paymentSuccess(request, stripeSignature, endpointSecret, response) {\n    let event;\n\n    try {\n      event = stripe.webhooks.constructEvent(\n        request.rawBody,\n        stripeSignature,\n        endpointSecret,\n      );\n    } catch (err) {\n      response.sendStatus(400).send(`Webhook Error: ${err.message}`);\n      return;\n    }\n\n    switch (event.type) {\n      case 'checkout.session.completed':\n        const sessionCompleted = plainToClass(\n          SessionCompletedDto,\n          event.data.object,\n        );\n        const customerEmail = sessionCompleted.customer_details.email;\n        const notificationRequest = new SendNotificationRequestDto();\n        notificationRequest.email = customerEmail;\n        notificationRequest.guestName = sessionCompleted.customer_details.name;\n        this.notificationService.sendNotification(notificationRequest);\n        break;\n\n      default:\n        console.log(`Unhandled event type ${event.type}`);\n    }\n\n    response.sendStatus(200);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterResponseDto.html":{"url":"classes/RegisterResponseDto.html","title":"class - RegisterResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/register-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                access_token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        access_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register-response.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class RegisterResponseDto {\n  @ApiProperty({\n    type: String,\n  })\n  @IsNotEmpty()\n  access_token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendNotificationRequestDto.html":{"url":"classes/SendNotificationRequestDto.html","title":"class - SendNotificationRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendNotificationRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notification/dto/send-notification-request.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                guestName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/notification/dto/send-notification-request.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        guestName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Aprendiz'\n                    \n                \n                    \n                        \n                                Defined in src/notification/dto/send-notification-request.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SendNotificationRequestDto {\n  email: string;\n  guestName: string = 'Aprendiz';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SessionCompletedDto.html":{"url":"classes/SessionCompletedDto.html","title":"class - SessionCompletedDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SessionCompletedDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment/dto/session-completed.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                after_expiration\n                            \n                            \n                                allow_promotion_codes\n                            \n                            \n                                amount_subtotal\n                            \n                            \n                                amount_total\n                            \n                            \n                                automatic_tax\n                            \n                            \n                                billing_address_collection\n                            \n                            \n                                cancel_url\n                            \n                            \n                                client_reference_id\n                            \n                            \n                                consent\n                            \n                            \n                                consent_collection\n                            \n                            \n                                created\n                            \n                            \n                                currency\n                            \n                            \n                                currency_conversion\n                            \n                            \n                                custom_fields\n                            \n                            \n                                custom_text\n                            \n                            \n                                customer\n                            \n                            \n                                customer_creation\n                            \n                            \n                                customer_details\n                            \n                            \n                                customer_email\n                            \n                            \n                                expires_at\n                            \n                            \n                                id\n                            \n                            \n                                invoice\n                            \n                            \n                                invoice_creation\n                            \n                            \n                                livemode\n                            \n                            \n                                locale\n                            \n                            \n                                metadata\n                            \n                            \n                                mode\n                            \n                            \n                                object\n                            \n                            \n                                payment_intent\n                            \n                            \n                                payment_link\n                            \n                            \n                                payment_method_collection\n                            \n                            \n                                payment_method_options\n                            \n                            \n                                payment_method_types\n                            \n                            \n                                payment_status\n                            \n                            \n                                phone_number_collection\n                            \n                            \n                                recovered_from\n                            \n                            \n                                setup_intent\n                            \n                            \n                                shipping_address_collection\n                            \n                            \n                                shipping_cost\n                            \n                            \n                                shipping_details\n                            \n                            \n                                shipping_options\n                            \n                            \n                                status\n                            \n                            \n                                submit_type\n                            \n                            \n                                subscription\n                            \n                            \n                                success_url\n                            \n                            \n                                total_details\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        after_expiration\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allow_promotion_codes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        amount_subtotal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        amount_total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        automatic_tax\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        billing_address_collection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cancel_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        client_reference_id\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        consent\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        consent_collection\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency_conversion\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        custom_fields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        custom_text\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customer\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customer_creation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customer_details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customer_email\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expires_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invoice\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invoice_creation\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        livemode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        locale\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        payment_intent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        payment_link\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        payment_method_collection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        payment_method_options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        payment_method_types\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        payment_status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone_number_collection\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recovered_from\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setup_intent\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shipping_address_collection\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shipping_cost\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shipping_details\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shipping_options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscription\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        success_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total_details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/payment/dto/session-completed.dto.ts:59\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SessionCompletedDto {\n  id: string;\n  object: string;\n  after_expiration: null;\n  allow_promotion_codes: boolean;\n  amount_subtotal: number;\n  amount_total: number;\n  automatic_tax: { enabled: boolean; status: null };\n  billing_address_collection: string;\n  cancel_url: string;\n  client_reference_id: null;\n  consent: null;\n  consent_collection: { promotions: string; terms_of_service: string };\n  created: number;\n  currency: string;\n  currency_conversion: null;\n  custom_fields: any[];\n  custom_text: { shipping_address: null; submit: null };\n  customer: null;\n  customer_creation: string;\n  customer_details: {\n    address: object;\n    email: string;\n    name: string;\n    phone: null;\n    tax_exempt: string;\n    tax_ids: any[];\n  };\n  customer_email: null;\n  expires_at: number;\n  invoice: null;\n  invoice_creation: { enabled: boolean; invoice_data: object };\n  livemode: boolean;\n  locale: string;\n  metadata: object;\n  mode: string;\n  payment_intent: string;\n  payment_link: string;\n  payment_method_collection: string;\n  payment_method_options: { card: object };\n  payment_method_types: string[];\n  payment_status: string;\n  phone_number_collection: { enabled: boolean };\n  recovered_from: null;\n  setup_intent: null;\n  shipping_address_collection: null;\n  shipping_cost: null;\n  shipping_details: null;\n  shipping_options: any[];\n  status: string;\n  submit_type: string;\n  subscription: null;\n  success_url: string;\n  total_details: {\n    amount_discount: number;\n    amount_shipping: number;\n    amount_tax: number;\n  };\n  url: null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SessionModule.html":{"url":"modules/SessionModule.html","title":"module - SessionModule","body":"\n                   \n\n\n\n\n    Modules\n    SessionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SessionModule\n\n\n\ncluster_SessionModule_imports\n\n\n\ncluster_SessionModule_exports\n\n\n\ncluster_SessionModule_providers\n\n\n\n\nEncryptionModule\n\nEncryptionModule\n\n\n\nSessionModule\n\nSessionModule\n\nSessionModule -->\n\nEncryptionModule->SessionModule\n\n\n\n\n\nSessionService \n\nSessionService \n\nSessionService  -->\n\nSessionModule->SessionService \n\n\n\n\n\nSessionService\n\nSessionService\n\nSessionModule -->\n\nSessionService->SessionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/session/session.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SessionService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            EncryptionModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SessionService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /**\n * The main session module of the application.\n * It includes dependencies such as MongooseModule and EncryptionModule.\n */\nimport { Module } from '@nestjs/common';\nimport { SessionService } from './session.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { SessionSchema } from './entities/session.schema';\nimport { EncryptionModule } from '../encryption/encryption.module';\n\n@Module({\n  imports: [\n    // Setting up Mongoose feature for session using its schema\n    MongooseModule.forFeature([{ name: 'session', schema: SessionSchema }]),\n    EncryptionModule,\n  ],\n  controllers: [],  // No controllers for this module\n  providers: [SessionService],  // Only the SessionService is provided here\n  exports: [SessionService],   // SessionService is also exported for external use\n})\n/**\n * SessionModule class that defines and configures the session module.\n */\nexport class SessionModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionService.html":{"url":"injectables/SessionService.html","title":"injectable - SessionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SessionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/session/session.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sessionModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/session/session.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sessionModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create()\n                \n            \n\n\n            \n                \n                    Defined in src/session/session.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/session/session.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateSessionDto: UpdateSessionRequestDto)\n                \n            \n\n\n            \n                \n                    Defined in src/session/session.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateSessionDto\n                                    \n                                                UpdateSessionRequestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateSessionRequestDto } from './dto/create-session-request.dto';\nimport { UpdateSessionRequestDto } from './dto/update-session-request.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { ISession } from './entities/session.interface';\n\n@Injectable()\nexport class SessionService {\n  constructor(\n    @InjectModel('session') private readonly sessionModel: Model,\n  ) {}\n  async create(): Promise {\n    const createSessionDto = new CreateSessionRequestDto();\n    createSessionDto.timestamp = Date.now();\n    createSessionDto.duration = 1000 * 60 * 60; // 1 hour in milliseconds\n\n    const newSession = new this.sessionModel(createSessionDto);\n    await newSession.save();\n\n    return newSession;\n  }\n\n  // findAll() {\n  //   return `This action returns all session`;\n  // }\n\n  findOne(id: number) {\n    return this.sessionModel.findById(id);\n  }\n\n  update(id: number, updateSessionDto: UpdateSessionRequestDto) {\n    return this.sessionModel.findByIdAndUpdate(id, updateSessionDto);\n  }\n\n  // remove(id: number) {\n  //   return `This action removes a #${id} session`;\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeSlot.html":{"url":"classes/TimeSlot.html","title":"class - TimeSlot","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeSlot\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/calendar/entities/nylas-free-busy.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                endTime\n                            \n                            \n                                    \n                                object\n                            \n                            \n                                    \n                                startTime\n                            \n                            \n                                    \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        endTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/calendar/entities/nylas-free-busy.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        object\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/calendar/entities/nylas-free-busy.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        startTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/calendar/entities/nylas-free-busy.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/calendar/entities/nylas-free-busy.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNumber, IsString, ValidateNested } from 'class-validator';\nimport { Type } from 'class-transformer';\n\nclass TimeSlot {\n  @IsString()\n  object: string;\n\n  @IsString()\n  status: string;\n\n  @IsNumber()\n  startTime: number;\n\n  @IsNumber()\n  endTime: number;\n}\n\nexport class NylasFreeBusy {\n  @IsString()\n  object: string;\n\n  @IsEmail()\n  email: string;\n\n  @ValidateNested({ each: true })\n  @Type(() => TimeSlot)\n  timeSlots: TimeSlot[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAvailabilityDto.html":{"url":"classes/UpdateAvailabilityDto.html","title":"class - UpdateAvailabilityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAvailabilityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/availability/dto/update-availability.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateAvailabilityDto } from './create-availability.dto';\n\nexport class UpdateAvailabilityDto extends PartialType(CreateAvailabilityDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCalendarDto.html":{"url":"classes/UpdateCalendarDto.html","title":"class - UpdateCalendarDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCalendarDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/calendar/dto/update-calendar.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateCalendarDto } from './create-calendar.dto';\n\nexport class UpdateCalendarDto extends PartialType(CreateCalendarDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePaymentDto.html":{"url":"classes/UpdatePaymentDto.html","title":"class - UpdatePaymentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePaymentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment/dto/update-payment.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreatePaymentDto } from './create-payment.dto';\n\nexport class UpdatePaymentDto extends PartialType(CreatePaymentDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSessionRequestDto.html":{"url":"classes/UpdateSessionRequestDto.html","title":"class - UpdateSessionRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSessionRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/session/dto/update-session-request.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateSessionRequestDto } from './create-session-request.dto';\n\nexport class UpdateSessionRequestDto extends PartialType(\n  CreateSessionRequestDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserCredentialsDto.html":{"url":"classes/UserCredentialsDto.html","title":"class - UserCredentialsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserCredentialsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/user-credential.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})@IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/user-credential.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/user-credential.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty } from 'class-validator';\n\nexport class UserCredentialsDto {\n  @ApiProperty({\n    type: String,\n  })\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @ApiProperty({\n    type: String,\n  })\n  @IsNotEmpty()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRegistrationDto.html":{"url":"classes/UserRegistrationDto.html","title":"class - UserRegistrationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRegistrationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/user-registration.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                dateOfBirth\n                            \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        dateOfBirth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsDate()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/user-registration.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})@IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/user-registration.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/user-registration.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/user-registration.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/user-registration.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsEmail, IsNotEmpty, IsDate, MaxDate } from 'class-validator';\n\nexport class UserRegistrationDto {\n  @ApiProperty({\n    type: String,\n  })\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @ApiProperty({\n    type: String,\n  })\n  @IsNotEmpty()\n  password: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsDate()\n  //@MaxDate(require('moment')().subtract(13, 'y').toDate())\n  @Type(() => Date)\n  dateOfBirth: Date;\n\n  @ApiProperty({\n    type: String,\n  })\n  firstName: string;\n\n  @ApiProperty({\n    type: String,\n  })\n  lastName: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WorkSlot.html":{"url":"classes/WorkSlot.html","title":"class - WorkSlot","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WorkSlot\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/availability/entities/availability.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                day\n                            \n                            \n                                endDateTime\n                            \n                            \n                                    \n                                endTime\n                            \n                            \n                                    \n                                localTimezoneDate\n                            \n                            \n                                startDateTime\n                            \n                            \n                                    \n                                startTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        day\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsIn(['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'])\n                        \n                    \n                \n                    \n                        \n                                Defined in src/availability/entities/availability.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endDateTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/availability/entities/availability.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        endTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/availability/entities/availability.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        localTimezoneDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/availability/entities/availability.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startDateTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/availability/entities/availability.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        startTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/availability/entities/availability.entity.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport {\n  IsArray,\n  IsIn,\n  IsOptional,\n  IsString,\n  IsEmail,\n  ValidateNested,\n} from 'class-validator';\nimport { HoomanWorkSlotDto } from '../dto/work-slot.dto';\n\nexport class WorkSlot {\n  @IsString()\n  @IsIn([\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n    'sunday',\n  ])\n  day: string;\n\n  @IsString()\n  localTimezoneDate: string;\n\n  @IsString()\n  startTime: number;\n\n  @IsString()\n  endTime: number;\n\n  startDateTime: Date;\n  endDateTime: Date;\n}\n\nexport class Availability {\n  @IsOptional()\n  @IsString()\n  id: string | null;\n\n  @IsString()\n  timezone: string;\n\n  @IsEmail()\n  email: string;\n\n  @ValidateNested({ each: true })\n  @Type(() => HoomanWorkSlotDto)\n  workSlots: HoomanWorkSlotDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WorkSlotDto.html":{"url":"classes/WorkSlotDto.html","title":"class - WorkSlotDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WorkSlotDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/availability/dto/work-slot.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                endTime\n                            \n                            \n                                startTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        endTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/availability/dto/work-slot.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/availability/dto/work-slot.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class WorkSlotDto {\n  startTime: number;\n  endTime: number;\n}\n\nexport class HoomanWorkSlotDto {\n  day: string;\n  startTime: string;\n  endTime: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            MONGO_DB_CONNECTION_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.constants.ts\n            \n            variable\n            JWT_EXPIRES_IN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.constants.ts\n            \n            variable\n            JWT_SECRET\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.module.ts\n            \n            variable\n            jwtFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.module.ts\n            \n            variable\n            options\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/register-response.dto.ts\n            \n            class\n            RegisterResponseDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/dto/user-credential.dto.ts\n            \n            class\n            UserCredentialsDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/user-registration.dto.ts\n            \n            class\n            UserRegistrationDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/availability/availability.service.ts\n            \n            injectable\n            AvailabilityService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/availability/availability.service.ts\n            \n            function\n            getMonterreyOffset\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/availability/availability.service.ts\n            \n            function\n            getNow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/availability/availability.service.ts\n            \n            function\n            prependZero\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/availability/availability.service.ts\n            \n            variable\n            availability\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/availability/availability.service.ts\n            \n            variable\n            availableDays\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/availability/availability.service.ts\n            \n            variable\n            availableHours\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/availability/dto/create-availability.dto.ts\n            \n            class\n            CreateAvailabilityDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/availability/dto/free-slot.dto.ts\n            \n            class\n            FreeSlotDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/availability/dto/guest-free-slot.dto.ts\n            \n            class\n            GuestFreeSlotDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/availability/dto/update-availability.dto.ts\n            \n            class\n            UpdateAvailabilityDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/availability/dto/work-slot.dto.ts\n            \n            class\n            HoomanWorkSlotDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/availability/dto/work-slot.dto.ts\n            \n            class\n            WorkSlotDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/availability/entities/availability.entity.ts\n            \n            class\n            Availability\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/availability/entities/availability.entity.ts\n            \n            class\n            WorkSlot\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/calendar/calendar.controller.ts\n            \n            controller\n            CalendarController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/calendar/calendar.service.ts\n            \n            injectable\n            CalendarService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/calendar/calendar.service.ts\n            \n            variable\n            kebabCase\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/calendar/calendar.service.ts\n            \n            variable\n            nylas\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/calendar/calendar.service.ts\n            \n            variable\n            Nylas\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/calendar/dto/create-calendar.dto.ts\n            \n            class\n            CreateCalendarDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/calendar/dto/update-calendar.dto.ts\n            \n            class\n            UpdateCalendarDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/calendar/entities/calendar.entity.ts\n            \n            class\n            Calendar\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/calendar/entities/nylas-free-busy.entity.ts\n            \n            class\n            NylasFreeBusy\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/calendar/entities/nylas-free-busy.entity.ts\n            \n            class\n            TimeSlot\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/date-time/dto/date-time.dto.ts\n            \n            class\n            DateTimeDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/encryption/encryption.service.ts\n            \n            injectable\n            EncryptionService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/free-slot/dto/busy-slot.dto.ts\n            \n            class\n            BusySlotDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/free-slot/free-slot.controller.ts\n            \n            controller\n            FreeSlotController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/free-slot/free-slot.service.ts\n            \n            injectable\n            FreeSlotService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/meeting/dto/create-booking.response.ts\n            \n            class\n            BookRequestResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/meeting/dto/create-booking-request.dto.ts\n            \n            class\n            CreateMeetingRequestDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/meeting/dto/create-meeting-result.dto.ts\n            \n            class\n            CreateMeetingResultDto\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/meeting/entities/meeting.schema.ts\n            \n            interface\n            Meeting\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/meeting/entities/meeting.schema.ts\n            \n            variable\n            MeetingSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/meeting/meeting.controller.ts\n            \n            controller\n            MeetingController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/meeting/meeting.service.ts\n            \n            injectable\n            MeetingService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/notification/dto/send-notification-request.dto.ts\n            \n            class\n            SendNotificationRequestDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/notification/notification.service.ts\n            \n            injectable\n            NotificationService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/notification/notification.service.ts\n            \n            variable\n            nylas\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/notification/notification.service.ts\n            \n            variable\n            Nylas\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/notification/notification.service.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/payment/dto/create-payment.dto.ts\n            \n            class\n            CreatePaymentDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/payment/dto/session-completed.dto.ts\n            \n            class\n            SessionCompletedDto\n            \n                0 %\n                (0/48)\n            \n        \n        \n            \n                \n                src/payment/dto/update-payment.dto.ts\n            \n            class\n            UpdatePaymentDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/payment/entities/payment.entity.ts\n            \n            class\n            Payment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/payment/payment.controller.ts\n            \n            controller\n            PaymentController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/payment/payment.service.ts\n            \n            injectable\n            PaymentService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/payment/payment.service.ts\n            \n            variable\n            stripe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/session/decorators/session-info.decorator.ts\n            \n            variable\n            SessionInfo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/session/dto/create-session-request.dto.ts\n            \n            class\n            CreateSessionRequestDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/session/dto/update-session-request.dto.ts\n            \n            class\n            UpdateSessionRequestDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/session/entities/session.interface.ts\n            \n            interface\n            ISession\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/session/entities/session.schema.ts\n            \n            variable\n            SessionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/session/session.service.ts\n            \n            injectable\n            SessionService\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/axios : ^3.0.0\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.1.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/mongoose : ^10.0.1\n        \n            @nestjs/passport : ^10.0.0\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.0.4\n        \n            @types/bcrypt : ^5.0.0\n        \n            axios : ^1.4.0\n        \n            bcrypt : ^5.1.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            dotenv : ^16.3.1\n        \n            luxon : ^3.3.0\n        \n            mongoose : ^7.4.1\n        \n            nylas : ^6.10.0\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n        \n            stripe : ^12.10.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            getMonterreyOffset   (src/.../availability.service.ts)\n                        \n                        \n                            getNow   (src/.../availability.service.ts)\n                        \n                        \n                            prependZero   (src/.../availability.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/availability/availability.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getMonterreyOffset\n                        \n                    \n                \n            \n            \n                \ngetMonterreyOffset()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNow\n                        \n                    \n                \n            \n            \n                \ngetNow()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prependZero\n                        \n                    \n                \n            \n            \n                \nprependZero(time)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AvailabilityModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CalendarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DateTimeModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EncryptionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FreeSlotModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MeetingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NotificationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaymentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SessionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AvailabilityModule\n\n\n\ncluster_AvailabilityModule_exports\n\n\n\ncluster_AvailabilityModule_providers\n\n\n\ncluster_CalendarModule\n\n\n\ncluster_CalendarModule_exports\n\n\n\ncluster_CalendarModule_providers\n\n\n\ncluster_EncryptionModule\n\n\n\ncluster_EncryptionModule_exports\n\n\n\ncluster_FreeSlotModule\n\n\n\ncluster_FreeSlotModule_providers\n\n\n\ncluster_MeetingModule\n\n\n\ncluster_MeetingModule_providers\n\n\n\ncluster_NotificationModule\n\n\n\ncluster_NotificationModule_exports\n\n\n\ncluster_NotificationModule_providers\n\n\n\ncluster_PaymentModule\n\n\n\ncluster_PaymentModule_providers\n\n\n\ncluster_SessionModule\n\n\n\ncluster_SessionModule_exports\n\n\n\ncluster_SessionModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAvailabilityModule\n\nAvailabilityModule\n\nAppModule -->\n\nAvailabilityModule->AppModule\n\n\n\n\n\nAvailabilityService \n\nAvailabilityService \n\nAvailabilityService  -->\n\nAvailabilityModule->AvailabilityService \n\n\n\n\n\nCalendarModule\n\nCalendarModule\n\nAppModule -->\n\nCalendarModule->AppModule\n\n\n\n\n\nCalendarService \n\nCalendarService \n\nCalendarService  -->\n\nCalendarModule->CalendarService \n\n\n\n\n\nDateTimeModule\n\nDateTimeModule\n\nAppModule -->\n\nDateTimeModule->AppModule\n\n\n\n\n\nFreeSlotModule\n\nFreeSlotModule\n\n\n\nMeetingModule\n\nMeetingModule\n\nMeetingModule -->\n\nFreeSlotModule->MeetingModule\n\n\n\nAppModule -->\n\nFreeSlotModule->AppModule\n\n\n\n\n\nNotificationModule\n\nNotificationModule\n\nNotificationModule -->\n\nMeetingModule->NotificationModule\n\n\n\nAppModule -->\n\nMeetingModule->AppModule\n\n\n\n\n\nPaymentModule\n\nPaymentModule\n\nPaymentModule -->\n\nNotificationModule->PaymentModule\n\n\n\nAppModule -->\n\nNotificationModule->AppModule\n\n\n\n\n\nNotificationService \n\nNotificationService \n\nNotificationService  -->\n\nNotificationModule->NotificationService \n\n\n\nAppModule -->\n\nPaymentModule->AppModule\n\n\n\n\n\nSessionModule\n\nSessionModule\n\nAuthModule -->\n\nSessionModule->AuthModule\n\n\n\nFreeSlotModule -->\n\nSessionModule->FreeSlotModule\n\n\n\nAppModule -->\n\nSessionModule->AppModule\n\n\n\n\n\nSessionService \n\nSessionService \n\nSessionService  -->\n\nSessionModule->SessionService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nEncryptionModule\n\nEncryptionModule\n\nAuthModule -->\n\nEncryptionModule->AuthModule\n\n\n\nSessionModule -->\n\nEncryptionModule->SessionModule\n\n\n\n\n\nEncryptionService \n\nEncryptionService \n\nEncryptionService  -->\n\nEncryptionModule->EncryptionService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nEncryptionService\n\nEncryptionService\n\nAuthModule -->\n\nEncryptionService->AuthModule\n\n\n\nEncryptionModule -->\n\nEncryptionService->EncryptionModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nAvailabilityService\n\nAvailabilityService\n\nAvailabilityModule -->\n\nAvailabilityService->AvailabilityModule\n\n\n\nFreeSlotModule -->\n\nAvailabilityService->FreeSlotModule\n\n\n\n\n\nCalendarService\n\nCalendarService\n\nCalendarModule -->\n\nCalendarService->CalendarModule\n\n\n\nFreeSlotModule -->\n\nCalendarService->FreeSlotModule\n\n\n\n\n\nFreeSlotService\n\nFreeSlotService\n\nFreeSlotModule -->\n\nFreeSlotService->FreeSlotModule\n\n\n\nMeetingModule -->\n\nFreeSlotService->MeetingModule\n\n\n\n\n\nMeetingService\n\nMeetingService\n\nMeetingModule -->\n\nMeetingService->MeetingModule\n\n\n\nNotificationModule -->\n\nMeetingService->NotificationModule\n\n\n\n\n\nNotificationService\n\nNotificationService\n\nNotificationModule -->\n\nNotificationService->NotificationModule\n\n\n\n\n\nPaymentService\n\nPaymentService\n\nPaymentModule -->\n\nPaymentService->PaymentModule\n\n\n\n\n\nSessionService\n\nSessionService\n\nSessionModule -->\n\nSessionService->SessionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    28 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            availability   (src/.../availability.service.ts)\n                        \n                        \n                            availableDays   (src/.../availability.service.ts)\n                        \n                        \n                            availableHours   (src/.../availability.service.ts)\n                        \n                        \n                            JWT_EXPIRES_IN   (src/.../auth.constants.ts)\n                        \n                        \n                            JWT_SECRET   (src/.../auth.constants.ts)\n                        \n                        \n                            jwtFactory   (src/.../auth.module.ts)\n                        \n                        \n                            kebabCase   (src/.../calendar.service.ts)\n                        \n                        \n                            MeetingSchema   (src/.../meeting.schema.ts)\n                        \n                        \n                            MONGO_DB_CONNECTION_URL   (src/.../app.module.ts)\n                        \n                        \n                            nylas   (src/.../calendar.service.ts)\n                        \n                        \n                            nylas   (src/.../notification.service.ts)\n                        \n                        \n                            Nylas   (src/.../calendar.service.ts)\n                        \n                        \n                            Nylas   (src/.../notification.service.ts)\n                        \n                        \n                            options   (src/.../auth.module.ts)\n                        \n                        \n                            SessionInfo   (src/.../session-info.decorator.ts)\n                        \n                        \n                            SessionSchema   (src/.../session.schema.ts)\n                        \n                        \n                            stripe   (src/.../payment.service.ts)\n                        \n                        \n                               (src/.../notification.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/availability/availability.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        availability\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Availability()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        availableDays\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'monday',\n  'tuesday',\n  'wednesday',\n  'thursday',\n  //'friday',\n  //'saturday',\n  //'sunday',\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        availableHours\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  { startTime: '17:00', endTime: '18:00' },\n  { startTime: '18:00', endTime: '19:00' },\n  { startTime: '19:00', endTime: '20:00' },\n]\n                    \n                \n\n\n        \n    \n\n    src/auth/auth.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        JWT_EXPIRES_IN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'JWT_EXPIRES_IN'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        JWT_SECRET\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'JWT_SECRET'\n                    \n                \n\n\n        \n    \n\n    src/auth/auth.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (configService: ConfigService) => ({\n  secret: configService.get(JWT_SECRET),\n  signOptions: {\n    expiresIn: configService.get(JWT_EXPIRES_IN),\n  },\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  imports: [ConfigModule],\n  inject: [ConfigService],\n  useFactory: jwtFactory,\n}\n                    \n                \n\n\n        \n    \n\n    src/calendar/calendar.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        kebabCase\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (s: string) =>\n  s\n    .normalize('NFD') // split an accented letter in the base letter and the accent\n    .replace(/[\\u0300-\\u036f]/g, '') // remove all previously split accents\n    .replace(/([a-z])([A-Z])/g, '$1-$2') // split camelCase\n    .replace(/[\\s_]+/g, '-') // replace all spaces and low dash\n    .toLowerCase()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nylas\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Nylas.with(process.env.NYLAS_MAIN_ACCOUNT_ACCESS_TOKEN)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Nylas\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('nylas')\n                    \n                \n\n\n        \n    \n\n    src/meeting/entities/meeting.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MeetingSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n  timestamp: {\n    type: Number,\n    required: true,\n    description: 'The timestamp of the meeting',\n  },\n  type: {\n    type: String,\n    required: true,\n    enum: ['tutoring', 'consultancy'],\n    description: 'The type of meeting',\n  },\n})\n                    \n                \n\n\n        \n    \n\n    src/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MONGO_DB_CONNECTION_URL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${process.env.MONGO_DB_PROTOCOL}://${process.env.MONGO_DB_USER}:${process.env.MONGO_DB_PASSWORD}@${process.env.MONGO_DB_HOST}/?retryWrites=true&w=majority`\n                    \n                \n\n\n        \n    \n\n    src/notification/notification.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        nylas\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Nylas.with(process.env.NYLAS_MAIN_ACCOUNT_ACCESS_TOKEN)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Nylas\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('nylas')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('nylas/lib/models/draft')\n                    \n                \n\n\n        \n    \n\n    src/session/decorators/session-info.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SessionInfo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request.user; // Assuming 'user' property exists on the request object\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/session/entities/session.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SessionSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n  timestamp: {\n    type: Number,\n    required: true,\n  },\n  duration: {\n    type: Number,\n    required: true,\n  },\n  timezone: {\n    type: String,\n    required: false,\n  },\n  // authenticityToken: {\n  //   type: String,\n  //   required: false,\n  // },\n})\n                    \n                \n\n\n        \n    \n\n    src/payment/payment.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        stripe\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Stripe(process.env.STRIPE_SECRET_KEY, {\n  apiVersion: '2022-11-15',\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
